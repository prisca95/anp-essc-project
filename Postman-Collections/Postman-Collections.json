{
	"info": {
		"_postman_id": "1a043390-dd4b-4404-bb01-8238effcce98",
		"name": "ANPWebApi QA Dev",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "account",
					"item": [
						{
							"name": "register",
							"item": [
								{
									"name": "Register Signup",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d954543a-fcb3-4a9d-b2e8-eacf8718c11e",
												"exec": [
													"// Generate a random email address\r",
													"const randomString = Math.random().toString(36).substring(2, 10); // Generate a random string\r",
													"const domain = \"yopmail.com\"; // Define a domain\r",
													"const email = `${randomString}@${domain}`;\r",
													"\r",
													"// Set the email as an environment variable\r",
													"pm.collectionVariables.set(\"signedUpEmail\", email);\r",
													"console.log(email);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Verify that account is created successfully\", function () {\r",
													"    const responseData = pm.response.json(); // Define responseData here\r",
													"    pm.expect(responseData.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseData.data.message).to.be.a(\"string\").and.not.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "7c5f1b8e-d47a-441b-a1c1-8fd48f0b7eec",
												"exec": [
													"var NineDigitsNumber = Math.floor(Math.random()*100000000)\r",
													"var phonenumber = \"80\" + NineDigitsNumber\r",
													"pm.collectionVariables.set(\"phonenumber\", phonenumber)\r",
													"console.log(phonenumber)\r",
													"\r",
													"\r",
													"// Generate a random email address\r",
													"const randomString = Math.random().toString(36).substring(2, 10); // Generate a random string\r",
													"const domain = \"yopmail.com\"; // Define a domain\r",
													"const email = `${randomString}@${domain}`;\r",
													"\r",
													"// Set the email as an environment variable\r",
													"pm.collectionVariables.set(\"signedUpEmail\", email);\r",
													"console.log(email);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "d51f337d-017a-4aea-9915-3b74f42ffdbf",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userName\": \"{{signedUpEmail}}\",\n  \"password\": \"Password12@@\",\n  \"confirmPassword\": \"Password12@@\",\n  \"email\": \"{{signedUpEmail}}\",\n  \"phoneNumber\": \"+234{{phonenumber}}\",\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\":  \"{{$randomLastName}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/register"
									},
									"response": [
										{
											"id": "969bb5f5-0383-4ea7-baeb-7b336cc8ad5b",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\",\n  \"confirmPassword\": \"<string>\",\n  \"email\": \"*}zWl8B@.>cndg.\",\n  \"phoneNumber\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/register"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "4e6b669a-507e-4035-b266-2ca9273b8ca8",
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\",\n  \"confirmPassword\": \"<string>\",\n  \"email\": \"*}zWl8B@.>cndg.\",\n  \"phoneNumber\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/register"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "365a609a-6527-47dd-9db5-c62c7088a436",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\",\n  \"confirmPassword\": \"<string>\",\n  \"email\": \"*}zWl8B@.>cndg.\",\n  \"phoneNumber\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/register"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Already existing email - Register",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d954543a-fcb3-4a9d-b2e8-eacf8718c11e",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Verify that email already exist\", function () {\r",
													"    const responseJSON = pm.response.json();\r",
													"    pm.expect(responseJSON.errorMessage).to.be.a(\"string\").and.not.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "7c5f1b8e-d47a-441b-a1c1-8fd48f0b7eec",
												"exec": [
													"var NineDigitsNumber = Math.floor(Math.random()*100000000)\r",
													"var phonenumber = \"080\" + NineDigitsNumber\r",
													"pm.collectionVariables.set(\"phonenumber\", phonenumber)\r",
													"console.log(phonenumber)"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "d5786767-8a7b-4fd6-88c6-a08ee19105ae",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userName\": \"*}zWl8B@.>cndg.\",\n  \"password\": \"Password12@@\",\n  \"confirmPassword\": \"Password12@@\",\n  \"email\": \"*}zWl8B@.>cndg.\",\n  \"phoneNumber\": \"+234{{phonenumber}}\",\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/register"
									},
									"response": [
										{
											"id": "0d035ecf-5270-4311-b7d2-3b44f3d07039",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\",\n  \"confirmPassword\": \"<string>\",\n  \"email\": \"*}zWl8B@.>cndg.\",\n  \"phoneNumber\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/register"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "e3cd1af1-fd1a-43b1-a763-9f96264cde91",
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\",\n  \"confirmPassword\": \"<string>\",\n  \"email\": \"*}zWl8B@.>cndg.\",\n  \"phoneNumber\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/register"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "21090176-e03b-4535-909b-a38d6840a2a9",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\",\n  \"confirmPassword\": \"<string>\",\n  \"email\": \"*}zWl8B@.>cndg.\",\n  \"phoneNumber\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/register"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Empty fields - Register",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d954543a-fcb3-4a9d-b2e8-eacf8718c11e",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Verify that empty fields are validated\", function () {\r",
													"    const responseJSON = pm.response.json();\r",
													"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
													"       pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "7c5f1b8e-d47a-441b-a1c1-8fd48f0b7eec",
												"exec": [
													"var NineDigitsNumber = Math.floor(Math.random()*100000000)\r",
													"var phonenumber = \"080\" + NineDigitsNumber\r",
													"pm.collectionVariables.set(\"phonenumber\", phonenumber)\r",
													"console.log(phonenumber)"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2a4f49ce-370c-4f67-b891-fd5e98e85ecb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userName\": \"\",\n  \"password\": \"\",\n  \"confirmPassword\": \"\",\n  \"email\": \"\",\n  \"phoneNumber\": \"\",\n  \"firstName\": \"\",\n  \"lastName\": \"\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/register"
									},
									"response": [
										{
											"id": "50f3bc7a-5c1d-4133-b0b9-0c4157ef7ca8",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\",\n  \"confirmPassword\": \"<string>\",\n  \"email\": \"*}zWl8B@.>cndg.\",\n  \"phoneNumber\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/register"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "7458ebcb-c1b4-4871-9c8b-9478478714f7",
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\",\n  \"confirmPassword\": \"<string>\",\n  \"email\": \"*}zWl8B@.>cndg.\",\n  \"phoneNumber\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/register"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "5f181e0c-1772-4121-b6f1-6a633e6e637a",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\",\n  \"confirmPassword\": \"<string>\",\n  \"email\": \"*}zWl8B@.>cndg.\",\n  \"phoneNumber\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/register"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Mismatched password - Register",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d954543a-fcb3-4a9d-b2e8-eacf8718c11e",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Verify that mismatched passwords are flagged\", function () {\r",
													"    const responseJSON = pm.response.json();\r",
													"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
													"     pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "7c5f1b8e-d47a-441b-a1c1-8fd48f0b7eec",
												"exec": [
													"var NineDigitsNumber = Math.floor(Math.random()*100000000)\r",
													"var phonenumber = \"080\" + NineDigitsNumber\r",
													"pm.collectionVariables.set(\"phonenumber\", phonenumber)\r",
													"console.log(phonenumber)"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ae794dc5-c7f9-400f-ae7d-58ec9cc78ffd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userName\": \"{{$randomUserName}}\",\n  \"password\": \"Password12@@\",\n  \"confirmPassword\": \"Password12\",\n  \"email\": \"*}zWl8B@.>cndg.\",\n  \"phoneNumber\": \"+234{{phonenumber}}\",\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/register"
									},
									"response": [
										{
											"id": "dfbfe583-15da-4afb-87ad-ee27751d687e",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\",\n  \"confirmPassword\": \"<string>\",\n  \"email\": \"*}zWl8B@.>cndg.\",\n  \"phoneNumber\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/register"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "c4a1f3c5-c3ce-4b71-929f-2c49e0edec78",
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\",\n  \"confirmPassword\": \"<string>\",\n  \"email\": \"*}zWl8B@.>cndg.\",\n  \"phoneNumber\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/register"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "a1bbeee1-3232-4063-ac76-3f38eef45e6f",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\",\n  \"confirmPassword\": \"<string>\",\n  \"email\": \"*}zWl8B@.>cndg.\",\n  \"phoneNumber\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/register"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Invalid Email - Register",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d954543a-fcb3-4a9d-b2e8-eacf8718c11e",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Status code name has string\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Verify that invalid email are flagged\", function () {\r",
													"    const responseJSON = pm.response.json();\r",
													"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
													"     pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "7c5f1b8e-d47a-441b-a1c1-8fd48f0b7eec",
												"exec": [
													"var NineDigitsNumber = Math.floor(Math.random()*100000000)\r",
													"var phonenumber = \"080\" + NineDigitsNumber\r",
													"pm.collectionVariables.set(\"phonenumber\", phonenumber)\r",
													"console.log(phonenumber)"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "85262ebf-e199-4d0b-a155-a06a60fc44f6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userName\": \"{{$randomUserName}}\",\n  \"password\": \"Password12@@\",\n  \"confirmPassword\": \"Password12@@\",\n  \"email\": \"*}zWl8B.>cndg.\",\n  \"phoneNumber\": \"+234{{phonenumber}}\",\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/register"
									},
									"response": [
										{
											"id": "a899edfb-641d-4965-aec7-8c58c07c6953",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\",\n  \"confirmPassword\": \"<string>\",\n  \"email\": \"*}zWl8B@.>cndg.\",\n  \"phoneNumber\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/register"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "799a0a5a-21ca-4918-a70c-351cda88e494",
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\",\n  \"confirmPassword\": \"<string>\",\n  \"email\": \"*}zWl8B@.>cndg.\",\n  \"phoneNumber\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/register"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "b134d8d1-a23f-47af-992b-9ab6e92444fa",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\",\n  \"confirmPassword\": \"<string>\",\n  \"email\": \"*}zWl8B@.>cndg.\",\n  \"phoneNumber\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/register"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "27387f2a-5630-4ee6-bc16-d14cab7e0737"
						},
						{
							"name": "confirmEmail",
							"item": [
								{
									"name": "ANP Web Api Features Confirm Email Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "272002fc-6abe-401d-8142-faf6be149400",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Verify that email is confirmed successfully\", function () {\r",
													"    const responseData = pm.response.json();\r",
													"    pm.expect(responseData.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseData.data.message).to.be.a(\"string\").and.not.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "bac92b7a-1cc5-4412-ab3d-3437c0d0414a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"sly@yopmail.com\",//\"{{signedUpEmail}}\",//\"ola@yopmail.com\",\n  \"code\": \"539399\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/confirmEmail"
									},
									"response": [
										{
											"id": "ab4e7c5e-faac-4006-bb6a-908dbb6c4eae",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"code\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/confirmEmail"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "d0b401ab-c592-4a09-9b25-9423e21bfdc8",
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"code\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/confirmEmail"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "9ca59cb7-38e0-4cab-8a06-23278337be90",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"code\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/confirmEmail"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "cada2a45-a972-4990-b8f5-8e2e7c2e2571"
						},
						{
							"name": "login",
							"item": [
								{
									"name": "Success - Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "de80e272-27c8-4bcc-b1dc-a25ee9ae3289",
												"exec": [
													"pm.collectionVariables.set(\"bearerToken\", pm.response.json().data.accessToken);\r",
													"pm.collectionVariables.set(\"refreshToken\", pm.response.json().data.refreshToken);\r",
													"pm.collectionVariables.set(\"userId\", pm.response.json().data.userId);\r",
													"//pm.collectionVariables.set(\"supplierId\", pm.response.json().data.supplierId);\r",
													"//supplier variable is created in the create supplier endpoint\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that login is successful\", function () {\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.data.accessToken).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.data.refreshToken).to.be.a(\"string\").and.not.empty;\r",
													"});\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "9ac2d2fc-ada3-4a78-8b82-2197d67864e6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    //\"email\": \"{{email}}\",\n  \"userName\":  \"varun@yopmail.com\",//\"varun@yopmail.com\",//\"yinka@yopmail.com\",\n  // \"userName\":\"cesaltino.babo@anp.tl\", //initiator\n //  \"userName\": \"abel.saldanha@anp.tl\", //1st approver\n  // \"userName\": \"jaime.ximenes@anp.tl\", //2nd approver\n  \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/login"
									},
									"response": [
										{
											"id": "fc11077c-e0bb-4e10-91b8-30833a411644",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\",\n    \"accessToken\": \"<string>\",\n    \"refreshToken\": \"<string>\",\n    \"role\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"supplierId\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "0a8eb637-efb3-4f11-b98f-58afb1a78732",
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "2458ced5-3126-4224-bb2b-0a43609a7821",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Empty fields - Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "de80e272-27c8-4bcc-b1dc-a25ee9ae3289",
												"exec": [
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that login is successful\", function () {\r",
													"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
													"        pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
													"\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "df3e99dc-2910-4079-a21a-74b823874b2e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    //\"email\": \"{{email}}\",\n  \"userName\": \"\",\n  \"password\": \"\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/login"
									},
									"response": [
										{
											"id": "272c3bbe-1de2-4fcd-ade5-0f44b10d510f",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\",\n    \"accessToken\": \"<string>\",\n    \"refreshToken\": \"<string>\",\n    \"role\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"supplierId\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "af5a65d8-6d9e-4bfc-affb-1db752a6f1d7",
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "83cfd8bd-28c8-4b05-b43f-fc66b56909a9",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Invalid email - Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "de80e272-27c8-4bcc-b1dc-a25ee9ae3289",
												"exec": [
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that login is successful\", function () {\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.errorMessage).to.be.a(\"string\").and.not.empty;\r",
													"   \r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "f0ca49f1-95e9-46fd-9a79-2f85bdb06d34",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    //\"email\": \"{{email}}\",\n  \"userName\": \"Olayopmail.com\",\n  \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/login"
									},
									"response": [
										{
											"id": "2dfbc89f-d4de-4b04-8500-eb2aebc23571",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\",\n    \"accessToken\": \"<string>\",\n    \"refreshToken\": \"<string>\",\n    \"role\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"supplierId\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "48d649f5-fbd1-4ab3-a756-370d83bb5af4",
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "a718c0d6-1b0f-411b-abb7-37bd40440b51",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Invalid password - Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "de80e272-27c8-4bcc-b1dc-a25ee9ae3289",
												"exec": [
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that login is successful\", function () {\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.errorMessage).to.be.a(\"string\").and.not.empty;\r",
													"   \r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "f76d2cde-620d-430e-88eb-2f92d944e069",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    //\"email\": \"{{email}}\",\n  \"userName\": \"Ola@yopmail.com\",\n  \"password\": \"Password12@\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/login"
									},
									"response": [
										{
											"id": "12c2eb6f-7f88-4cc6-8802-9c12c36a2381",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\",\n    \"accessToken\": \"<string>\",\n    \"refreshToken\": \"<string>\",\n    \"role\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"supplierId\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "7c2ee6df-0b77-4b6c-947d-120af8f30867",
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "c5af9c90-3528-46ca-89d0-11a147205b56",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "d0a96331-088d-49a3-a0cc-784153ffe4a7"
						},
						{
							"name": "token",
							"item": [
								{
									"name": "refresh",
									"item": [
										{
											"name": "ANP Web Api Features Login Refresh Token Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6ce4a89c-647e-4878-8d8b-93488b5dfdf0",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
															"\r",
															"pm.test(\"Verify that refresh is successful\", function () {\r",
															"\r",
															"    pm.expect(responseJSON.accessToken).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(responseJSON.refreshToken).to.be.a(\"string\").and.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "932a456e-651e-4007-a1d7-42d1e8fbd21c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "text/plain"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accessToken\": \"{{bearerToken}}\",\n  \"refreshToken\": \"{{refreshToken}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/token/refresh"
											},
											"response": [
												{
													"id": "f9fecb00-5da9-42c8-a1df-363b48e36cc2",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "text/plain"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"accessToken\": \"<string>\",\n  \"refreshToken\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/token/refresh"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{}"
												},
												{
													"id": "8c54fe2b-1928-4cae-b28a-cc489aaa6d22",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"accessToken\": \"<string>\",\n  \"refreshToken\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/token/refresh"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "6b8fb5ec-4581-4fee-961f-84c547c53abb"
								}
							],
							"id": "b0112a43-8204-4725-a6ee-ce443e0ad957"
						},
						{
							"name": "profile",
							"item": [
								{
									"name": "ANP Web Api Features Profile User Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "714e1584-9578-4519-83d1-3d486f09571f",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); \r",
													"\r",
													"pm.test(\"Verify that user profile is returned\", function () {\r",
													"\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.data.email).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.data.userName).to.be.a(\"string\").and.not.empty;\r",
													"        pm.expect(responseJSON.data.phoneNumber).to.be.a(\"string\").and.not.empty;\r",
													"\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "3de459d7-c3bf-4787-bae1-541074c26c58",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": "{{baseUrl}}/api/account/profile"
									},
									"response": [
										{
											"id": "c8d5f6d6-4ecf-4817-b04a-49b070da07c2",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/account/profile"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"email\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"role\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "de17012d-6e52-4a74-b8d0-07bd1d44cd23",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/account/profile"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No auth - Profile User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "714e1584-9578-4519-83d1-3d486f09571f",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "1b0d6940-5e90-4365-802a-aa8b6b7bfafc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": "{{baseUrl}}/api/account/profile"
									},
									"response": [
										{
											"id": "e77496c7-393c-439a-a029-96320d4070fb",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/account/profile"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"email\": \"<string>\",\n    \"userName\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"role\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "bbf8575b-db62-44dc-94c4-f039fa94d7ec",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/account/profile"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "3ba863bf-051c-46aa-b953-7e4805689c83"
						},
						{
							"name": "signout",
							"item": [
								{
									"name": "ANP Web Api Features Sign Out End Point",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aec950ff-47d2-4476-8827-fb03816fafda",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "aaa13c7f-aae5-499f-ba12-859ce9665244",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": "{{baseUrl}}/api/account/signout"
									},
									"response": [
										{
											"id": "5e44eab2-2134-4b1a-8f17-39765c5959e9",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/account/signout"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{}"
										},
										{
											"id": "aa8e0c81-840b-4a0b-b0dd-0bf91af8264e",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/account/signout"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "7f2dc2a8-30d3-4083-909a-a285a084c271"
						},
						{
							"name": "changePassword",
							"item": [
								{
									"name": "Success - Change Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1a68fb7e-f0d8-4794-b8e1-8f3720a594cb",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that user password is changed successfully\", function () {\r",
													"\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
													"    \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "0a418418-2614-43fd-a683-d6049a02f9f3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userId\": \"{{userId}}\",\n  \"oldPassword\": \"Password12@@\",\n  \"newPassword\": \"Password12@\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/changePassword"
									},
									"response": [
										{
											"id": "802a1edd-4a48-4436-a895-f0b1d7576263",
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\",\n  \"oldPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/changePassword"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "a079d9bc-5bf3-489a-9e49-559ef4bbf391",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\",\n  \"oldPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/changePassword"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No auth - Change Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1a68fb7e-f0d8-4794-b8e1-8f3720a594cb",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "cdba0bc7-1524-4d4f-9939-cf63094d65e8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userId\": \"{{userId}}\",\n  \"oldPassword\": \"Password12@@\",\n  \"newPassword\": \"Password12@\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/changePassword"
									},
									"response": [
										{
											"id": "5c7d25ab-9345-47b7-84b5-7bbdc7a411af",
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\",\n  \"oldPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/changePassword"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "b06cb000-d545-4abf-8778-673622745d7c",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\",\n  \"oldPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/changePassword"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Valid duplicate - Change Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1a68fb7e-f0d8-4794-b8e1-8f3720a594cb",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that user password is changed successfully\", function () {\r",
													"\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
													"    \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ef27a4ae-c33e-456b-9a08-8a5a6f1001ec",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userId\": \"{{userId}}\",\n  \"oldPassword\": \"Password12@\",\n  \"newPassword\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/changePassword"
									},
									"response": [
										{
											"id": "73dec4a8-a738-44fc-9226-bf516b659a7b",
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\",\n  \"oldPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/changePassword"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "0292230e-f5e9-406c-9076-7f6a43292639",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\",\n  \"oldPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/changePassword"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Invalid UserId - Change Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1a68fb7e-f0d8-4794-b8e1-8f3720a594cb",
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "195fe1b9-051f-4578-b388-daf550a6eb8e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userId\": \"3d7d0b63-17e9-4d94-8afd-08dd2324\",\n  \"oldPassword\": \"Password12@@\",\n  \"newPassword\": \"Password12@\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/changePassword"
									},
									"response": [
										{
											"id": "447140b3-d653-484c-bc64-b2939004d06b",
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\",\n  \"oldPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/changePassword"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "91e7679b-125d-4a7c-85dd-baea4feddecb",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\",\n  \"oldPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/changePassword"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Empty fields - Change Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1a68fb7e-f0d8-4794-b8e1-8f3720a594cb",
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "43bd5370-dd51-4720-84ac-013d3d5c6df9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userId\": \"\",\n  \"oldPassword\": \"\",\n  \"newPassword\": \"\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/changePassword"
									},
									"response": [
										{
											"id": "1f708b71-8b09-43ab-80df-a1c5c8153e1a",
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\",\n  \"oldPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/changePassword"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "3a4dfdca-47fa-44ee-a432-7ddc4612f99e",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\",\n  \"oldPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/changePassword"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Invalid password complexity - Change Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1a68fb7e-f0d8-4794-b8e1-8f3720a594cb",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that password complexity is met\", function () {\r",
													"\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
													"    \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "1f383c99-1ea3-44b0-b898-553a9eb9e001",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userId\": \"{{userId}}\",\n  \"oldPassword\": \"Password12@@\",\n  \"newPassword\": \"Password12\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/changePassword"
									},
									"response": [
										{
											"id": "7ab7d280-50ae-4db7-bc1c-9f7a3b877842",
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\",\n  \"oldPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/changePassword"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "6933ac80-fea9-4778-858b-0aacdbb50e72",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\",\n  \"oldPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/changePassword"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Invalid old password  - Change Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1a68fb7e-f0d8-4794-b8e1-8f3720a594cb",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that password complexity is met\", function () {\r",
													"\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.errorMessage).to.be.a(\"string\").and.not.empty;\r",
													"    \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "93306a49-fdfc-4c21-a098-55ecf47159a6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"userId\": \"{{userId}}\",\n  \"oldPassword\": \"Password12@\",\n  \"newPassword\": \"Password12@\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/changePassword"
									},
									"response": [
										{
											"id": "91c0bbf1-abb4-4a53-b3fa-b0de8ca8750b",
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\",\n  \"oldPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/changePassword"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "e53dc9b1-16d7-4e29-865b-4d0882e2144d",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userId\": \"<string>\",\n  \"oldPassword\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/changePassword"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "421fc1ae-5bf7-4797-b50e-7c7c2c5aa8bc"
						},
						{
							"name": "forgotPassword",
							"item": [
								{
									"name": "Success - Forget Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f3845014-cee7-4b3d-9c65-4a446bcd4f43",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that user Password Reset info is sent successfully\", function () {\r",
													"\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
													"    \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "1b7fa46d-2a25-4cdc-ac25-efd2cccbee3e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"Ola@yopmail.com\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/forgotPassword"
									},
									"response": [
										{
											"id": "7c6e9388-8b5a-4748-b850-2c5de5dc80c9",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/forgotPassword"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "ad5be9ec-67b5-4681-9009-508be0279c1a",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/forgotPassword"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Non existing email - Forget Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f3845014-cee7-4b3d-9c65-4a446bcd4f43",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that user Password Reset info is not sent if email does not exist\", function () {\r",
													"\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.errorMessage).to.be.a(\"string\").and.not.empty;\r",
													"    \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2db53747-b27a-46f6-9826-2001fafd4b87",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"Olaji@yopmail.com\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/forgotPassword"
									},
									"response": [
										{
											"id": "e8e5a661-0f5b-4b5f-8926-17fd27e9a636",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/forgotPassword"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "e9fc62ad-c17a-4aa3-8597-d067397211ef",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/forgotPassword"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Invalid email -  Forgot Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f3845014-cee7-4b3d-9c65-4a446bcd4f43",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that email is invalid\", function () {\r",
													"\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.errorMessage).to.be.a(\"string\").and.not.empty;\r",
													"    \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "9af808c2-dce1-4e9f-90c8-a00688661e44",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"Olayopmail.com\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/forgotPassword"
									},
									"response": [
										{
											"id": "e0506a9e-d11f-4788-b48c-f07115db44b1",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/forgotPassword"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "85ae8f66-48b3-4e21-87fe-62f34040d7dc",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/forgotPassword"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "9291aec0-1f47-4a63-b27f-5f5071e4b431"
						},
						{
							"name": "resend",
							"item": [
								{
									"name": "otp",
									"item": [
										{
											"name": "ANP Web Api Features Resend Sms Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "38711a43-9159-43f3-a8dd-70e853a9575a",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
															"\r",
															"pm.test(\"Verify that otp is sent successfully\", function () {\r",
															"\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
															"    \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "6848ad59-11f6-44aa-ad70-8f4c3fd6cf5d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"Ola@yopmail.com\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/resend/otp"
											},
											"response": [
												{
													"id": "df47b576-580f-4d50-ae6f-ed51dd1c13c7",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/resend/otp"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "959547a6-5907-4e08-9229-011ff3df0e18",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/resend/otp"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Invalid email - Resend Sms",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "38711a43-9159-43f3-a8dd-70e853a9575a",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
															"\r",
															"pm.test(\"Verify that email is invalid\", function () {\r",
															"\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(responseJSON.errorMessage).to.be.a(\"string\").and.not.empty;\r",
															"    \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "9dd27177-902e-4f59-8576-93745bac7c3b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"Olayopmail.com\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/resend/otp"
											},
											"response": [
												{
													"id": "750474f1-d057-4c5e-9987-8ab4e2a85e4b",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/resend/otp"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "e7456c43-1636-4ae8-aafb-c21f4de0eedc",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/resend/otp"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No email - Resend Sms Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "38711a43-9159-43f3-a8dd-70e853a9575a",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
															"\r",
															"pm.test(\"Verify that email is required\", function () {\r",
															"\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(responseJSON.errorMessage).to.be.a(\"string\").and.not.empty;\r",
															"    \r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "097084fa-13f0-48ca-a351-0db516c49cd7",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/resend/otp"
											},
											"response": [
												{
													"id": "5a473bd0-7d52-4167-bb1e-6ed32dd95c96",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/resend/otp"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "0cdd1e76-0ba9-438a-a020-6ffcb05f18f2",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/resend/otp"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "bc3aeb3b-ae6a-44e7-8e9b-db9ebe9ee523"
								}
							],
							"id": "d56d0b76-376f-4a73-9d66-d51cd8ddddf2"
						},
						{
							"name": "resetPassword",
							"item": [
								{
									"name": "Invalid token - Reset Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "de07c182-99ce-4e84-8623-60b1ca4221a5",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that token is invalid\", function () {\r",
													"\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
													"    \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "95d02444-142c-4927-9af6-aecf95e76852",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"Ola@yopmail.com\",\n  \"token\": \"014376\",\n  \"newPassword\": \"Password12@>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/resetPassword"
									},
									"response": [
										{
											"id": "68d3ae2e-509d-4846-b193-e425e96a16a7",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"token\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/resetPassword"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "db3c9062-f7c7-4041-b184-cc83328655b4",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"token\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/resetPassword"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Invalid email - Reset Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "de07c182-99ce-4e84-8623-60b1ca4221a5",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that user email is invalid\", function () {\r",
													"\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
													"    \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "d562f0ae-c6da-42cb-8cbf-bfe44aeacb99",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"Olayopmail.com\",\n  \"token\": \"014376\",\n  \"newPassword\": \"Password12@>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/resetPassword"
									},
									"response": [
										{
											"id": "56b139cc-58bd-4e24-9a6e-40429e624df9",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"token\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/resetPassword"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "37e8e959-1e27-4d78-9488-8c48a544d580",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"token\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/resetPassword"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Empty fields - Reset Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "de07c182-99ce-4e84-8623-60b1ca4221a5",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that all fields are required\", function () {\r",
													"\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.errorMessage).to.be.a(\"string\").and.not.empty;\r",
													"    \r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "a4d6b395-f7b0-4045-a2fe-9d7b9165a05a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"\",\n  \"token\": \"\",\n  \"newPassword\": \"\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/resetPassword"
									},
									"response": [
										{
											"id": "c591b66c-3bb3-48f6-8066-afa3a6804a34",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"token\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/resetPassword"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "d9a44cde-6383-4298-bf8d-2c974b23133f",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"token\": \"<string>\",\n  \"newPassword\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/resetPassword"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "58262fbb-140a-4526-994f-5f9de7406e9c"
						},
						{
							"name": "menu",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "ANP Web Api Features Menu Create Menu Endpoint",
											"id": "001099b6-eb3f-4cbb-9e7c-34b08db8fa49",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"menuName\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"parentMenuId\": \"<string>\",\n  \"menuUrl\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/menu/create"
											},
											"response": [
												{
													"id": "45836123-284e-4014-95b7-9042aaee7746",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"menuName\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"parentMenuId\": \"<string>\",\n  \"menuUrl\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/menu/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "8f8860f3-dc69-43d1-8754-af04bc524809",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"menuName\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"parentMenuId\": \"<string>\",\n  \"menuUrl\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/menu/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "abf9df6e-0bf4-436d-a38d-1d2db516020e"
								},
								{
									"name": "delete",
									"item": [
										{
											"name": "ANP Web Api Features Menu Delete Menu Endpoint",
											"id": "4c28f4bf-a157-45fe-9e69-e4a2e43ab70d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"menuId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/menu/delete"
											},
											"response": [
												{
													"id": "8903e17a-2f0e-4e99-8a56-5800514a5d4c",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"menuId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/menu/delete"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "6272d529-16c7-4d74-97f1-1940e3f44dc6",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"menuId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/menu/delete"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "5e7943f5-9fde-4697-94f3-9d357c39a2e6"
								},
								{
									"name": "edit",
									"item": [
										{
											"name": "ANP Web Api Features Menu Edit Menu Endpoint",
											"id": "864e8c23-27ff-4252-936e-55bdcdcf0d5b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"menuId\": \"<string>\",\n  \"menuName\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"parentMenuId\": \"<string>\",\n  \"menuUrl\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/menu/edit"
											},
											"response": [
												{
													"id": "ae9614c4-1486-4d55-92f4-58dd8493e259",
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"menuId\": \"<string>\",\n  \"menuName\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"parentMenuId\": \"<string>\",\n  \"menuUrl\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/menu/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "4087486a-8f0e-488a-8de9-1aaf0135fa70",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"menuId\": \"<string>\",\n  \"menuName\": \"<string>\",\n  \"active\": \"<boolean>\",\n  \"parentMenuId\": \"<string>\",\n  \"menuUrl\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/menu/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "8636a82a-2773-441e-8a11-9a3a027c96c9"
								},
								{
									"name": "all",
									"item": [
										{
											"name": "ANP Web Api Features Menu Get All Menu Endpoint",
											"id": "bdc1c7b4-21be-4e6c-ae46-eedad8751deb",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/account/menu/all?pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"account",
														"menu",
														"all"
													],
													"query": [
														{
															"key": "pageNumber",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "628a0acf-8e52-4c9c-ade3-b25975b8b6fc",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/account/menu/all?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"account",
																"menu",
																"all"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"pageNumber\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"totalRecords\": \"<integer>\",\n  \"data\": [\n    {\n      \"menuId\": \"<string>\",\n      \"menuName\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"parentMenu\": {\n        \"value\": \"<Circular reference to #/components/schemas/ANPWebApiFeaturesMenuGetAMenuResponse detected>\"\n      },\n      \"menuUrl\": \"<string>\"\n    },\n    {\n      \"menuId\": \"<string>\",\n      \"menuName\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"parentMenu\": {\n        \"value\": \"<Circular reference to #/components/schemas/ANPWebApiFeaturesMenuGetAMenuResponse detected>\"\n      },\n      \"menuUrl\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"id": "b0a48ac0-142a-4095-a5b2-fbbc5a8eacfc",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/account/menu/all?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"account",
																"menu",
																"all"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "3000968f-6b31-4a77-a677-e3dc1fe81bc8"
								},
								{
									"name": "{menuId}",
									"item": [
										{
											"name": "ANP Web Api Features Menu Get A Menu Endpoint",
											"id": "228dee95-b241-4251-b315-926f3bd486a1",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/account/menu/:menuId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"account",
														"menu",
														":menuId"
													],
													"variable": [
														{
															"id": "a817add6-cbc8-472a-8e8f-d2aa01d71633",
															"key": "menuId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "0218c6e6-ea56-4911-99eb-f64dfe8c05ee",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/account/menu/:menuId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"account",
																"menu",
																":menuId"
															],
															"variable": [
																{
																	"key": "menuId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"menuId\": \"<string>\",\n    \"menuName\": \"<string>\",\n    \"active\": \"<boolean>\",\n    \"parentMenu\": {\n      \"value\": \"<Circular reference to #/components/schemas/ANPWebApiFeaturesMenuGetAMenuResponse detected>\"\n    },\n    \"menuUrl\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "9f3802e1-12af-4192-8e50-4e807b128185",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/account/menu/:menuId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"account",
																"menu",
																":menuId"
															],
															"variable": [
																{
																	"key": "menuId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "719b1d6d-f659-4b8f-8ee7-622ec5ded9fe"
								},
								{
									"name": "mymenu",
									"item": [
										{
											"name": "ANP Web Api Features Menu Get Auth Menu Endpoint",
											"id": "e7112a8e-0f9d-4d67-936e-e224948a5e39",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": "{{baseUrl}}/api/account/menu/mymenu"
											},
											"response": [
												{
													"id": "572f51e4-9287-4248-ac4d-776c2c4b3fcf",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": "{{baseUrl}}/api/account/menu/mymenu"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": [\n    {\n      \"menuId\": \"<string>\",\n      \"menuName\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"parentMenu\": {\n        \"value\": \"<Circular reference to #/components/schemas/ANPWebApiFeaturesMenuGetAuthMenuResponse detected>\"\n      },\n      \"menuUrl\": \"<string>\"\n    },\n    {\n      \"menuId\": \"<string>\",\n      \"menuName\": \"<string>\",\n      \"active\": \"<boolean>\",\n      \"parentMenu\": {\n        \"value\": \"<Circular reference to #/components/schemas/ANPWebApiFeaturesMenuGetAuthMenuResponse detected>\"\n      },\n      \"menuUrl\": \"<string>\"\n    }\n  ],\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "6366f1f8-94a5-461f-853d-cf663bd9c384",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": "{{baseUrl}}/api/account/menu/mymenu"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "3d7bfb27-c0fb-4ca3-8ce0-3faaddfdafdd"
								}
							],
							"id": "3d83715a-4ca0-4975-84a3-a50638058ac9"
						},
						{
							"name": "externallogin",
							"item": [
								{
									"name": "ANP Web Api Features External Login Endpoint",
									"id": "a9dbd658-6692-4576-be42-891e2cc62ae9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/account/externallogin?provider=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"account",
												"externallogin"
											],
											"query": [
												{
													"key": "provider",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "ec9036d8-7607-4761-9894-be6c95921a96",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/account/externallogin?provider=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"account",
														"externallogin"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "provider",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{}"
										},
										{
											"id": "2ec0a6b8-90e8-439e-9bc8-4b641a09bae4",
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/problem+json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/account/externallogin?provider=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"account",
														"externallogin"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "provider",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "7e0caf0c-b7de-498c-b341-3b3a9bcfe7ed",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/account/externallogin?provider=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"account",
														"externallogin"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "provider",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "2d34117c-a555-4ee4-899c-e34a304b09ca"
						},
						{
							"name": "google",
							"item": [
								{
									"name": "ANP Web Api Features External Login Google Endpoint",
									"id": "3bf29a66-9f35-48dc-940f-972bf2a0ab66",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"token\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/google"
									},
									"response": [
										{
											"id": "4837143e-84d1-42e5-b5bc-c8d4de1ed797",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"token\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/google"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "205cd64d-48a9-4b6f-9e13-476e1074d964",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"token\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/google"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "b397dc6a-ceed-47c8-b621-1bfc1d85cd88"
						},
						{
							"name": "externallogincallback",
							"item": [
								{
									"name": "ANP Web Api Features External Login Callback Endpoint",
									"id": "ecb9b12c-b3dc-4be7-8a32-9ca8754fb4a1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": "{{baseUrl}}/api/account/externallogincallback"
									},
									"response": [
										{
											"id": "2af1868c-3773-4434-8d7f-cf4c85382a48",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": "{{baseUrl}}/api/account/externallogincallback"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "b667aed9-22e9-4960-afda-cd1eafb3a310",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": "{{baseUrl}}/api/account/externallogincallback"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "9a1718b6-22cc-49ac-b1f1-7026d96b88a3"
						},
						{
							"name": "employee",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Empty fields - Create Employee Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a6d6aafc-12e0-4cef-a085-41b00140b909",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that employee Id is invalid\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "d58389eb-371e-4110-8a05-14e0919ee8d3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"employeeId\": \"\", //Get All Users Endpoint\n  \"roleId\": \"\",//get roles endpoint\n  \"phoneNumber\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/employee/create"
											},
											"response": [
												{
													"id": "f20e9ca6-8220-47b8-843d-75e37c6ea739",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"employeeId\": \"<string>\",\n  \"roleId\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/employee/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "7e73cb4a-9beb-4f64-9493-742f650cdbfc",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"employeeId\": \"<string>\",\n  \"roleId\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/employee/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Create Employee",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8031ce5b-4a70-427e-8ade-c9ea0af8a26b",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "0f120d67-501b-4c72-bb0c-ab76b6d9874c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"employeeId\": \"<string>\", //Get All Users Endpoint\n  \"roleId\": \"<string>\",//get roles endpoint\n  \"phoneNumber\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/employee/create"
											},
											"response": [
												{
													"id": "41529ad4-a699-4718-8800-b58f252bcda1",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"employeeId\": \"<string>\",\n  \"roleId\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/employee/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "86e12b69-1853-48bc-b48f-91c22bdbc123",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"employeeId\": \"<string>\",\n  \"roleId\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/employee/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "b57fcfb4-3d52-4069-a02e-b72213281ed3"
								},
								{
									"name": "remove",
									"item": [
										{
											"name": "No EmployeeId - Delete Employee Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f841158b-481c-4c29-ba28-83676d81d8fd",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that employee Id is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "a40fe91e-2621-405f-b335-ef746240734f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"employeeId\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/employee/remove"
											},
											"response": [
												{
													"id": "3b5a1753-ad03-412d-8140-407b52d35c7a",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"employeeId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/employee/remove"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "16859393-2894-4907-b6a0-50603cba20fe",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"employeeId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/employee/remove"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Delete Employee",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fc45cd54-4124-447c-93ff-f99e061f5a30",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "b16e8c97-4885-4221-bd91-843f4419bead",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"employeeId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/employee/remove"
											},
											"response": [
												{
													"id": "b876d5c9-b59e-446b-833c-59477b01e9d0",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"employeeId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/employee/remove"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "cb15134b-b74a-41fb-9f65-d693b986a17f",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"employeeId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/employee/remove"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "b992f570-7c12-4d04-b960-69352993621c"
								},
								{
									"name": "edit",
									"item": [
										{
											"name": "ANP Web Api Features AD Edit Employee Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b80ab9a6-106f-4638-b0b6-57598bc386bc",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that employee Id is invalid\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "613032cd-8689-4cd8-8d66-055f7af3c124",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"employeeId\": \"\",\n  \"roleId\": \"\",\n  \"phoneNumber\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/employee/edit"
											},
											"response": [
												{
													"id": "036e5b18-8abd-4e58-812f-50e2a731ddab",
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"employeeId\": \"<string>\",\n  \"roleId\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/employee/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "4259d248-384c-4ff9-b92a-a3925c9e0fd6",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"employeeId\": \"<string>\",\n  \"roleId\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/employee/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Edit Employee",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "09ab863a-aaa9-4cf4-8011-55ff1137a10e",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "f8613fa4-498e-4163-8a29-67f61aa1dbcc",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"employeeId\": \"<string>\",\n  \"roleId\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/employee/edit"
											},
											"response": [
												{
													"id": "9687943b-76c4-48ce-b504-220a362c6941",
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"employeeId\": \"<string>\",\n  \"roleId\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/employee/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "978bbef0-ca9f-4797-bed1-86a5251d42a4",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"employeeId\": \"<string>\",\n  \"roleId\": \"<string>\",\n  \"phoneNumber\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/employee/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "7cdf915e-9c74-4915-b60a-db1542e114f8"
								},
								{
									"name": "{employeeId}",
									"item": [
										{
											"name": "No EmployeeId - Get An Employee Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1811c4dc-f47e-4d76-8a30-1a8829ab4783",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that employee Id is invalid\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "d9e06d07-a90e-4c6a-971c-c88dc1649a88",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/account/employee/:employeeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"account",
														"employee",
														":employeeId"
													],
													"variable": [
														{
															"key": "employeeId",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "9a83e560-8b66-41d1-b9ef-b65361df27b8",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/account/employee/:employeeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"account",
																"employee",
																":employeeId"
															],
															"variable": [
																{
																	"key": "employeeId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"employeeId\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"department\": \"<string>\",\n    \"roleId\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "c2deb7dc-a29e-4048-a6bd-06163ccab6df",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/account/employee/:employeeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"account",
																"employee",
																":employeeId"
															],
															"variable": [
																{
																	"key": "employeeId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Get A Employee",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ca53e694-cc9f-4094-be5d-ecfc4b0f43dc",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "dbdab62d-7137-4b23-ae57-010407832fc4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/account/employee/:employeeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"account",
														"employee",
														":employeeId"
													],
													"variable": [
														{
															"key": "employeeId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "db9a6a3d-c923-4ee4-8b7b-caea32510add",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/account/employee/:employeeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"account",
																"employee",
																":employeeId"
															],
															"variable": [
																{
																	"key": "employeeId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"employeeId\": \"<string>\",\n    \"email\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"department\": \"<string>\",\n    \"roleId\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "88fc095b-0aab-4dd5-b204-4ca4f9d23423",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/account/employee/:employeeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"account",
																"employee",
																":employeeId"
															],
															"variable": [
																{
																	"key": "employeeId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "5b0f1ebe-3805-42a2-9f94-43b91dadb546"
								},
								{
									"name": "list",
									"item": [
										{
											"name": "Success - Get All Employees Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3c867a96-d7b1-4a16-9f57-ff173fc72ed4",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var employees = responseJSON;\r",
															"\r",
															"pm.test(\"Verify that employees are returned\", function () {\r",
															"    pm.expect(employees[0].employeeId).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(employees[0].fullName).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(employees[0].phoneNumber).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(employees[0].email).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "b9d72fef-daf5-4cd2-8354-26a7795a27e3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": "{{baseUrl}}/api/account/employee/list"
											},
											"response": [
												{
													"id": "3c61bb15-1dd3-42e6-9846-415f80332e21",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": "{{baseUrl}}/api/account/employee/list"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "[\n  {\n    \"employeeId\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"department\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  {\n    \"employeeId\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"department\": \"<string>\",\n    \"email\": \"<string>\"\n  }\n]"
												},
												{
													"id": "9198bffd-9b36-416a-ad4f-075dd57af16b",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": "{{baseUrl}}/api/account/employee/list"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Get All Employees",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a1ff4da9-083d-4bf0-b2d6-d7a9f5854a31",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "875e21b1-1b0e-4ea6-99c3-2f3dc42bfa6e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": "{{baseUrl}}/api/account/employee/list"
											},
											"response": [
												{
													"id": "5740e8cb-3251-4abd-93dd-a34cc845b96c",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": "{{baseUrl}}/api/account/employee/list"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "[\n  {\n    \"employeeId\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"department\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  {\n    \"employeeId\": \"<string>\",\n    \"fullName\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"department\": \"<string>\",\n    \"email\": \"<string>\"\n  }\n]"
												},
												{
													"id": "89ce8664-49a8-4c03-95c0-4a434a1ac186",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": "{{baseUrl}}/api/account/employee/list"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "7ba24b31-72e2-4aa9-b449-09bb4d5fbd51"
								}
							],
							"id": "0fed2c6a-f18d-495c-b0e4-3ccb79a4ab37"
						},
						{
							"name": "role",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Empty fields - Create Role Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5b604d90-f651-49e9-be7f-c0d0c38b7e1d",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that employee Id is invalid\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "b428fc1a-7d51-4d39-815b-fc9b2a521f50",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"roleName\": \"\",\n  \"menuIds\": [\n    \"\",\n    \"\"\n  ],\n  \"permissions\": [\n    \"\",\n    \"\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/role/create"
											},
											"response": [
												{
													"id": "acf4bdda-6728-4f82-9c7c-ed6cfb7747d5",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"roleName\": \"<string>\",\n  \"menuIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/role/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "982c20d0-79c3-4323-a10d-7807c6db074c",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"roleName\": \"<string>\",\n  \"menuIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/role/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Create Role",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "fcd587ec-10c3-414e-bd1b-41467d6d8cbe",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "e15a250e-f3f4-434a-b271-5e39564d1d3e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"roleName\": \"<string>\",\n  \"menuIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/role/create"
											},
											"response": [
												{
													"id": "a88ebcc3-f9a2-4844-bb9c-a5bdb74f5292",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"roleName\": \"<string>\",\n  \"menuIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/role/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "36d5ed5c-4675-48aa-8673-b3aaf3a5a689",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"roleName\": \"<string>\",\n  \"menuIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/role/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "8a21738d-566a-4485-b886-6a472f61b836"
								},
								{
									"name": "delete",
									"item": [
										{
											"name": "Empty fields - Delete Role Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d1791b4b-132a-45b2-a660-5b9ff927a6d9",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that role Id is invalid\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "8330e0f9-2261-4671-bbfa-9316211d93f2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"roleId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/role/delete"
											},
											"response": [
												{
													"id": "38941501-7b27-4ee7-9115-55a35ac82c0d",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"roleId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/role/delete"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "af5bf0c5-4d42-4d62-a02a-5eb9e8ef0278",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"roleId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/role/delete"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Delete Role",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "19be4dd1-c81f-4e21-82fe-cbb700f26905",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "c66f091a-dbb4-44be-9909-28f22074c493",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"roleId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/role/delete"
											},
											"response": [
												{
													"id": "fcdf8ce3-cc87-409c-b7d1-89ba9e402302",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"roleId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/role/delete"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "ab3075c5-cbb9-4281-bb5b-ea612862b4a5",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"roleId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/role/delete"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "66d48b3e-b4b5-47b5-a32c-efd9f0cb7e9e"
								},
								{
									"name": "edit",
									"item": [
										{
											"name": "Empty fields - Edit Role Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "98160dea-4f88-46bd-a041-8d25d9a640ef",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that role Id is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "52cb34bc-8db3-4d35-b885-72a1a7aed223",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"roleId\": \"\",\n  \"roleName\": \"\",\n  \"menuIds\": [\n    \"\",\n    \"\"\n  ],\n  \"permissions\": [\n    \"\",\n    \"\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/role/edit"
											},
											"response": [
												{
													"id": "c3fb9a86-68c1-434e-ad0d-04699fe22050",
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"roleId\": \"<string>\",\n  \"roleName\": \"<string>\",\n  \"menuIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/role/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "9dd25dcb-9b87-4d79-93a7-10394265042e",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"roleId\": \"<string>\",\n  \"roleName\": \"<string>\",\n  \"menuIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/role/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Edit Role",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8f3b8988-7f67-4ebd-abd0-0941da38da08",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "2bfa21b4-0f32-4d97-9fcb-a4f66355e881",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"roleId\": \"<string>\",\n  \"roleName\": \"<string>\",\n  \"menuIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/role/edit"
											},
											"response": [
												{
													"id": "f82f08da-cfe1-431d-9d27-1a9aff7ff9a1",
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"roleId\": \"<string>\",\n  \"roleName\": \"<string>\",\n  \"menuIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/role/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "ba8ff4d7-eccb-4e84-bb10-f197472eec6d",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"roleId\": \"<string>\",\n  \"roleName\": \"<string>\",\n  \"menuIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"permissions\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/account/role/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "02809a0a-e588-472f-8705-f4b22b1d2b70"
								},
								{
									"name": "{roleId}",
									"item": [
										{
											"name": "ANP Web Api Features Roles Get A Role Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a55b5f98-a22a-4b94-89f8-4d06bed3fd7b",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"\r",
															"pm.test(\"Verify that roles is returned\", function () {\r",
															"    pm.expect(responseJSON.data.roleId).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(responseJSON.data.roleName).to.be.a(\"string\").and.not.be.empty;\r",
															"  \r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "4aeff08d-8fc4-459d-9de5-464132ae0267",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/account/role/:roleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"account",
														"role",
														":roleId"
													],
													"variable": [
														{
															"key": "roleId",
															"value": "cc8d2d34-5663-481f-198a-08dcef4897b6",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "ff32bbd8-eb04-4e6a-a722-6305e6b63f81",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/account/role/:roleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"account",
																"role",
																":roleId"
															],
															"variable": [
																{
																	"key": "roleId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"roleId\": \"<string>\",\n    \"roleName\": \"<string>\",\n    \"menuIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"permissions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "9157aea7-b1f8-4cca-8c2f-99a93fb7c144",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/account/role/:roleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"account",
																"role",
																":roleId"
															],
															"variable": [
																{
																	"key": "roleId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Get A Role",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e87df504-0cda-4153-88ca-df7368d34c75",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "db535255-a5bc-4657-8506-d2a50ca55b5d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/account/role/:roleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"account",
														"role",
														":roleId"
													],
													"variable": [
														{
															"key": "roleId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "42ccb121-0b3b-4d46-b567-2fc1e4e24153",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/account/role/:roleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"account",
																"role",
																":roleId"
															],
															"variable": [
																{
																	"key": "roleId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"roleId\": \"<string>\",\n    \"roleName\": \"<string>\",\n    \"menuIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"permissions\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "a89c3415-64ca-40e6-8d49-31ba8a662b12",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/account/role/:roleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"account",
																"role",
																":roleId"
															],
															"variable": [
																{
																	"key": "roleId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "4a8e3974-ca44-4f6a-9db5-f9896f2daa9f"
								}
							],
							"id": "6e0d622d-8a15-4e57-aadd-9bcd74e87265"
						},
						{
							"name": "permissions",
							"item": [
								{
									"name": "ANP Web Api Features Roles Get All Permissions Endpoint",
									"id": "edf0de70-d354-4149-afd7-677d74b28687",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": "{{baseUrl}}/api/account/permissions"
									},
									"response": [
										{
											"id": "d6a6ade5-7bf3-4d23-adcc-69dbe164cbca",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/account/permissions"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"ipsum_7\": \"<string>\",\n  \"tempor_b\": \"<string>\"\n}"
										},
										{
											"id": "ccb7a025-09a7-4775-8590-50d2b6da1825",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/account/permissions"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No auth - Get All Permissions",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1727a2bd-9072-4654-b7d7-75113161b4a0",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "9fda14a7-f609-4f21-9eb5-09efb9df1553",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": "{{baseUrl}}/api/account/permissions"
									},
									"response": [
										{
											"id": "f6a5538c-d039-432c-9f32-2f7d20444de8",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/account/permissions"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"ipsum_7\": \"<string>\",\n  \"tempor_b\": \"<string>\"\n}"
										},
										{
											"id": "d95a8745-2d9d-410f-a5e4-99264c924599",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/account/permissions"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "647eda84-a7ae-4332-8b04-1c3ea993d7b1"
						},
						{
							"name": "list",
							"item": [
								{
									"name": "Anp Supplier Api Features Get Suppliers Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f928f45c-983b-426a-bbe1-c07867f6c5c7",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var list = responseJSON;\r",
													"\r",
													"pm.test(\"Verify that suppliers are returned\", function () {\r",
													"    pm.expect(list.data[0].companyId).to.be.a(\"string\").and.not.be.empty;\r",
													"    pm.expect(list.data[0].businessName).to.be.a(\"string\").and.not.be.empty;\r",
													"    pm.expect(list.data[0].dateOfEstablishment).to.be.a(\"string\").and.not.be.empty;\r",
													"    pm.expect(list.data[0].streetName).to.be.a(\"string\").and.not.be.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "83e0508f-db37-47ca-a968-5536716faa88",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/supplier/list?pageNumber=1&pageSize=30",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"supplier",
												"list"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "1",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "30",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "a2c9d39c-de64-47a5-8c2a-acf744af04d9",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/list?pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"list"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "aa9c11a9-c970-4fd6-8a23-b6e32834c1a4",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/list?pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"list"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No auth - Get Suppliers",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0cc3487a-2ded-4b88-b82f-a248bb016a76",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "0d121eaa-6ad0-4a26-bd0a-cad8a7bd0cc7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/supplier/list?pageNumber=1&pageSize=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"supplier",
												"list"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "1",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "10",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "6e34f1fa-1a5d-481f-9cdd-3b8cee9d4536",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/list?pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"list"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "b4b564bb-4b1d-4a8e-af4e-7e9f5aaea0af",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/list?pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"list"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "9a8da981-04fa-4786-b8d6-fb2ac1bb44c3"
						},
						{
							"name": "industry",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Empty fields - Create Industry Endpoint1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b188e0d5-b43a-4e33-9e66-3b1b27cec893",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that industry name is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "13fb55e6-55bb-4f6d-a16f-30d84703b3f9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n // \"industryId\": \"\",\n  \"industryName\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/industry/create"
											},
											"response": [
												{
													"id": "68352678-6f5a-47f8-88e8-84ee57a45e5a",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"industryId\": \"<string>\",\n  \"industryName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/industry/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "dd0458d1-83d1-488d-ac26-90d827ba9fc1",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"industryId\": \"<string>\",\n  \"industryName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/industry/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Create Industry",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "136b3337-33bc-4454-a71c-654688320640",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "c0cb85a1-6c7b-4622-8cb8-4064b24afc72",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"industryId\": \"<string>\",\n  \"industryName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/industry/create"
											},
											"response": [
												{
													"id": "24b3291a-e628-411f-88f5-a6cfdcbaa38f",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"industryId\": \"<string>\",\n  \"industryName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/industry/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "94ee1179-c926-4172-b7bc-1f1d12204574",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"industryId\": \"<string>\",\n  \"industryName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/industry/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "fd10e0f7-a8c6-4b13-906a-d100fe0e6983"
								},
								{
									"name": "edit",
									"item": [
										{
											"name": "Empty fields - Create Industry Endpoint2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e31e0ea3-81d6-405a-a84c-6763f3034582",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that industry Id is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "2cf88cb4-0b44-412c-9d94-d2f14428463b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"industryId\": \"\",\n  \"industryName\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/industry/edit"
											},
											"response": [
												{
													"id": "af28aa00-5104-4352-a951-5819b3e8513f",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"industryId\": \"<string>\",\n  \"industryName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/industry/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "379be16e-181c-4edc-98f1-429197ee1b9f",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"industryId\": \"<string>\",\n  \"industryName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/industry/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Edit Industry",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "55cc0cbe-6330-459a-a71a-46df1df7cf44",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "589ba294-0d83-4be0-ad39-97e978687441",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"industryId\": \"<string>\",\n  \"industryName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/industry/edit"
											},
											"response": [
												{
													"id": "6fa3b73b-3c9d-466b-bf0a-bd537dcbab1c",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"industryId\": \"<string>\",\n  \"industryName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/industry/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "28cd2027-8379-4dfe-8f8e-42d6db1dd6d1",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"industryId\": \"<string>\",\n  \"industryName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/industry/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "e679f3a5-c20e-4884-b82c-61e3b261c327"
								},
								{
									"name": "delete",
									"item": [
										{
											"name": "Empty fields - Delete Industry Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "09a500d6-ffee-4baa-ba57-5176b42a0652",
														"exec": [
															"// pm.test(\"Status code is 400\", function () {\r",
															"//     pm.response.to.have.status(400);\r",
															"// });\r",
															"\r",
															"// var responseJSON = pm.response.json();\r",
															"// var errors = responseJSON.errors;\r",
															"\r",
															"// pm.test(\"Verify that industry Id is required\", function () {\r",
															"//     pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"//     pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"// });\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "07b2457f-d65b-4e70-b9ab-a6ffc8be33b5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"industryId\": \"a877da30-49d0-4454-7445-08dd35692091\",\n  \"industryName\": \"Estate\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/industry/delete"
											},
											"response": [
												{
													"id": "f14719a8-ddc0-492f-9c3a-8505ed8d6595",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"industryId\": \"<string>\",\n  \"industryName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/industry/delete"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "19af84e0-a21f-4f67-a60a-b9a155428e5b",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"industryId\": \"<string>\",\n  \"industryName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/industry/delete"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Delete Industry",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4522ff55-7ad6-4243-bf09-5d1b00a43a5a",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "0b583e6c-e7b8-4f7b-a7b4-d21faaf7eacf",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"industryId\": \"<string>\",\n  \"industryName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/industry/delete"
											},
											"response": [
												{
													"id": "50ad7fc1-e7ae-482d-8483-0a306cc45cd2",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"industryId\": \"<string>\",\n  \"industryName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/industry/delete"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "e671d329-e718-4e25-995c-e077a13ece89",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"industryId\": \"<string>\",\n  \"industryName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/industry/delete"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "3cd14aeb-4089-4e05-95d0-c717066984de"
								}
							],
							"id": "495c8204-a09b-492e-81fd-b26b617b21ed"
						},
						{
							"name": "category",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Empty fields - Create Product Category1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a5533865-82b8-4fca-900c-75f70315a53f",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that category Id is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "7bffdc04-0e4a-41ce-ae61-75ef6114a6f2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  //\"categorId\": \"\",\n  \"categoryName\": \"\"\n//  \"mainCategoryId\": \"c2b5a979-bbd5-4e2c-7204-08dd0935660a\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/category/create"
											},
											"response": [
												{
													"id": "f68ab0d1-d122-4661-84d4-70e277a27f02",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"categorId\": \"<string>\",\n  \"categoryName\": \"<string>\",\n  \"mainCategoryId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/category/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "2caba74b-0acf-430b-b17b-287d9be0becb",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"categorId\": \"<string>\",\n  \"categoryName\": \"<string>\",\n  \"mainCategoryId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/category/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Create Product Category1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1d1dab7f-b423-4793-905d-5496ab3835d8",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "75e8f545-0012-4277-b426-d29163cf9236",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"categorId\": \"<string>\",\n  \"categoryName\": \"<string>\",\n  \"mainCategoryId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/category/create"
											},
											"response": [
												{
													"id": "2dfbbc22-1719-4b64-9a73-b83a0c6ab0e5",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"categorId\": \"<string>\",\n  \"categoryName\": \"<string>\",\n  \"mainCategoryId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/category/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "250493a4-ca89-440a-9f2c-f4d21a1ce75d",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"categorId\": \"<string>\",\n  \"categoryName\": \"<string>\",\n  \"mainCategoryId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/category/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "26250b71-b9a2-4385-9130-f6b18036c2d8"
								},
								{
									"name": "edit",
									"item": [
										{
											"name": "Anp Goods Services Features Category Create Product Category2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f84c3046-e6a6-44cb-a49c-faec937a8a90",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that category Id is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "15c9512f-1733-4523-9e71-440e0adad01d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"categorId\": \"\",\n            \"categoryName\": \"\",\n            \"mainCategoryId\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/category/edit"
											},
											"response": [
												{
													"id": "8034164a-dafb-4ffd-9b69-abf676fba1e8",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"categorId\": \"<string>\",\n  \"categoryName\": \"<string>\",\n  \"mainCategoryId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/category/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "ba9e3fbe-6d4a-443b-adbb-5b33ef2e4be7",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"categorId\": \"<string>\",\n  \"categoryName\": \"<string>\",\n  \"mainCategoryId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/category/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Edit Product Category2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e097c319-134f-4893-8e55-086bc8670122",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "43db560c-6cc6-4c63-9803-7dac714e3918",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"categorId\": \"<string>\",\n  \"categoryName\": \"<string>\",\n  \"mainCategoryId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/category/edit"
											},
											"response": [
												{
													"id": "64d159d3-5927-47e9-a5df-9d5771c95147",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"categorId\": \"<string>\",\n  \"categoryName\": \"<string>\",\n  \"mainCategoryId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/category/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "526cc168-e6f7-4508-83cb-d2bc8a26ce24",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"categorId\": \"<string>\",\n  \"categoryName\": \"<string>\",\n  \"mainCategoryId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/category/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "e674622a-2aac-4450-841f-0355eb3b43ed"
								},
								{
									"name": "delete",
									"item": [
										{
											"name": "Empty fields - Delete Category Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "37e2105d-f4a3-4878-85a2-70cfef5ea316",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that category Id is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "e15165fe-6283-42c2-b237-d6ee58526803",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"categorId\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/category/delete"
											},
											"response": [
												{
													"id": "73d41b76-6a24-426b-a479-eb9555ffee07",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"categorId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/category/delete"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "e852bf5c-36ca-444e-8b79-618a13f607b9",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"categorId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/category/delete"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Delete Category",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b2bb659e-0527-4671-8681-298ebaba3fc1",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "189dd4f7-f121-43a3-9504-e1cba05065d8",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"categorId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/category/delete"
											},
											"response": [
												{
													"id": "ecdf5dab-7d06-4a2b-a770-e55f1f6eafd5",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"categorId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/category/delete"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "ccaf943a-b2e3-4647-92b6-6274cff4d1f4",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"categorId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/category/delete"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "a40ae98b-fbe9-4f38-a108-ab0501ba40f1"
								},
								{
									"name": "categories",
									"item": [
										{
											"name": "Anp Goods Services Features Category Get All Category Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "7a66f114-3e60-4e83-9bb8-c7d161a2d357",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var list = responseJSON;\r",
															"\r",
															"pm.test(\"Verify that categories are returned\", function () {\r",
															"    pm.expect(list.data[0].categorId).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(list.data[0].categoryName).to.be.a(\"string\").and.not.be.empty;\r",
															"    \r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "312d5100-92b6-4e59-bf12-dd98a4a51eb5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/goods/category/categories?isParentCategory=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"goods",
														"category",
														"categories"
													],
													"query": [
														{
															"key": "categoryId",
															"value": "<string>",
															"disabled": true
														},
														{
															"key": "isParentCategory",
															"value": "false",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "5139805a-48ff-4ec3-978a-36a51d54250b",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/goods/category/categories?categoryId=<string>&isParentCategory=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"goods",
																"category",
																"categories"
															],
															"query": [
																{
																	"key": "categoryId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "isParentCategory",
																	"value": "<boolean>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "eb51ab1d-c6ba-4189-9b24-9b8fc8ba8227",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/goods/category/categories?categoryId=<string>&isParentCategory=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"goods",
																"category",
																"categories"
															],
															"query": [
																{
																	"key": "categoryId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "isParentCategory",
																	"value": "<boolean>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - All Category Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c69dc170-5aee-4425-af7d-923f12de34bf",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "23873b90-9b53-4add-98db-ebe2d6503233",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/goods/category/categories?categoryId=<string>&isParentCategory=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"goods",
														"category",
														"categories"
													],
													"query": [
														{
															"key": "categoryId",
															"value": "<string>"
														},
														{
															"key": "isParentCategory",
															"value": "<boolean>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "3bc1ea86-8b70-4936-af51-eefd36b45aa1",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/goods/category/categories?categoryId=<string>&isParentCategory=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"goods",
																"category",
																"categories"
															],
															"query": [
																{
																	"key": "categoryId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "isParentCategory",
																	"value": "<boolean>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "e70497ee-fdf8-4bf9-a34f-975d3a20173c",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/goods/category/categories?categoryId=<string>&isParentCategory=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"goods",
																"category",
																"categories"
															],
															"query": [
																{
																	"key": "categoryId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "isParentCategory",
																	"value": "<boolean>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "4c28c157-f01b-4ed7-ab71-3a358265955d"
								}
							],
							"id": "6df5ca63-dd55-4c25-a22b-19f3fb79b7ac"
						},
						{
							"name": "ads",
							"item": [
								{
									"name": "users",
									"item": [
										{
											"name": "{employeeId}",
											"item": [
												{
													"name": "ANP Web Api Features AD Get A User Endpoint",
													"id": "2c21e6cd-1e82-4a89-8c6f-6598abfcda06",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{bearerToken}}"
															}
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/account/ads/users/:employeeId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"account",
																"ads",
																"users",
																":employeeId"
															],
															"variable": [
																{
																	"id": "c35ace7b-ef40-4c62-9b78-28cbeb7586e6",
																	"key": "employeeId",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "ca5b458c-73c2-4957-b281-c265262d7339",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/account/ads/users/:employeeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"account",
																		"ads",
																		"users",
																		":employeeId"
																	],
																	"variable": [
																		{
																			"key": "employeeId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"surname\": \"<string>\",\n    \"givenName\": \"<string>\",\n    \"displayName\": \"<string>\",\n    \"mail\": \"<string>\",\n    \"jobTitle\": \"<string>\",\n    \"department\": \"<string>\",\n    \"officeLocation\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
														},
														{
															"id": "4d7ba7c4-503d-4476-9686-3ab8638b7902",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/account/ads/users/:employeeId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"account",
																		"ads",
																		"users",
																		":employeeId"
																	],
																	"variable": [
																		{
																			"key": "employeeId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												}
											],
											"id": "e7fd0699-df9f-418b-9877-9b01fb5f8f15"
										},
										{
											"name": "ANGet All Users Endpoint",
											"id": "d2c53bd1-4720-4e36-af81-5d5baa7e7352",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": "{{baseUrl}}/api/account/ads/users"
											},
											"response": [
												{
													"id": "ae259398-a49d-4166-9ebe-92e9cbc38aad",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": "{{baseUrl}}/api/account/ads/users"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": [\n    {\n      \"id\": \"<string>\",\n      \"surname\": \"<string>\",\n      \"givenName\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"mail\": \"<string>\",\n      \"jobTitle\": \"<string>\",\n      \"department\": \"<string>\",\n      \"officeLocation\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"surname\": \"<string>\",\n      \"givenName\": \"<string>\",\n      \"displayName\": \"<string>\",\n      \"mail\": \"<string>\",\n      \"jobTitle\": \"<string>\",\n      \"department\": \"<string>\",\n      \"officeLocation\": \"<string>\"\n    }\n  ],\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "226cf3b7-172b-49a6-833d-5604f0c46d6c",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": "{{baseUrl}}/api/account/ads/users"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "3fbb5ef3-62ef-4329-ab14-acd6d7961efc"
								}
							],
							"id": "1ed6316a-99cb-4a3a-bcf4-1262b009f23a"
						}
					],
					"id": "5d04f95a-152b-4981-87e2-0f3dec7a0e4e"
				},
				{
					"name": "supplier",
					"item": [
						{
							"name": "create",
							"item": [
								{
									"name": "Success - Create supplier",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dc44e055-4be5-41cf-9b94-cf15c4766217",
												"exec": [
													"\r",
													"pm.collectionVariables.set(\"supplierId\", pm.response.json().data.id);\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var data = responseJSON.data;\r",
													"\r",
													"pm.test(\"Verify that supplier is created\", function () {\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(data.message).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(data.id).to.be.a(\"string\").and.not.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "1f0c0bba-881c-48ed-80a0-b798490d8438",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/problem+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"businessName\": \"Sly Industries\",\n  \"dateOfEstablishment\": \"2024-12-20\",\n  \"streetName\": \"Joebin\",\n  \"region\": \"East\",\n  \"city\": \"Abia\",\n  \"registrationNumber\": \"7847888w\",\n  \"town\": \"Okpa\",\n  \"phoneNumber\": \"09054889955\",\n  \"website\": \"https://www.slyindustries.com\",\n  \"email\": \"july@yopmail.com\",\n  \"supplierCategory\": \"5f7398c2-9307-49e5-7205-08dd0935660a\",\n // \"companyId\": \"<string>\", //not required\n  \"activate\": false,\n  \"businessType\": \"Hospitality\",\n  \"country\": \"Nigeria\",\n  \"parentCompanyId\": null,\n  \"industryId\": \"513f3a56-83ec-47cc-8010-08dcff87fbf6\",\n  \"tags\": [\n    {\n     // \"tagId\": \"<string>\",\n      \"tagName\": \"Equipments\" //lookup endpoint\n     // \"companyId\": \"<string>\"\n    },\n    {\n     // \"tagId\": \"<string>\",\n      \"tagName\": \"Maintenance\"\n     // \"companyId\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/supplier/create"
									},
									"response": [
										{
											"id": "c5ef65e4-a63a-4784-8afc-6b3c35fcd944",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"streetName\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"registrationNumber\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\",\n  \"supplierCategory\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"activate\": \"<boolean>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"parentCompanyId\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"tags\": [\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/create"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "6afbbed4-abcb-41f6-a2c6-26a9f9a04af1",
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"streetName\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"registrationNumber\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\",\n  \"supplierCategory\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"activate\": \"<boolean>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"parentCompanyId\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"tags\": [\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/create"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "e069a855-47fa-41c8-b9a5-40fb0ddb697f",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"streetName\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"registrationNumber\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\",\n  \"supplierCategory\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"activate\": \"<boolean>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"parentCompanyId\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"tags\": [\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/create"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Success - Login to get supplierId",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "de80e272-27c8-4bcc-b1dc-a25ee9ae3289",
												"exec": [
													"// pm.collectionVariables.set(\"bearerToken\", pm.response.json().data.accessToken);\r",
													"// pm.collectionVariables.set(\"refreshToken\", pm.response.json().data.refreshToken);\r",
													"// pm.collectionVariables.set(\"userId\", pm.response.json().data.userId);\r",
													"pm.collectionVariables.set(\"supplierId\", pm.response.json().data.supplierId);\r",
													"//supplier variable is created in the create supplier endpoint\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that login is successful\", function () {\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.data.accessToken).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.data.refreshToken).to.be.a(\"string\").and.not.empty;\r",
													"});\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "d33fee6b-b48d-4f8d-99ae-bde6dab7085b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"celo@yopmail.com\",//\"{{email}}\",\n  \"userName\": \"celo@yopmail.com\",\n  // \"userName\":\"cesaltino.babo@anp.tl\", //initiator\n  // \"userName\": \"abel.saldanha@anp.tl\", //1st approver\n   //\"userName\": \"jaime.ximenes@anp.tl\", //2nd approver\n  \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/login"
									},
									"response": [
										{
											"id": "511a2438-aab9-4f0e-9123-640ff86c63d7",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\",\n    \"accessToken\": \"<string>\",\n    \"refreshToken\": \"<string>\",\n    \"role\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"supplierId\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "6362cd4b-7b60-4b4f-9ae9-5e79a5433034",
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "a04287b9-bcfe-47d4-8621-5d2662b75c65",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "empty fields - Create supplier",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dc44e055-4be5-41cf-9b94-cf15c4766217",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); \r",
													"\r",
													"pm.test(\"Verify that empty required fields are flagged\", function () {\r",
													"\r",
													"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
													"\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "e7899596-a004-489c-904d-ded24e2488dd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/problem+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"businessName\": \"\",\n  \"dateOfEstablishment\": \"2024-03-03\",\n  \"streetName\": \"\",\n  \"region\": \"\",\n  \"city\": \"\",\n  \"registrationNumber\": \"\",\n  \"town\": \"\",\n  \"phoneNumber\": \"\",\n  \"website\": \"\",\n  \"email\": \"\",\n  \"supplierCategory\": \"\",\n // \"companyId\": \"<string>\", //not required\n  \"activate\": false,\n  \"businessType\": \"\",\n  \"country\": \"\",\n  \"parentCompanyId\": null,\n  \"industryId\": \"\",\n  \"tags\": [\n    {\n     // \"tagId\": \"<string>\",\n      \"tagName\": \"Equipments\" //lookup endpoint\n     // \"companyId\": \"<string>\"\n    },\n    {\n     // \"tagId\": \"<string>\",\n      \"tagName\": \"Maintenance\"\n     // \"companyId\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/supplier/create"
									},
									"response": [
										{
											"id": "f67a1d92-ff43-42ad-91f7-e30b87f81a80",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"streetName\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"registrationNumber\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\",\n  \"supplierCategory\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"activate\": \"<boolean>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"parentCompanyId\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"tags\": [\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/create"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "076a7aa7-ca8a-414c-bbde-73c988650b4e",
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"streetName\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"registrationNumber\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\",\n  \"supplierCategory\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"activate\": \"<boolean>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"parentCompanyId\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"tags\": [\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/create"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "02d7574a-9845-4318-9bc1-eee57bd7ae17",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"streetName\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"registrationNumber\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\",\n  \"supplierCategory\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"activate\": \"<boolean>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"parentCompanyId\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"tags\": [\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/create"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No auth - Create supplier",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d9cc3587-8e50-447d-98fe-92853de4d8b3",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "6bbe8b46-6ec0-4696-a6a9-d048697b1057",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/problem+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"businessName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"streetName\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"registrationNumber\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\",\n  \"supplierCategory\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"activate\": \"<boolean>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"parentCompanyId\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"tags\": [\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/supplier/create"
									},
									"response": [
										{
											"id": "e96ed99c-dcad-4ef0-ac7b-8390e863d3cb",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"streetName\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"registrationNumber\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\",\n  \"supplierCategory\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"activate\": \"<boolean>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"parentCompanyId\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"tags\": [\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/create"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "0b1885c7-bbdf-479c-8e78-fc2641e07cd4",
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"streetName\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"registrationNumber\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\",\n  \"supplierCategory\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"activate\": \"<boolean>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"parentCompanyId\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"tags\": [\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/create"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "1f8c94e7-546f-4d6f-ae8c-331410a235ed",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"streetName\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"registrationNumber\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\",\n  \"supplierCategory\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"activate\": \"<boolean>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"parentCompanyId\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"tags\": [\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/create"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "90a12c3b-70e0-482a-968f-bfdfa1922804"
						},
						{
							"name": "edit",
							"item": [
								{
									"name": "Success - Update supplier",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5f8ed2c2-8e6b-4929-8d31-27aabbe5688c",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var data = responseJSON.data;\r",
													"\r",
													"pm.test(\"Verify that supplier is updated successfully\", function () {\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(data.message).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(data.id).to.be.a(\"string\").and.not.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "358a231d-049c-4ccc-adc4-26fb83c1782c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/problem+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"businessName\": \"Ola Industry\",\n  \"dateOfEstablishment\": \"2024-12-20\",\n  \"streetName\": \"Joebin\",\n  \"region\": \"East\",\n  \"city\": \"Abia\",\n  \"registrationNumber\": \"7847888w\",\n  \"town\": \"Okpa\",\n  \"phoneNumber\": \"09054889955\",\n  \"website\": \"www.olaindustries.com\",\n  \"email\": \"olayopmail.com\",\n  \"supplierCategory\": \"5f7398c2-9307-49e5-7205-08dd0935660a\",\n  \"companyId\": \"{{supplierId}}\", //not required\n  \"activate\": false,\n  \"businessType\": \"Hospitality\",\n  \"country\": \"Nigeria\",\n  \"parentCompanyId\": null,\n  \"industryId\": \"513f3a56-83ec-47cc-8010-08dcff87fbf6\",\n  \"tags\": [\n    {\n     // \"tagId\": \"<string>\",\n      \"tagName\": \"Equipments\" //lookup endpoint\n     // \"companyId\": \"<string>\"\n    },\n    {\n     // \"tagId\": \"<string>\",\n      \"tagName\": \"Maintenance\"\n     // \"companyId\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/supplier/edit"
									},
									"response": [
										{
											"id": "ba8af572-ff36-4c84-a13e-5f28050d8e47",
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"streetName\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"registrationNumber\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\",\n  \"supplierCategory\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"activate\": \"<boolean>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"parentCompanyId\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"tags\": [\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/edit"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "fb7a2602-6073-420a-8a4d-e3ce955a4e73",
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"streetName\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"registrationNumber\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\",\n  \"supplierCategory\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"activate\": \"<boolean>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"parentCompanyId\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"tags\": [\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/edit"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "5888656f-df2a-4fc6-aef3-6f80b156bf10",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"streetName\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"registrationNumber\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\",\n  \"supplierCategory\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"activate\": \"<boolean>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"parentCompanyId\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"tags\": [\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/edit"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Empty fields - Update supplier",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "37594246-cce2-4ff9-ba18-1ea252daaab9",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); \r",
													"\r",
													"pm.test(\"Verify that empty required fields are flagged\", function () {\r",
													"\r",
													"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
													"\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "8694344e-a006-425c-b6d4-f0a731248217",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/problem+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "// {\n//   \"businessName\": \"<string>\",\n//   \"dateOfEstablishment\": \"<dateTime>\",\n//   \"streetName\": \"<string>\",\n//   \"region\": \"<string>\",\n//   \"city\": \"<string>\",\n//   \"registrationNumber\": \"<string>\",\n//   \"town\": \"<string>\",\n//   \"phoneNumber\": \"<string>\",\n//   \"website\": \"<string>\",\n//   \"email\": \"<string>\",\n//   \"supplierCategory\": \"<string>\",\n//   \"companyId\": \"<string>\",\n//   \"activate\": \"<boolean>\",\n//   \"businessType\": \"<string>\",\n//   \"country\": \"<string>\",\n//   \"parentCompanyId\": \"<string>\",\n//   \"industryId\": \"<string>\",\n//   \"tags\": [\n//     {\n//       \"tagId\": \"<string>\",\n//       \"tagName\": \"<string>\",\n//       \"companyId\": \"<string>\"\n//     },\n//     {\n//       \"tagId\": \"<string>\",\n//       \"tagName\": \"<string>\",\n//       \"companyId\": \"<string>\"\n//     }\n//   ]\n// }\n{\n  \"businessName\": \"\",\n  \"dateOfEstablishment\": \"\",\n  \"streetName\": \"\",\n  \"region\": \"\",\n  \"city\": \"\",\n  \"registrationNumber\": \"\",\n  \"town\": \"\",\n  \"phoneNumber\": \"\",\n  \"website\": \"\",\n  \"email\": \"\",\n  \"supplierCategory\": \"\",\n  \"companyId\": \"\", \n  \"activate\": false,\n  \"businessType\": \"\",\n  \"country\": \"\",\n  \"parentCompanyId\": null,\n  \"industryId\": \"\",\n  \"tags\": [\n    {\n     // \"tagId\": \"<string>\",\n      \"tagName\": \"\" //lookup endpoint\n     // \"companyId\": \"<string>\"\n    },\n    {\n     // \"tagId\": \"<string>\",\n      \"tagName\": \"\"\n     // \"companyId\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/supplier/edit"
									},
									"response": [
										{
											"id": "fdc805e4-3653-49ce-870b-2d7a3dedde4d",
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"streetName\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"registrationNumber\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\",\n  \"supplierCategory\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"activate\": \"<boolean>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"parentCompanyId\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"tags\": [\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/edit"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "70958987-4bba-4b93-aebb-66b185339538",
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"streetName\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"registrationNumber\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\",\n  \"supplierCategory\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"activate\": \"<boolean>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"parentCompanyId\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"tags\": [\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/edit"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "795de405-25ec-4149-85b2-fc26739d630f",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"streetName\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"registrationNumber\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\",\n  \"supplierCategory\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"activate\": \"<boolean>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"parentCompanyId\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"tags\": [\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/edit"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No auth - Update",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "aecfb189-63ce-4095-9761-06eb305e3cc3",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "733c908f-ac76-4392-8eff-fa0da6ba330e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/problem+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"businessName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"streetName\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"registrationNumber\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\",\n  \"supplierCategory\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"activate\": \"<boolean>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"parentCompanyId\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"tags\": [\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/supplier/edit"
									},
									"response": [
										{
											"id": "85c91b93-24cd-4cd2-85ef-7ad89dea0772",
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"streetName\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"registrationNumber\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\",\n  \"supplierCategory\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"activate\": \"<boolean>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"parentCompanyId\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"tags\": [\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/edit"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "480be32c-973b-4299-82a1-9d8463794f2f",
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"streetName\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"registrationNumber\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\",\n  \"supplierCategory\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"activate\": \"<boolean>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"parentCompanyId\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"tags\": [\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/edit"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "16c04271-f6e4-40b8-bbc0-a608b738bcc5",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"businessName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"streetName\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"registrationNumber\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\",\n  \"supplierCategory\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"activate\": \"<boolean>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"parentCompanyId\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"tags\": [\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    },\n    {\n      \"tagId\": \"<string>\",\n      \"tagName\": \"<string>\",\n      \"companyId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/edit"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "296c3b76-3e2c-4080-9a13-ac6c26b820f4"
						},
						{
							"name": "industries",
							"item": [
								{
									"name": "Success - Supplier Category Get All Industry",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cca1f095-69e7-48c9-bd98-ba6453dc07b0",
												"exec": [
													"pm.collectionVariables.set(\"industryId\", pm.response.json().data[0].industryId);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); \r",
													"\r",
													"pm.test(\"Verify that industries are returned\", function () {\r",
													"\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.data[0].industryId).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.data[0].industryName).to.be.a(\"string\").and.not.empty;\r",
													"\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "332d087b-ab2c-4e50-b3ec-fa145d3ac1aa",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": "{{baseUrl}}/api/supplier/industries"
									},
									"response": [
										{
											"id": "5babba0a-f0f2-4dda-ac23-792a288114cc",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/supplier/industries"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "e91431d7-471d-4260-8308-073aa25a1362",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/supplier/industries"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No auth - Supplier Category Get All Industry",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cca1f095-69e7-48c9-bd98-ba6453dc07b0",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "7d64efac-8079-481c-90bd-c6d906d72159",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": "{{baseUrl}}/api/supplier/industries"
									},
									"response": [
										{
											"id": "6327cb0c-42fb-45da-a653-655e28351cac",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/supplier/industries"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "55fcb672-b99c-4045-88ec-366b0bc6e7ca",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/supplier/industries"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "7b41b6fb-357f-4a4c-9c84-1fde34794e6b"
						},
						{
							"name": "shareholder",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Success - Create Shareholder",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "33d265b0-fd97-451a-97fa-4a0b22c20b95",
														"exec": [
															"pm.collectionVariables.set(\"shareholderId\", pm.response.json().data.id);\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var data = responseJSON.data;\r",
															"\r",
															"pm.test(\"Verify that shareholder is created\", function () {\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(data.message).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(data.id).to.be.a(\"string\").and.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "669c4459-ef6e-4d07-af49-5d95d7d1dff2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n // \"shareholderId\": \"<string>\",\n  \"fullName\": \"{{$randomFullName}}\",\n  \"maritalStatus\": \"single\",\n  \"tin\": \"345645655\",\n  \"identificationNumber\": \"ggh7887888\",\n  \"identificationType\": \"nin\",\n  \"percentageOwned\": \"30\",\n  \"companyId\": \"{{supplierId}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/shareholder/create"
											},
											"response": [
												{
													"id": "80d18bbf-2fcc-4b5a-9126-83d1a2c5a7ef",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shareholderId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"tin\": \"<string>\",\n  \"identificationNumber\": \"<string>\",\n  \"identificationType\": \"<string>\",\n  \"percentageOwned\": \"<number>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/shareholder/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "14ba992a-ff06-48a7-bb2c-8c5a13377dcb",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shareholderId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"tin\": \"<string>\",\n  \"identificationNumber\": \"<string>\",\n  \"identificationType\": \"<string>\",\n  \"percentageOwned\": \"<number>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/shareholder/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Empty fields - Create Shareholder",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "33d265b0-fd97-451a-97fa-4a0b22c20b95",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that empty required fields are flagged\", function () {\r",
															"\r",
															"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "8b086ced-78fd-4862-b8f4-013fc7a34935",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n // \"shareholderId\": \"<string>\",\n  \"fullName\": \"\",\n  \"maritalStatus\": \"\",\n  \"tin\": \"\",\n  \"identificationNumber\": \"\",\n  \"identificationType\": \"\",\n  \"percentageOwned\": \"30\",\n  \"companyId\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/shareholder/create"
											},
											"response": [
												{
													"id": "28705605-7dfc-47ec-bd6d-bc6397002a5a",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shareholderId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"tin\": \"<string>\",\n  \"identificationNumber\": \"<string>\",\n  \"identificationType\": \"<string>\",\n  \"percentageOwned\": \"<number>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/shareholder/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "7f470467-98f6-410f-a0e8-177978124e20",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shareholderId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"tin\": \"<string>\",\n  \"identificationNumber\": \"<string>\",\n  \"identificationType\": \"<string>\",\n  \"percentageOwned\": \"<number>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/shareholder/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Invalid name format - Create Shareholder",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "33d265b0-fd97-451a-97fa-4a0b22c20b95",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that numbers and special characters are not allowed in the name field\", function () {\r",
															"\r",
															"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "d72ef3ef-01d1-4cc6-a790-b66efa832f04",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n // \"shareholderId\": \"<string>\",\n  \"fullName\": \"gil 7hana&89\",\n  \"maritalStatus\": \"single\",\n  \"tin\": \"<string>\",\n  \"identificationNumber\": \"ggh7887888\",\n  \"identificationType\": \"nin\",\n  \"percentageOwned\": \"30\",\n  \"companyId\": \"{{supplierId}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/shareholder/create"
											},
											"response": [
												{
													"id": "2690f09a-59c5-4621-acd9-ae80503122be",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shareholderId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"tin\": \"<string>\",\n  \"identificationNumber\": \"<string>\",\n  \"identificationType\": \"<string>\",\n  \"percentageOwned\": \"<number>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/shareholder/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "2137c2c4-9bed-46c5-8450-4062961a034d",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shareholderId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"tin\": \"<string>\",\n  \"identificationNumber\": \"<string>\",\n  \"identificationType\": \"<string>\",\n  \"percentageOwned\": \"<number>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/shareholder/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Create Shareholder",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b93ec285-5127-466b-895b-17ea3350589b",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "d758ee25-dd09-4565-a79b-698424fb7ac4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"shareholderId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"tin\": \"<string>\",\n  \"identificationNumber\": \"<string>\",\n  \"identificationType\": \"<string>\",\n  \"percentageOwned\": \"<number>\",\n  \"companyId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/shareholder/create"
											},
											"response": [
												{
													"id": "590b8faa-64eb-4b02-ae9a-1e3bc3947dd0",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shareholderId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"tin\": \"<string>\",\n  \"identificationNumber\": \"<string>\",\n  \"identificationType\": \"<string>\",\n  \"percentageOwned\": \"<number>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/shareholder/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "9ab1a4e2-6efd-4bd8-bb35-c291d3d1d1b8",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shareholderId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"tin\": \"<string>\",\n  \"identificationNumber\": \"<string>\",\n  \"identificationType\": \"<string>\",\n  \"percentageOwned\": \"<number>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/shareholder/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "cb34d5c2-faa0-42fb-846f-20f554aafa69"
								},
								{
									"name": "edit",
									"item": [
										{
											"name": "Success - Edit Shareholder",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3c32efb8-2f65-4ce4-a5eb-9bd3422d4eb7",
														"exec": [
															"//pm.collectionVariables.set(\"shareholderId\", pm.response.json().data.id);\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var data = responseJSON.data;\r",
															"\r",
															"pm.test(\"Verify that shareholder is created\", function () {\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(data.message).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(data.id).to.be.a(\"string\").and.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "739b0fd2-b751-4900-a1c7-89c94ed82fd5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"shareholderId\": \"{{shareholderId}}\",\n            \"fullName\": \"Beverly Hills\",\n            \"maritalStatus\": \"married\",\n            \"tin\": \"<string>\",\n            \"identificationType\": \"nin\",\n            \"identificationNumber\": \"007887888\",\n            \"percentageOwned\": 30.00,\n            \"companyId\": \"6586d903-203f-4819-3a1b-08dd2661c275\"\n}\n\n",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/shareholder/edit"
											},
											"response": [
												{
													"id": "60c4c812-b319-4a6a-9415-fb041f7b429a",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shareholderId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"tin\": \"<string>\",\n  \"identificationNumber\": \"<string>\",\n  \"identificationType\": \"<string>\",\n  \"percentageOwned\": \"<number>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/shareholder/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "5a33c3c4-0178-43f8-a159-ffc0a7b43b81",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shareholderId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"tin\": \"<string>\",\n  \"identificationNumber\": \"<string>\",\n  \"identificationType\": \"<string>\",\n  \"percentageOwned\": \"<number>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/shareholder/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Empty fields - Edit Shareholder",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3c32efb8-2f65-4ce4-a5eb-9bd3422d4eb7",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that empty required fields are flagged\", function () {\r",
															"\r",
															"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "89736011-dbba-4841-a765-16594c24f48b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"shareholderId\": \"\",\n            \"fullName\": \"\",\n            \"maritalStatus\": \"\",\n            \"tin\": \"\",\n            \"identificationType\": \"\",\n            \"identificationNumber\": \"\",\n            \"percentageOwned\": \"\",\n            \"companyId\": \"\"\n}\n\n",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/shareholder/edit"
											},
											"response": [
												{
													"id": "58b5691b-dbac-4baf-a753-728259347c36",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shareholderId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"tin\": \"<string>\",\n  \"identificationNumber\": \"<string>\",\n  \"identificationType\": \"<string>\",\n  \"percentageOwned\": \"<number>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/shareholder/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "5efea909-4c4e-41b4-a9ed-8d8011929a58",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shareholderId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"tin\": \"<string>\",\n  \"identificationNumber\": \"<string>\",\n  \"identificationType\": \"<string>\",\n  \"percentageOwned\": \"<number>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/shareholder/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Edit Shareholder",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "001863f8-b13e-4feb-9cfd-47d937ab1e9d",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "0b88165d-db3a-40dd-b152-a6d3ada84d80",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"shareholderId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"tin\": \"<string>\",\n  \"identificationNumber\": \"<string>\",\n  \"identificationType\": \"<string>\",\n  \"percentageOwned\": \"<number>\",\n  \"companyId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/shareholder/edit"
											},
											"response": [
												{
													"id": "60580d7d-9ea1-41ee-a00f-6cfc4066d13b",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shareholderId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"tin\": \"<string>\",\n  \"identificationNumber\": \"<string>\",\n  \"identificationType\": \"<string>\",\n  \"percentageOwned\": \"<number>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/shareholder/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "31a84e94-6200-4ccf-8414-be5250b566b2",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shareholderId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"tin\": \"<string>\",\n  \"identificationNumber\": \"<string>\",\n  \"identificationType\": \"<string>\",\n  \"percentageOwned\": \"<number>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/shareholder/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "5348e7d9-11bc-4f64-8c3e-6c5cd368255c"
								},
								{
									"name": "remove",
									"item": [
										{
											"name": "No shareholderId - Delete Shareholder",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "47f1635a-907d-4e0e-9129-a5e82fe90c35",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that shareholder Id is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "6988d419-769a-426b-a859-e91aa714dcf1",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"shareholderId\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/shareholder/remove"
											},
											"response": [
												{
													"id": "f68025f1-bb9c-4fe2-b356-64a1b825a4ef",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shareholderId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/shareholder/remove"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "4668468e-927b-4383-a704-5bcc01c50223",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shareholderId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/shareholder/remove"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Inavalid shareholderId - Delete Shareholder",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "47f1635a-907d-4e0e-9129-a5e82fe90c35",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that shareholder Id is invalid\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "32415575-bab2-4d23-a846-645b4cf129fe",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"shareholderId\": \"6d903-203f-4819-3a1b-08dd2661c275\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/shareholder/remove"
											},
											"response": [
												{
													"id": "7c34bf11-92ec-4564-8cc6-9327a14f4f36",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shareholderId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/shareholder/remove"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "6bd1c25f-2314-4d91-9028-cc2291cdd0ac",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shareholderId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/shareholder/remove"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Delete Shareholder",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3985aa3f-1ef9-4261-8288-4f27f3dac545",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "e9f1be22-7bec-4008-8862-739d5092bd43",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"shareholderId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/shareholder/remove"
											},
											"response": [
												{
													"id": "e2953de9-1fec-4151-ab84-9619a3e2ef93",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shareholderId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/shareholder/remove"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "afbcacef-e814-484b-8c86-9748487ed12e",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shareholderId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/shareholder/remove"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "3ac5e192-774f-48e6-95fd-e3d8b9df4d8d"
								}
							],
							"id": "3fa6fddd-8ddf-41d6-8ff3-56ef7b8328f5"
						},
						{
							"name": "shareholders",
							"item": [
								{
									"name": "{companyId}",
									"item": [
										{
											"name": "Success - Get All Shareholders",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1bc090c9-d572-4680-b409-feda7c8940ef",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var data = responseJSON.data;\r",
															"\r",
															"pm.test(\"Verify that shareholders are returned\", function () {\r",
															"    pm.expect(responseJSON.pageNumber).to.be.a(\"number\");\r",
															"      pm.expect(responseJSON.pageSize).to.be.a(\"number\");\r",
															"        pm.expect(responseJSON.totalRecords).to.be.a(\"number\");\r",
															"    pm.expect(data[0].shareholderId).to.be.a(\"string\").and.not.empty;\r",
															"   // pm.expect(data.id).to.be.a(\"string\").and.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "1a7c7817-0429-48c6-ac77-0d4581c3873c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/shareholders/:companyId?pageNumber=1&pageSize=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"shareholders",
														":companyId"
													],
													"query": [
														{
															"key": "pageNumber",
															"value": "1",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "10",
															"description": "(Required) "
														}
													],
													"variable": [
														{
															"key": "companyId",
															"value": "{{supplierId}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "5ecd835b-b7c1-4bbd-a34b-8ab105cdbad5",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/shareholders/:companyId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"shareholders",
																":companyId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "companyId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "beb6db55-4720-45e2-a48f-189d3b2386c5",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/shareholders/:companyId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"shareholders",
																":companyId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "companyId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Invalid companyId - Get All Shareholders",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1bc090c9-d572-4680-b409-feda7c8940ef",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that project Id is invalid\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "385197a7-aea3-483e-b625-509b5122eafd",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/shareholders/:companyId?pageNumber=1&pageSize=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"shareholders",
														":companyId"
													],
													"query": [
														{
															"key": "pageNumber",
															"value": "1",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "10",
															"description": "(Required) "
														}
													],
													"variable": [
														{
															"key": "companyId",
															"value": "6586d903-203f-481b-08dd2661c275",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "b2f401a4-d133-4e14-8f6b-300ed9949095",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/shareholders/:companyId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"shareholders",
																":companyId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "companyId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "7f3a1768-c132-49b2-bcac-fc6a43d8d5b2",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/shareholders/:companyId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"shareholders",
																":companyId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "companyId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No companyId - Get All Shareholders",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1bc090c9-d572-4680-b409-feda7c8940ef",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that project Id is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "0a0038ad-6551-41b5-ab90-832ff9994b80",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/shareholders/:companyId?pageNumber=1&pageSize=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"shareholders",
														":companyId"
													],
													"query": [
														{
															"key": "pageNumber",
															"value": "1",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "10",
															"description": "(Required) "
														}
													],
													"variable": [
														{
															"key": "companyId",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "f48c8207-c568-4282-8d12-9c89709ccaba",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/shareholders/:companyId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"shareholders",
																":companyId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "companyId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "70e865e5-2913-4df9-9126-e6ea9f5849da",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/shareholders/:companyId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"shareholders",
																":companyId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "companyId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Get All Shareholders",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ab6538fc-716b-49a1-a9b1-4c3ec19661f9",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "456a81fb-3c44-4f5e-9bd1-5b23ea6c55d0",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/shareholders/:companyId?pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"shareholders",
														":companyId"
													],
													"query": [
														{
															"key": "pageNumber",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "<integer>",
															"description": "(Required) "
														}
													],
													"variable": [
														{
															"key": "companyId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "89028af6-6e06-4241-ab70-85122b7368d9",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/shareholders/:companyId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"shareholders",
																":companyId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "companyId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "67651879-0c54-420d-96f1-e0e45c439f78",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/shareholders/:companyId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"shareholders",
																":companyId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "companyId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "9d4490c5-c3ab-4eca-9b8f-bf5c6043f2f5"
								}
							],
							"id": "b60c8e08-5fac-4760-965d-539d4cfb9c39"
						},
						{
							"name": "project",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Success - Create Project",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bf8cf117-2541-4a38-8eed-a8b2674106ff",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var data = responseJSON.data;\r",
															"\r",
															"pm.test(\"Verify that project is created successfully\", function () {\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(data.message).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(data.id).to.be.a(\"string\").and.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "41ec90a2-5f2e-4d2d-82a4-5e4b93ff2075",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  //\"projectId\": \"<string>\",\n  \"projectName\": \"{{$randomJobArea}}\",//\"Portharcourt refinery\",\n  \"projectValue\": \"50000\",\n  \"yearOfExecution\": \"2001\",\n  \"companyId\": \"{{supplierId}}\",\n  \"clientName\": \"{{$randomFirstName}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/project/create"
											},
											"response": [
												{
													"id": "65e8a9a3-d44f-4560-bd7f-356fd4e802b0",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"projectId\": \"<string>\",\n  \"projectName\": \"<string>\",\n  \"projectValue\": \"<number>\",\n  \"yearOfExecution\": \"<integer>\",\n  \"companyId\": \"<string>\",\n  \"clientName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/project/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "fedb2838-70cc-4cd4-b8ed-ee7364c3d86b",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"projectId\": \"<string>\",\n  \"projectName\": \"<string>\",\n  \"projectValue\": \"<number>\",\n  \"yearOfExecution\": \"<integer>\",\n  \"companyId\": \"<string>\",\n  \"clientName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/project/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Empty fields - Create Project",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bf8cf117-2541-4a38-8eed-a8b2674106ff",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that empty required fields are flagged\", function () {\r",
															"\r",
															"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "fda3443a-f1c0-4f56-bcae-40099df2385f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"projectId\": \"\",\n  \"projectName\": \"\",\n  \"projectValue\": \"\",\n  \"yearOfExecution\": \"\",\n  \"companyId\": \"\",\n  \"clientName\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/project/create"
											},
											"response": [
												{
													"id": "c782f746-68f0-49a4-88ce-193456d71899",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"projectId\": \"<string>\",\n  \"projectName\": \"<string>\",\n  \"projectValue\": \"<number>\",\n  \"yearOfExecution\": \"<integer>\",\n  \"companyId\": \"<string>\",\n  \"clientName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/project/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "a064d898-718f-4df0-a013-f56450d8573d",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"projectId\": \"<string>\",\n  \"projectName\": \"<string>\",\n  \"projectValue\": \"<number>\",\n  \"yearOfExecution\": \"<integer>\",\n  \"companyId\": \"<string>\",\n  \"clientName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/project/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Create Project",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bf8cf117-2541-4a38-8eed-a8b2674106ff",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "0f029615-48a9-4433-af4e-d6f718e986cf",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"projectId\": \"<string>\",\n  \"projectName\": \"Portharcourt refinery\",\n  \"projectValue\": \"50000\",\n  \"yearOfExecution\": \"2000\",\n  \"companyId\": \"<string>\",\n  \"clientName\": \"Portharcourt govt\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/project/create"
											},
											"response": [
												{
													"id": "ab2a1f16-0987-44de-8f26-f9437b295a53",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"projectId\": \"<string>\",\n  \"projectName\": \"<string>\",\n  \"projectValue\": \"<number>\",\n  \"yearOfExecution\": \"<integer>\",\n  \"companyId\": \"<string>\",\n  \"clientName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/project/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "01128459-3c3c-40b2-af50-98b6a77a7936",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"projectId\": \"<string>\",\n  \"projectName\": \"<string>\",\n  \"projectValue\": \"<number>\",\n  \"yearOfExecution\": \"<integer>\",\n  \"companyId\": \"<string>\",\n  \"clientName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/project/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "53326e81-c797-4089-b67e-7e38c5ffa821"
								},
								{
									"name": "projects",
									"item": [
										{
											"name": "Success -  Get All Projects",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "41b92985-194b-4f05-b035-0ea7d48a1ec6",
														"exec": [
															"pm.collectionVariables.set(\"projectId\", pm.response.json().data[0].projectId);\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var data = responseJSON.data;\r",
															"\r",
															"pm.test(\"Verify that projects are returned\", function () {\r",
															"    pm.expect(responseJSON.pageNumber).to.be.a(\"number\");\r",
															"      pm.expect(responseJSON.pageSize).to.be.a(\"number\");\r",
															"        pm.expect(responseJSON.totalRecords).to.be.a(\"number\");\r",
															"    pm.expect(data[0].projectId).to.be.a(\"string\").and.not.empty;\r",
															"   // pm.expect(data.id).to.be.a(\"string\").and.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "2b19d008-ed5f-477b-ba54-c72ef175616d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/projects?companyId={{supplierId}}&pageNumber=1&pageSize=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"projects"
													],
													"query": [
														{
															"key": "companyId",
															"value": "{{supplierId}}",
															"description": "(Required) "
														},
														{
															"key": "pageNumber",
															"value": "1",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "10",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "39e0292f-c185-4af9-b570-14878918314a",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/projects?companyId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"projects"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "companyId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "aed29e96-f0ff-4db6-b099-bee9f302f302",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/projects?companyId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"projects"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "companyId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No companyId - Project Get All Projects",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "41b92985-194b-4f05-b035-0ea7d48a1ec6",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that company Id is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "dc20d450-6812-4c28-afca-a5292d342e54",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/projects?companyId=&pageNumber=1&pageSize=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"projects"
													],
													"query": [
														{
															"key": "companyId",
															"value": "",
															"description": "(Required) "
														},
														{
															"key": "pageNumber",
															"value": "1",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "10",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "287d0d98-c9ba-4f8c-b673-da595e0ce832",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/projects?companyId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"projects"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "companyId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "4bf176f4-c0d3-4439-b745-88d0a7c9d210",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/projects?companyId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"projects"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "companyId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Invalid companyId - Project Get All Projects",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "41b92985-194b-4f05-b035-0ea7d48a1ec6",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that company Id is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "5e47f459-7c76-46d2-b336-f89addc3287d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/projects?companyId=6586d903-203f-4819-3a1b-08dd2661c&pageNumber=1&pageSize=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"projects"
													],
													"query": [
														{
															"key": "companyId",
															"value": "6586d903-203f-4819-3a1b-08dd2661c",
															"description": "(Required) "
														},
														{
															"key": "pageNumber",
															"value": "1",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "10",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "858c0359-be2e-4a04-826f-8f8888444003",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/projects?companyId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"projects"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "companyId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "1fa136f0-6db6-4224-9f8c-7721299a954b",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/projects?companyId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"projects"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "companyId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Get All Projects",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "949e304d-ffe0-44d9-b1e0-49a41478fec1",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "05b07d57-b9ea-4b79-8239-16491cd4049e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/projects?companyId=<string>&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"projects"
													],
													"query": [
														{
															"key": "companyId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "pageNumber",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "6bb69e62-cb0c-4708-8cd7-9804538dfd12",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/projects?companyId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"projects"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "companyId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "f3e5fa5f-54c3-497e-b2ea-4b2de9b11386",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/projects?companyId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"projects"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "companyId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "94a7d25f-81f8-497c-bcdc-fa543eddee3a"
								},
								{
									"name": "{projectId}",
									"item": [
										{
											"name": "Success - Get A Project",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eda699f3-229a-4355-bf63-3117d137e7e3",
														"exec": [
															"//pm.collectionVariables.set(\"projectId\", pm.response.json().data.id);\r",
															"\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var data = responseJSON.data;\r",
															"\r",
															"pm.test(\"Verify that project is returned successfully\", function () {\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(data.projectId).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(data.projectName).to.be.a(\"string\").and.not.empty;\r",
															"       });\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "adfee514-6b6f-4adb-b927-2d0119818df5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/project/:projectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"project",
														":projectId"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "{{projectId}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "07dbc5d9-4882-4825-8ba0-140b02599d40",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/project/:projectId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"project",
																":projectId"
															],
															"variable": [
																{
																	"key": "projectId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "602ab973-4ae9-4fac-b57e-a520599558ef",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/project/:projectId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"project",
																":projectId"
															],
															"variable": [
																{
																	"key": "projectId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No projectId - Get A Project",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "29356afb-19ba-4c98-bab4-3ae5622dff46",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that project Id is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "17717756-8940-4005-9e9e-51a950fac7ff",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/project/:projectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"project",
														":projectId"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "941b834c-7da9-437c-8f12-b279bb8d88c8",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/project/:projectId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"project",
																":projectId"
															],
															"variable": [
																{
																	"key": "projectId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "c7156bed-99fa-44fb-8fc4-061c055b0826",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/project/:projectId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"project",
																":projectId"
															],
															"variable": [
																{
																	"key": "projectId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Invalid projectId - Get A Project",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "29356afb-19ba-4c98-bab4-3ae5622dff46",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that project Id is invalid\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "5fe51fe5-4a40-4301-b0aa-405aded25d47",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/project/:projectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"project",
														":projectId"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "6586d903-203f-4819-3a1b-02661c275",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "58a4fbe9-8b51-4f9a-ac1e-20f181c73ca0",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/project/:projectId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"project",
																":projectId"
															],
															"variable": [
																{
																	"key": "projectId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "b2c91859-a84d-469a-92a8-74e656b30b19",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/project/:projectId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"project",
																":projectId"
															],
															"variable": [
																{
																	"key": "projectId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Get A Project",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4f252030-7eb8-4437-bbf3-b0fcdc717c44",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "bb31f2f8-0fb6-4c38-8671-860d3134902a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/project/:projectId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"project",
														":projectId"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "39d6b3c5-05f3-4a50-8a48-32ad10bd64f0",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/project/:projectId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"project",
																":projectId"
															],
															"variable": [
																{
																	"key": "projectId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "5ee7df0a-aaef-4fa6-99d4-638ba6e823b1",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/project/:projectId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"project",
																":projectId"
															],
															"variable": [
																{
																	"key": "projectId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "e6d452aa-3501-4d23-b256-5de0a181cbb6"
								},
								{
									"name": "edit",
									"item": [
										{
											"name": "Success - Edit project",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d3722777-99f7-4e3c-b3df-6dc4feed7eae",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var data = responseJSON.data;\r",
															"\r",
															"pm.test(\"Verify that supplier is updated successfully\", function () {\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(data.message).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(data.id).to.be.a(\"string\").and.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "aaee2612-3ff5-42b2-bcd9-a187d9bacb21",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n        \"projectId\": \"2fe3cae6-03cf-46d5-fbfc-08dd28bc3926\",\n            \"projectName\": \"Portharcourt refinery\",\n            \"projectValue\": 50000.00,\n            \"yearOfExecution\": 2003,\n            \"companyId\": \"6586d903-203f-4819-3a1b-08dd2661c275\",\n            \"clientName\": \"Portharcourt govt\"\n}    ",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/project/edit"
											},
											"response": [
												{
													"id": "7deaaf73-a956-4292-b22d-3233555eb511",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"projectId\": \"<string>\",\n  \"projectName\": \"<string>\",\n  \"projectValue\": \"<number>\",\n  \"yearOfExecution\": \"<integer>\",\n  \"companyId\": \"<string>\",\n  \"clientName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/project/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "d43b3feb-4eda-4f04-ae0b-ab423c698cb3",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"projectId\": \"<string>\",\n  \"projectName\": \"<string>\",\n  \"projectValue\": \"<number>\",\n  \"yearOfExecution\": \"<integer>\",\n  \"companyId\": \"<string>\",\n  \"clientName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/project/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Create Project",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9ba9ee5c-e635-48a6-a416-7031f5f8cb5a",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "05eefc62-dba7-4efd-9a4e-dcda4d0d3a3e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"projectId\": \"<string>\",\n  \"projectName\": \"<string>\",\n  \"projectValue\": \"<number>\",\n  \"yearOfExecution\": \"<integer>\",\n  \"companyId\": \"<string>\",\n  \"clientName\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/project/edit"
											},
											"response": [
												{
													"id": "8c3db843-be53-4691-a8fc-16e0deeedc76",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"projectId\": \"<string>\",\n  \"projectName\": \"<string>\",\n  \"projectValue\": \"<number>\",\n  \"yearOfExecution\": \"<integer>\",\n  \"companyId\": \"<string>\",\n  \"clientName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/project/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "9183def8-ff01-4438-924e-ebfb01950a77",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"projectId\": \"<string>\",\n  \"projectName\": \"<string>\",\n  \"projectValue\": \"<number>\",\n  \"yearOfExecution\": \"<integer>\",\n  \"companyId\": \"<string>\",\n  \"clientName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/project/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Empty fields - Create Project",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "533b1510-0250-4d07-aed2-bfd265e62e1b",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that empty required fields are flagged\", function () {\r",
															"\r",
															"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "dc115ca9-6a6e-4ca6-9d63-f5f254da65c2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"projectId\": \"\",\n  \"projectName\": \"\",\n  \"projectValue\": \"\",\n  \"yearOfExecution\": \"\",\n  \"companyId\": \"\",\n  \"clientName\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/project/edit"
											},
											"response": [
												{
													"id": "cf4d14e0-474c-4c6a-86fe-a86994f76118",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"projectId\": \"<string>\",\n  \"projectName\": \"<string>\",\n  \"projectValue\": \"<number>\",\n  \"yearOfExecution\": \"<integer>\",\n  \"companyId\": \"<string>\",\n  \"clientName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/project/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "27b86753-58bc-4973-89dd-5217fea2f5d0",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"projectId\": \"<string>\",\n  \"projectName\": \"<string>\",\n  \"projectValue\": \"<number>\",\n  \"yearOfExecution\": \"<integer>\",\n  \"companyId\": \"<string>\",\n  \"clientName\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/project/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "822b350a-4e32-4be7-9688-61b38f1a15b5"
								},
								{
									"name": "delete",
									"item": [
										{
											"name": "No projectId - Delete Project",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f09ddaa8-9fea-44f3-8af8-71e0b3888e97",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that project Id is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "9929c26d-32f5-4dc5-b23f-214062223598",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"projectId\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/project/delete"
											},
											"response": [
												{
													"id": "3b937678-1ff9-48b6-9c45-e39fbd2761c6",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"projectId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/project/delete"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "691d3fed-0058-46d0-b0b9-d64b4ba74834",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"projectId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/project/delete"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Invalid projectId - Delete Project",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f09ddaa8-9fea-44f3-8af8-71e0b3888e97",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that project Id is invalid\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "70755a07-0cc7-41a0-979f-f3734f4dfda0",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"projectId\": \"6586-203f-4819-3a1b-08dd2661c275\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/project/delete"
											},
											"response": [
												{
													"id": "5d1e587c-fa2f-4558-baf7-98646271e7f4",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"projectId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/project/delete"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "4843ab83-238e-4146-87cd-b68edc6fbf77",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"projectId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/project/delete"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Delete Project",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f4976127-0e9f-4d8c-a135-f88f492cc8ee",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "14a2fa12-69c2-4adf-abd5-e047b182bdab",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"projectId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/project/delete"
											},
											"response": [
												{
													"id": "a33245de-7492-474e-857c-2e4c0b01a813",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"projectId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/project/delete"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "e8ce284d-e873-447d-a20c-d53efcfa2dc0",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"projectId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/project/delete"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "c1ad1084-d5d1-4524-afb5-346af7f9bfb7"
								}
							],
							"id": "676e2f97-5308-4147-99dd-2a3d233bd24b"
						},
						{
							"name": "personnel",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Success - Create Personnel",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "87b2abf7-9ca5-4be3-bd84-a6510c11755c",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var data = responseJSON.data;\r",
															"\r",
															"pm.test(\"Verify that personnel are created successfully\", function () {\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(data.message).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(data.id).to.be.a(\"string\").and.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "8c325669-1563-415c-ae59-03cc538f27a4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n // \"personalId\": \"<string>\",\n  \"fullName\": \"{{$randomFullName}}\",\n  \"country\": \"Nigeria\",\n  \"address\": \"1 jojo lane\",\n  \"stateOfOrigin\": \"Ondo\",\n  \"maritalStatus\": \"married\",\n  \"companyId\": \"{{supplierId}}\",\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"malvika@yopmail.com\",\n  \"designation\": \"PA\",\n  \"educationInformations\": [\n    {\n     // \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"Oklahoma\",\n      \"startYear\": \"1998-09-08\",\n      \"endYear\": \"2002-09-08\",\n      \"certificateAwarded\": \"Bsc\",\n     // \"personalId\": \"<string>\",\n      \"educationLevel\": \"bachelors\",\n      \"major\": \"Science\"\n    }\n    // {\n    //  // \"educationInformationId\": \"<string>\",\n    //   \"schoolName\": \"<string>\",\n    //   \"startYear\": \"<dateTime>\",\n    //   \"endYear\": \"<dateTime>\",\n    //   \"certificateAwarded\": \"<string>\",\n    //   \"personalId\": \"<string>\",\n    //   \"educationLevel\": \"<string>\",\n    //   \"major\": \"<string>\"\n    // }\n  ],\n  \"workExperiences\": [\n    {\n    //  \"workExperienceId\": \"<string>\",\n      \"companyName\": \"OJ refinery\",\n      \"appointmentDate\": \"2004-09-08\",\n      \"disengagementDate\": \"2007-09-08\",\n      \"jobTitle\": \"Engineer\",\n     // \"personalId\": \"<string>\",\n      \"country\": \"Nigeria\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": false\n    },\n    {\n     // \"workExperienceId\": \"<string>\",\n      \"companyName\": \"AP\",\n      \"appointmentDate\": \"2008-09-08\",\n      \"disengagementDate\": \"2025-09-08\",\n      \"jobTitle\": \"Engineer\",\n    //  \"personalId\": \"<string>\",\n      \"country\": \"Nigeria\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": true\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/personnel/create"
											},
											"response": [
												{
													"id": "7ac21d66-5ac6-4baa-bbd8-78cabb36def3",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"personalId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"country\": \"<string>\",\n  \"address\": \"<string>\",\n  \"stateOfOrigin\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"designation\": \"<string>\",\n  \"educationInformations\": [\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    },\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    }\n  ],\n  \"workExperiences\": [\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    },\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/personnel/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "61623fbc-de26-4a79-9e42-78e6e0f57762",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"personalId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"country\": \"<string>\",\n  \"address\": \"<string>\",\n  \"stateOfOrigin\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"designation\": \"<string>\",\n  \"educationInformations\": [\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    },\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    }\n  ],\n  \"workExperiences\": [\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    },\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/personnel/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Empty fields - Create Personnel",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "87b2abf7-9ca5-4be3-bd84-a6510c11755c",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var data = responseJSON.data;\r",
															"\r",
															"pm.test(\"Verify that personnel are created successfully\", function () {\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(data.message).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(data.id).to.be.a(\"string\").and.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "cb8fe362-1e4e-4484-bd22-b83ee3749fcb",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n // \"personalId\": \"<string>\",\n  \"fullName\": \"\",\n  \"country\": \"\",\n  \"address\": \"\",\n  \"stateOfOrigin\": \"\",\n  \"maritalStatus\": \"\",\n  \"companyId\": \"\",\n  \"phoneNumber\": \"\",\n  \"email\": \"\",\n  \"designation\": \"\",\n  \"educationInformations\": [\n    {\n     // \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"\",\n      \"startYear\": \"\",\n      \"endYear\": \"\",\n      \"certificateAwarded\": \"\",\n     // \"personalId\": \"<string>\",\n      \"educationLevel\": \"\",\n      \"major\": \"\"\n    }\n    // {\n    //  // \"educationInformationId\": \"<string>\",\n    //   \"schoolName\": \"<string>\",\n    //   \"startYear\": \"<dateTime>\",\n    //   \"endYear\": \"<dateTime>\",\n    //   \"certificateAwarded\": \"<string>\",\n    //   \"personalId\": \"<string>\",\n    //   \"educationLevel\": \"<string>\",\n    //   \"major\": \"<string>\"\n    // }\n  ],\n  \"workExperiences\": [\n    {\n    //  \"workExperienceId\": \"<string>\",\n      \"companyName\": \"OJ refinery\",\n      \"appointmentDate\": \"2004-09-08\",\n      \"disengagementDate\": \"2007-09-08\",\n      \"jobTitle\": \"Engineer\",\n     // \"personalId\": \"<string>\",\n      \"country\": \"Nigeria\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": false\n    },\n    {\n     // \"workExperienceId\": \"<string>\",\n      \"companyName\": \"AP\",\n      \"appointmentDate\": \"2008-09-08\",\n      \"disengagementDate\": \"2025-09-08\",\n      \"jobTitle\": \"Engineer\",\n    //  \"personalId\": \"<string>\",\n      \"country\": \"Nigeria\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": true\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/personnel/create"
											},
											"response": [
												{
													"id": "2e90023e-adb0-45b4-8aa8-d49e6f1bbe67",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"personalId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"country\": \"<string>\",\n  \"address\": \"<string>\",\n  \"stateOfOrigin\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"designation\": \"<string>\",\n  \"educationInformations\": [\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    },\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    }\n  ],\n  \"workExperiences\": [\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    },\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/personnel/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "ec67fb45-7871-43bd-beff-19ee2b1becb8",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"personalId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"country\": \"<string>\",\n  \"address\": \"<string>\",\n  \"stateOfOrigin\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"designation\": \"<string>\",\n  \"educationInformations\": [\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    },\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    }\n  ],\n  \"workExperiences\": [\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    },\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/personnel/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Invalid email and fullname format - Create Personnel",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "87b2abf7-9ca5-4be3-bd84-a6510c11755c",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var data = responseJSON.data;\r",
															"\r",
															"pm.test(\"Verify that supplier is updated successfully\", function () {\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(data.message).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(data.id).to.be.a(\"string\").and.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "1f891d25-7a6a-45c3-92a6-5d42a3163e83",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n // \"personalId\": \"<string>\",\n  \"fullName\": \"Malik West23\",\n  \"country\": \"Nigeria\",\n  \"address\": \"1 jojo lane\",\n  \"stateOfOrigin\": \"Ondo\",\n  \"maritalStatus\": \"married\",\n  \"companyId\": \"{{supplierId}}\",\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"malikyopmail.com\",\n  \"designation\": \"PA\",\n  \"educationInformations\": [\n    {\n     // \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"Oklahoma\",\n      \"startYear\": \"1998-09-08\",\n      \"endYear\": \"2002-09-08\",\n      \"certificateAwarded\": \"Bsc\",\n     // \"personalId\": \"<string>\",\n      \"educationLevel\": \"bachelors\",\n      \"major\": \"Science\"\n    }\n    // {\n    //  // \"educationInformationId\": \"<string>\",\n    //   \"schoolName\": \"<string>\",\n    //   \"startYear\": \"<dateTime>\",\n    //   \"endYear\": \"<dateTime>\",\n    //   \"certificateAwarded\": \"<string>\",\n    //   \"personalId\": \"<string>\",\n    //   \"educationLevel\": \"<string>\",\n    //   \"major\": \"<string>\"\n    // }\n  ],\n  \"workExperiences\": [\n    {\n    //  \"workExperienceId\": \"<string>\",\n      \"companyName\": \"OJ refinery\",\n      \"appointmentDate\": \"2004-09-08\",\n      \"disengagementDate\": \"2007-09-08\",\n      \"jobTitle\": \"Engineer\",\n     // \"personalId\": \"<string>\",\n      \"country\": \"Nigeria\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": false\n    },\n    {\n     // \"workExperienceId\": \"<string>\",\n      \"companyName\": \"AP\",\n      \"appointmentDate\": \"2008-09-08\",\n      \"disengagementDate\": \"2025-09-08\",\n      \"jobTitle\": \"Engineer\",\n    //  \"personalId\": \"<string>\",\n      \"country\": \"Nigeria\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": true\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/personnel/create"
											},
											"response": [
												{
													"id": "85378bfd-9a3b-4744-8df5-48942cfe17ce",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"personalId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"country\": \"<string>\",\n  \"address\": \"<string>\",\n  \"stateOfOrigin\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"designation\": \"<string>\",\n  \"educationInformations\": [\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    },\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    }\n  ],\n  \"workExperiences\": [\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    },\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/personnel/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "07cc4d86-6363-4981-9a3d-bbce2dedd1eb",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"personalId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"country\": \"<string>\",\n  \"address\": \"<string>\",\n  \"stateOfOrigin\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"designation\": \"<string>\",\n  \"educationInformations\": [\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    },\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    }\n  ],\n  \"workExperiences\": [\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    },\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/personnel/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Create Personnel",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3f596033-27ca-46ba-9ae5-a47ed0f40b87",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "7c8b1f3b-f456-468e-a025-652d78dda78c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"personalId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"country\": \"<string>\",\n  \"address\": \"<string>\",\n  \"stateOfOrigin\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"designation\": \"<string>\",\n  \"educationInformations\": [\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    },\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    }\n  ],\n  \"workExperiences\": [\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    },\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/personnel/create"
											},
											"response": [
												{
													"id": "fcbe49c9-7e88-4889-8657-e161a643a60d",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"personalId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"country\": \"<string>\",\n  \"address\": \"<string>\",\n  \"stateOfOrigin\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"designation\": \"<string>\",\n  \"educationInformations\": [\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    },\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    }\n  ],\n  \"workExperiences\": [\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    },\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/personnel/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "4c2235fe-54df-4be5-a659-1134e991d4e7",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"personalId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"country\": \"<string>\",\n  \"address\": \"<string>\",\n  \"stateOfOrigin\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"designation\": \"<string>\",\n  \"educationInformations\": [\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    },\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    }\n  ],\n  \"workExperiences\": [\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    },\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/personnel/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "54b1f3cd-1889-4b43-bea1-1f31dd042b02"
								},
								{
									"name": "personnels",
									"item": [
										{
											"name": "{companyId}",
											"item": [
												{
													"name": "Success - Get All Personnel",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "944e6bf0-f0c7-443a-8ac1-a095491a11c0",
																"exec": [
																	"\r",
																	"pm.collectionVariables.set(\"personalId\", pm.response.json().data[0].personalId);\r",
																	"\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"var responseJSON = pm.response.json();\r",
																	"var data = responseJSON.data;\r",
																	"\r",
																	"pm.test(\"Verify that personnels are returned\", function () {\r",
																	"    pm.expect(responseJSON.pageNumber).to.be.a(\"number\");\r",
																	"      pm.expect(responseJSON.pageSize).to.be.a(\"number\");\r",
																	"        pm.expect(responseJSON.totalRecords).to.be.a(\"number\");\r",
																	"    pm.expect(data[0].personalId).to.be.a(\"string\").and.not.empty;\r",
																	"   // pm.expect(data.id).to.be.a(\"string\").and.not.empty;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "1a51e264-4ca3-4a52-838e-028b58f04192",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{bearerToken}}"
															}
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/personnel/personnels/:companyId?pageNumber=1&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"personnel",
																"personnels",
																":companyId"
															],
															"query": [
																{
																	"key": "pageNumber",
																	"value": "1",
																	"description": "(Required) "
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "companyId",
																	"value": "{{supplierId}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "2c9472bf-a34f-4bbf-92bc-b298237f4d75",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/personnel/personnels/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"personnel",
																		"personnels",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "706bbff8-d7d1-4dfb-92a5-f9a43f1a350a",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/personnel/personnels/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"personnel",
																		"personnels",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												},
												{
													"name": "No companyId - Get All Personnel",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "3826f432-3078-41a9-9a85-eca9a0616a60",
																"exec": [
																	"pm.test(\"Status code is 400\", function () {\r",
																	"    pm.response.to.have.status(400);\r",
																	"});\r",
																	"\r",
																	"var responseJSON = pm.response.json();\r",
																	"var errors = responseJSON.errors;\r",
																	"\r",
																	"pm.test(\"Verify that company Id is required\", function () {\r",
																	"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
																	"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "e9763b66-dc28-4146-ab42-28b3a13a53ad",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{bearerToken}}"
															}
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/personnel/personnels/:companyId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"personnel",
																"personnels",
																":companyId"
															],
															"query": [
																{
																	"key": "pageNumber",
																	"value": "<integer>",
																	"description": "(Required) "
																},
																{
																	"key": "pageSize",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "companyId",
																	"value": "",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "fa6b09a0-0a68-4d6a-90b5-e9f2a7179aef",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/personnel/personnels/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"personnel",
																		"personnels",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "fd1cf22e-8d63-4032-8d7a-e427fdb91a01",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/personnel/personnels/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"personnel",
																		"personnels",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												},
												{
													"name": "Invalid companyId - Get All Personnel",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "3826f432-3078-41a9-9a85-eca9a0616a60",
																"exec": [
																	"pm.test(\"Status code is 400\", function () {\r",
																	"    pm.response.to.have.status(400);\r",
																	"});\r",
																	"\r",
																	"var responseJSON = pm.response.json();\r",
																	"var errors = responseJSON.errors;\r",
																	"\r",
																	"pm.test(\"Verify that company Id is required\", function () {\r",
																	"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
																	"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "3024a0df-4c47-46b9-b3da-458fcec6b920",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{bearerToken}}"
															}
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/personnel/personnels/:companyId?pageNumber=1&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"personnel",
																"personnels",
																":companyId"
															],
															"query": [
																{
																	"key": "pageNumber",
																	"value": "1",
																	"description": "(Required) "
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "companyId",
																	"value": "6586d903-203f-4819-3a1b-0",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "54e2cd74-bf1d-447b-9d45-a163b51b5dd5",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/personnel/personnels/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"personnel",
																		"personnels",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "69e26627-553e-4c65-8395-8be2985a9d85",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/personnel/personnels/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"personnel",
																		"personnels",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												},
												{
													"name": "No auth - Get All Personnel",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "20adc52d-1141-4b8f-9510-a99bf1b57fcb",
																"exec": [
																	"pm.test(\"Status code is 401\", function () {\r",
																	"    pm.response.to.have.status(401);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
																	"    pm.response.to.have.status(\"Unauthorized\");\r",
																	"});"
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "c5a60d2f-d7e9-4b08-b3fc-05cac8a4e0e6",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/personnel/personnels/:companyId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"personnel",
																"personnels",
																":companyId"
															],
															"query": [
																{
																	"key": "pageNumber",
																	"value": "<integer>",
																	"description": "(Required) "
																},
																{
																	"key": "pageSize",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "companyId",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "95fc3697-9a81-41a1-855c-1bd1ff96fda6",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/personnel/personnels/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"personnel",
																		"personnels",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "3b628356-a4ed-4b86-9259-9864c8504819",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/personnel/personnels/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"personnel",
																		"personnels",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												}
											],
											"id": "23a03cc8-fdb0-4fba-8b72-711d6c7c5bc6"
										}
									],
									"id": "8d8e6d5c-e1cf-41ae-a77a-c46e4bfebae5"
								},
								{
									"name": "edit",
									"item": [
										{
											"name": "Success - Edit Personnel",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d28cd705-f9b8-4597-b884-c32bdc78f128",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var data = responseJSON.data;\r",
															"\r",
															"pm.test(\"Verify that personnel is updated successfully\", function () {\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(data.message).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(data.id).to.be.a(\"string\").and.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "d654b2c1-43a9-42f9-aab8-d3ab585df607",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "// {\n//   \"personalId\": \"<string>\",\n//   \"fullName\": \"<string>\",\n//   \"country\": \"<string>\",\n//   \"address\": \"<string>\",\n//   \"stateOfOrigin\": \"<string>\",\n//   \"maritalStatus\": \"<string>\",\n//   \"companyId\": \"<string>\",\n//   \"phoneNumber\": \"<string>\",\n//   \"email\": \"<string>\",\n//   \"designation\": \"<string>\",\n//   \"educationInformations\": [\n//     {\n//       \"educationInformationId\": \"<string>\",\n//       \"schoolName\": \"<string>\",\n//       \"startYear\": \"<dateTime>\",\n//       \"endYear\": \"<dateTime>\",\n//       \"certificateAwarded\": \"<string>\",\n//       \"personalId\": \"<string>\",\n//       \"educationLevel\": \"<string>\",\n//       \"major\": \"<string>\"\n//     },\n//     {\n//       \"educationInformationId\": \"<string>\",\n//       \"schoolName\": \"<string>\",\n//       \"startYear\": \"<dateTime>\",\n//       \"endYear\": \"<dateTime>\",\n//       \"certificateAwarded\": \"<string>\",\n//       \"personalId\": \"<string>\",\n//       \"educationLevel\": \"<string>\",\n//       \"major\": \"<string>\"\n//     }\n//   ],\n//   \"workExperiences\": [\n//     {\n//       \"workExperienceId\": \"<string>\",\n//       \"companyName\": \"<string>\",\n//       \"appointmentDate\": \"<dateTime>\",\n//       \"disengagementDate\": \"<dateTime>\",\n//       \"jobTitle\": \"<string>\",\n//       \"personalId\": \"<string>\",\n//       \"country\": \"<string>\",\n//       \"descriptions\": \"<string>\",\n//       \"isCurrentJob\": \"<boolean>\"\n//     },\n//     {\n//       \"workExperienceId\": \"<string>\",\n//       \"companyName\": \"<string>\",\n//       \"appointmentDate\": \"<dateTime>\",\n//       \"disengagementDate\": \"<dateTime>\",\n//       \"jobTitle\": \"<string>\",\n//       \"personalId\": \"<string>\",\n//       \"country\": \"<string>\",\n//       \"descriptions\": \"<string>\",\n//       \"isCurrentJob\": \"<boolean>\"\n//     }\n//   ]\n// }\n  {\n            \"personalId\": \"d853953c-9e96-4080-34ad-08dd28c4814e\",\n            \"fullName\": \"Malik West70\",\n            \"country\": \"Nigeria\",\n            \"address\": \"1 jojo lane\",\n            \"stateOfOrigin\": \"Ondo\",\n            \"maritalStatus\": \"married\",\n            \"companyId\": \"6586d903-203f-4819-3a1b-08dd2661c275\",\n            \"phoneNumber\": \"<string>\",\n            \"email\": \"malikyopmail.com\",\n            \"designation\": \"PA\",\n            \"educationInformations\": [\n                {\n                    \"educationInformationId\": \"56b80d1c-825b-4d30-0967-08dd28c48154\",\n                    \"schoolName\": \"Oklahoma\",\n                    \"startYear\": \"1998-09-08T00:00:00\",\n                    \"endYear\": \"2002-09-08T00:00:00\",\n                    \"certificateAwarded\": \"Bsc\",\n                    \"personalId\": \"d853953c-9e96-4080-34ad-08dd28c4814e\",\n                    \"educationLevel\": \"bachelors\",\n                    \"major\": \"Science\"\n                }\n            ],\n            \"workExperiences\": [\n                {\n                    \"workExperienceId\": \"a433c765-6714-4d3d-41f9-08dd28c48157\",\n                    \"companyName\": \"OJ refinery\",\n                    \"appointmentDate\": \"2004-09-08T00:00:00\",\n                    \"disengagementDate\": \"2007-09-08T00:00:00\",\n                    \"jobTitle\": \"Engineer\",\n                    \"personalId\": \"d853953c-9e96-4080-34ad-08dd28c4814e\",\n                    \"country\": \"Nigeria\",\n                    \"descriptions\": \"<string>\",\n                    \"isCurrentJob\": false\n                },\n                {\n                    \"workExperienceId\": \"cb3dbf43-ca63-467d-41fa-08dd28c48157\",\n                    \"companyName\": \"AP\",\n                    \"appointmentDate\": \"2008-09-08T00:00:00\",\n                    \"disengagementDate\": \"2025-09-08T00:00:00\",\n                    \"jobTitle\": \"Engineer\",\n                    \"personalId\": \"d853953c-9e96-4080-34ad-08dd28c4814e\",\n                    \"country\": \"Nigeria\",\n                    \"descriptions\": \"<string>\",\n                    \"isCurrentJob\": true\n                }\n            ]\n  }\n        ",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/personnel/edit"
											},
											"response": [
												{
													"id": "b5161de7-1838-47f0-a0e1-f1288c3036d6",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"personalId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"country\": \"<string>\",\n  \"address\": \"<string>\",\n  \"stateOfOrigin\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"designation\": \"<string>\",\n  \"educationInformations\": [\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    },\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    }\n  ],\n  \"workExperiences\": [\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    },\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/personnel/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "7f38fc6b-b739-46f4-9335-8e3433c77989",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"personalId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"country\": \"<string>\",\n  \"address\": \"<string>\",\n  \"stateOfOrigin\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"designation\": \"<string>\",\n  \"educationInformations\": [\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    },\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    }\n  ],\n  \"workExperiences\": [\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    },\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/personnel/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "EMpty fields Edit Personnel",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "14d01734-db2a-4827-81e2-13c558005d1b",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that empty required fields are flagged\", function () {\r",
															"\r",
															"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "8627a06d-0cc4-4eac-8dc2-dd95156e166b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"personalId\": \"{{personalId}}\",\n  \"fullName\": \"\",\n  \"country\": \"\",\n  \"address\": \"\",\n  \"stateOfOrigin\": \"\",\n  \"maritalStatus\": \"\",\n  \"companyId\": \"{{supplierId}}\",\n  \"phoneNumber\": \"\",\n  \"email\": \"\",\n  \"designation\": \"\",\n  \"educationInformations\": [\n    {\n     // \"educationInformationId\": \"\",\n      \"schoolName\": \"\",\n      \"startYear\": \"2020-08-08\",\n      \"endYear\": \"2024-08-08\",\n      \"certificateAwarded\": \"\",\n      \"personalId\": \"{{personalId}}\",\n      \"educationLevel\": \"\",\n      \"major\": \"\"\n    },\n    {\n     // \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"\",\n      \"startYear\": \"2009-08-08\",\n      \"endYear\": \"2011-07-09\",\n      \"certificateAwarded\": \"\",\n      \"personalId\": \"{{personalId}}\",\n      \"educationLevel\": \"\",\n      \"major\": \"\"\n    }\n  ],\n  \"workExperiences\": [\n    {\n    //  \"workExperienceId\": \"<string>\",\n      \"companyName\": \"\",\n      \"appointmentDate\": \"2020-09-09\",\n      \"disengagementDate\": \"2026-09-09\",\n      \"jobTitle\": \"\",\n      \"personalId\": \"{{personalId}}\",\n      \"country\": \"\",\n      \"descriptions\": \"\",\n      \"isCurrentJob\": true\n    },\n    {\n    //  \"workExperienceId\": \"<string>\",\n      \"companyName\": \"\",\n      \"appointmentDate\": \"2020-08-08\",\n      \"disengagementDate\": \"2023-08-08\",\n      \"jobTitle\": \"\",\n      \"personalId\": \"{{personalId}}\",\n      \"country\": \"\",\n      \"descriptions\": \"\",\n      \"isCurrentJob\": false\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/personnel/edit"
											},
											"response": [
												{
													"id": "1360a19b-58e5-47c9-bf2f-ee0b22c51650",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"personalId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"country\": \"<string>\",\n  \"address\": \"<string>\",\n  \"stateOfOrigin\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"designation\": \"<string>\",\n  \"educationInformations\": [\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    },\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    }\n  ],\n  \"workExperiences\": [\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    },\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/personnel/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "748db8a9-10bd-4594-8206-6fa55d0b25aa",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"personalId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"country\": \"<string>\",\n  \"address\": \"<string>\",\n  \"stateOfOrigin\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"designation\": \"<string>\",\n  \"educationInformations\": [\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    },\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    }\n  ],\n  \"workExperiences\": [\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    },\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/personnel/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Edit Personnel",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1d128a50-6f7e-4a15-a9c3-494b42c51f6b",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "e8bcc191-fe72-46ce-8583-5e69546c0936",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"personalId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"country\": \"<string>\",\n  \"address\": \"<string>\",\n  \"stateOfOrigin\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"designation\": \"<string>\",\n  \"educationInformations\": [\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    },\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    }\n  ],\n  \"workExperiences\": [\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    },\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/personnel/edit"
											},
											"response": [
												{
													"id": "5e0b4093-db84-4c03-9124-e6fa8baaeb45",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"personalId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"country\": \"<string>\",\n  \"address\": \"<string>\",\n  \"stateOfOrigin\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"designation\": \"<string>\",\n  \"educationInformations\": [\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    },\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    }\n  ],\n  \"workExperiences\": [\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    },\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/personnel/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "b4f98b3d-3cb8-4099-88e3-7cdaafd1fc87",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"personalId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"country\": \"<string>\",\n  \"address\": \"<string>\",\n  \"stateOfOrigin\": \"<string>\",\n  \"maritalStatus\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"email\": \"<string>\",\n  \"designation\": \"<string>\",\n  \"educationInformations\": [\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    },\n    {\n      \"educationInformationId\": \"<string>\",\n      \"schoolName\": \"<string>\",\n      \"startYear\": \"<dateTime>\",\n      \"endYear\": \"<dateTime>\",\n      \"certificateAwarded\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"educationLevel\": \"<string>\",\n      \"major\": \"<string>\"\n    }\n  ],\n  \"workExperiences\": [\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    },\n    {\n      \"workExperienceId\": \"<string>\",\n      \"companyName\": \"<string>\",\n      \"appointmentDate\": \"<dateTime>\",\n      \"disengagementDate\": \"<dateTime>\",\n      \"jobTitle\": \"<string>\",\n      \"personalId\": \"<string>\",\n      \"country\": \"<string>\",\n      \"descriptions\": \"<string>\",\n      \"isCurrentJob\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/personnel/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "d5642c1e-4fcd-44f1-bcef-dbc66c38a8d4"
								},
								{
									"name": "remove",
									"item": [
										{
											"name": "No personnelId - Delete Personnel",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5eb75e56-edcd-4d36-abd1-edaeeff5f9bb",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that personnel Id is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "eac376cd-3347-4c41-bbb4-c25f12f6e025",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"personnelId\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/personnel/remove"
											},
											"response": [
												{
													"id": "812b0a1c-7bbd-4d44-9788-fdc19eaab247",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"personnelId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/personnel/remove"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "884d2512-38a1-4dcc-9418-2b8484b84d0c",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"personnelId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/personnel/remove"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Invalid personnelId - Delete Personnel",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5eb75e56-edcd-4d36-abd1-edaeeff5f9bb",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that personnel Id is invalid\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "1d5efa26-8f06-4c31-a291-3a9578f06116",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"personnelId\": \"6586d903-203f-4819-3a1b-08dd266\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/personnel/remove"
											},
											"response": [
												{
													"id": "2e0971dd-d080-4739-84da-338d2dce9168",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"personnelId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/personnel/remove"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "456b9b4f-9925-4702-8f6b-04b1a4f6ecec",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"personnelId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/personnel/remove"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Delete Personnel",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bd0b0536-5162-4f2e-bc38-7cd4393a12fa",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "e0b56dc4-e85b-46db-bbeb-cbdb38934630",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"personnelId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/personnel/remove"
											},
											"response": [
												{
													"id": "55aa69c6-1f9e-4a06-bb14-d5f860166960",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"personnelId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/personnel/remove"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "e331b5d9-8961-4934-ba4d-db5010a26805",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"personnelId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/personnel/remove"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "47a3c8e2-f618-4761-833e-3982fb0c155a"
								},
								{
									"name": "personnel",
									"item": [
										{
											"name": "{personalId}",
											"item": [
												{
													"name": "Success - Get A Personnel",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "d07f9ced-93ed-4581-9bf2-62771a8ed054",
																"exec": [
																	"//pm.collectionVariables.set(\"projectId\", pm.response.json().data.id);\r",
																	"\r",
																	"\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"var responseJSON = pm.response.json();\r",
																	"var data = responseJSON.data;\r",
																	"\r",
																	"pm.test(\"Verify that project is returned successfully\", function () {\r",
																	"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
																	"    pm.expect(data.personalId).to.be.a(\"string\").and.not.empty;\r",
																	"    pm.expect(data.fullName).to.be.a(\"string\").and.not.empty;\r",
																	"       });\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "6d9c60ad-cc7e-419e-b602-267207450009",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{bearerToken}}"
															}
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/personnel/personnel/:personalId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"personnel",
																"personnel",
																":personalId"
															],
															"variable": [
																{
																	"key": "personalId",
																	"value": "{{personalId}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "a30fa7df-8dac-470a-89eb-f9b3b45736ae",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/personnel/personnel/:personalId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"personnel",
																		"personnel",
																		":personalId"
																	],
																	"variable": [
																		{
																			"key": "personalId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "3f6e1cea-7e40-417c-8a0c-917aaa564c5b",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/personnel/personnel/:personalId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"personnel",
																		"personnel",
																		":personalId"
																	],
																	"variable": [
																		{
																			"key": "personalId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												},
												{
													"name": "Invalid PersonnelId - Get A Personnel",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "86d9b4c5-43ed-4f70-9787-60204e801f70",
																"exec": [
																	"pm.test(\"Status code is 400\", function () {\r",
																	"    pm.response.to.have.status(400);\r",
																	"});\r",
																	"\r",
																	"var responseJSON = pm.response.json();\r",
																	"var errors = responseJSON.errors;\r",
																	"\r",
																	"pm.test(\"Verify that personnel Id is invalid\", function () {\r",
																	"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
																	"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "26f3e0c7-7893-4c03-a17e-7c597b266060",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{bearerToken}}"
															}
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/personnel/personnel/:personalId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"personnel",
																"personnel",
																":personalId"
															],
															"variable": [
																{
																	"key": "personalId",
																	"value": "6586d903-2019-3a1b-08dd2661c275",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "fe995a54-8c76-46a9-92d5-38d484b4b826",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/personnel/personnel/:personalId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"personnel",
																		"personnel",
																		":personalId"
																	],
																	"variable": [
																		{
																			"key": "personalId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "bc7b349b-d2dc-4b06-a9ce-adbda586775a",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/personnel/personnel/:personalId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"personnel",
																		"personnel",
																		":personalId"
																	],
																	"variable": [
																		{
																			"key": "personalId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												},
												{
													"name": "No PersonnelId - Get A Personnel",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "86d9b4c5-43ed-4f70-9787-60204e801f70",
																"exec": [
																	"pm.test(\"Status code is 400\", function () {\r",
																	"    pm.response.to.have.status(400);\r",
																	"});\r",
																	"\r",
																	"var responseJSON = pm.response.json();\r",
																	"var errors = responseJSON.errors;\r",
																	"\r",
																	"pm.test(\"Verify that personnel Id is required\", function () {\r",
																	"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
																	"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "38f3398b-0e49-4729-ae36-fcc9660f0a93",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{bearerToken}}"
															}
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/personnel/personnel/:personalId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"personnel",
																"personnel",
																":personalId"
															],
															"variable": [
																{
																	"key": "personalId",
																	"value": "",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "328dd58e-47c6-4dfc-a210-c9e1215615e2",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/personnel/personnel/:personalId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"personnel",
																		"personnel",
																		":personalId"
																	],
																	"variable": [
																		{
																			"key": "personalId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "564885a5-05c1-4cd0-9d47-9851a9bda933",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/personnel/personnel/:personalId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"personnel",
																		"personnel",
																		":personalId"
																	],
																	"variable": [
																		{
																			"key": "personalId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												},
												{
													"name": "No auth - Get A Personnel",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "00e97c59-276c-487c-bba3-00ee25b67d48",
																"exec": [
																	"pm.test(\"Status code is 401\", function () {\r",
																	"    pm.response.to.have.status(401);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
																	"    pm.response.to.have.status(\"Unauthorized\");\r",
																	"});"
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "84b79e70-54df-42ce-917b-fac0aba1cf36",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/personnel/personnel/:personalId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"personnel",
																"personnel",
																":personalId"
															],
															"variable": [
																{
																	"key": "personalId",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "b68f464b-586d-4c92-8a22-5f4f8df9dac1",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/personnel/personnel/:personalId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"personnel",
																		"personnel",
																		":personalId"
																	],
																	"variable": [
																		{
																			"key": "personalId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "31356559-254a-4a4a-ad94-9795d91e0bc2",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/personnel/personnel/:personalId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"personnel",
																		"personnel",
																		":personalId"
																	],
																	"variable": [
																		{
																			"key": "personalId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												}
											],
											"id": "f557845c-f524-42f7-805d-6ffd7b4e3fb3"
										}
									],
									"id": "da5b2e2f-361b-4bdb-b96e-2834105ff41e"
								}
							],
							"id": "9f0ebdd8-45e7-42a8-9a25-26d9a7163fe0"
						},
						{
							"name": "checkSetup",
							"item": [
								{
									"name": "Anp Supplier Api Features Onboarding Check Supplier Setup Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "91bfe0e0-33a1-4308-a553-160fba6270ee",
												"exec": [
													"pm.collectionVariables.set(\"roleId\", pm.response.json().data.roleId);\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var data = responseJSON.data;\r",
													"\r",
													"pm.test(\"Verify that project is returned successfully\", function () {\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(data.message).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(data.roleId).to.be.a(\"string\").and.not.empty;\r",
													"       });\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "e7ecab8e-f51e-4ee7-81e6-21f86e426b6b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": "{{baseUrl}}/api/supplier/checkSetup"
									},
									"response": [
										{
											"id": "9cf255bf-d28e-49c3-a687-39ea49d037e6",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/supplier/checkSetup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "25022c81-6fc0-4d21-a95e-0d8bb74f8402",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/supplier/checkSetup"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "6e49c7bf-e500-4e69-ac54-9fffd082cb05"
						},
						{
							"name": "tags",
							"item": [
								{
									"name": "Success - Get Supplier Tags",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "49dabeaa-23e2-42c4-b5a3-1b1e7cc5f573",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var data = responseJSON.data;\r",
													"\r",
													"pm.test(\"Verify that tags are returned\", function () {\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(data[0].tagName).to.be.a(\"string\").and.not.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "3224a5f8-55b0-4cdf-936e-1aa8814c243b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": "{{baseUrl}}/api/supplier/tags"
									},
									"response": [
										{
											"id": "c3229b56-2cd7-4b10-a01f-6fefe519abf0",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/supplier/tags"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "e05e0855-5218-47f6-b135-60a29f1b75de",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/supplier/tags"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No auth - Get Supplier Tags",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "979c6e65-c3dc-4dd7-a381-c2c8257f516a",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "c67f7637-c08e-4bae-b945-8fade53d86d6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": "{{baseUrl}}/api/supplier/tags"
									},
									"response": [
										{
											"id": "d385f7b1-3945-44a3-8656-225f0cc634b1",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/supplier/tags"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "f49c39ca-4f32-4e79-94f9-1abc238bdc43",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/supplier/tags"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "12fcae61-de4a-4f0f-a511-6ab069f4cdd5"
						},
						{
							"name": "setstatus",
							"item": [
								{
									"name": "Anp Supplier Api Features Onboarding Set Status Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ce9bd093-b1b5-41a1-ba45-b93606952134",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"\r",
													"pm.test(\"Verify that setstatus is successful\", function () {\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "5cf4f402-fc91-4400-aef1-888fbdf91901",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"supplierId\": \"{{supplierId}}\",\n  \"onboardingStatus\": 1\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/supplier/setstatus"
									},
									"response": [
										{
											"id": "d76a0007-b3ce-41f7-9dc4-0ba638a214eb",
											"name": "Success",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"supplierId\": \"<string>\",\n  \"onboardingStatus\": 1\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/setstatus"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "9220458a-db05-48a8-9433-741562f4a1a0",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"supplierId\": \"<string>\",\n  \"onboardingStatus\": 1\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/setstatus"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "7c7f9a15-88f5-4c88-8505-89145b076bbf"
						},
						{
							"name": "history",
							"item": [
								{
									"name": "Success - Get Onboarding History",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "043ef0b4-e06c-4ee8-96fa-da28341111b6",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var data = responseJSON.data;\r",
													"\r",
													"pm.test(\"Verify that supplier's history ia returned\", function () {\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(data.currentStage).to.be.a(\"number\");\r",
													"        pm.expect(data.totalStage).to.be.a(\"number\");\r",
													"\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "7a6cdfb4-cace-4a3b-a03e-f1aacdd44054",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/supplier/history?supplierId={{supplierId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"supplier",
												"history"
											],
											"query": [
												{
													"key": "supplierId",
													"value": "{{supplierId}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "6775d6ac-dc54-4b48-9c1e-d32f2aa5ac56",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/history?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"history"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "404f45b1-254a-49af-bab0-dad4715cee7c",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/history?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"history"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Invalid Id - Get Onboarding History",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "043ef0b4-e06c-4ee8-96fa-da28341111b6",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var errors = responseJSON.errors;\r",
													"\r",
													"pm.test(\"Verify that supplier Id is invalid\", function () {\r",
													"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
													"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "8b8522bf-9493-475b-9993-7bdf592509e7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/supplier/history?supplierId=6586d903-203f-4819-3a1b-08dd",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"supplier",
												"history"
											],
											"query": [
												{
													"key": "supplierId",
													"value": "6586d903-203f-4819-3a1b-08dd",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "8897c6c5-091c-4233-b2a1-5a7265674aee",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/history?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"history"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "046b88cf-dbf4-42e9-8088-01a3ca9b6001",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/history?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"history"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No Id - Get Onboarding History",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "043ef0b4-e06c-4ee8-96fa-da28341111b6",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var errors = responseJSON.errors;\r",
													"\r",
													"pm.test(\"Verify that supplier Id is required\", function () {\r",
													"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
													"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "751b0ef9-9743-47ce-a489-1eaf9d395d5c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/supplier/history?supplierId=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"supplier",
												"history"
											],
											"query": [
												{
													"key": "supplierId",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "a2b2177e-d4e1-4957-972f-43266ff8b275",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/history?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"history"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "c76104c9-8010-4068-afa5-0b6a9518c61a",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/history?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"history"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No auth - Get Onboarding History",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "705631c0-8f32-41e1-b929-59f04196a50e",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "01d78378-60f6-4e76-8a76-6318b7bea8cf",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/supplier/history?supplierId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"supplier",
												"history"
											],
											"query": [
												{
													"key": "supplierId",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "81d54207-21f4-4d9c-82e2-6c153b34fc2c",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/history?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"history"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "f87702a1-0541-47c8-afe3-5b8b8907eb0b",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/history?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"history"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "58ae2e8a-2d15-4937-aedc-63f4b470cd5a"
						},
						{
							"name": "progress",
							"item": [
								{
									"name": "Success - Get Onboarding Progress",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4beb8540-f80f-47df-874f-4ae2a9a2d7d8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var data = responseJSON.data;\r",
													"\r",
													"pm.test(\"Verify that supplier's progress ia returned\", function () {\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"        pm.expect(data.totalStage).to.be.a(\"number\");\r",
													"        pm.expect(data.status).to.be.a(\"string\").and.not.be.empty;\r",
													"\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "454952fe-43ef-459e-aa97-45afd5bd21c6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/supplier/progress?supplierId={{supplierId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"supplier",
												"progress"
											],
											"query": [
												{
													"key": "supplierId",
													"value": "{{supplierId}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "d0788e00-56c4-4c95-a541-c17bfd25e538",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/progress?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"progress"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "c2badfdd-c8d3-4f17-8d90-229478e99003",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/progress?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"progress"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No Id - Get Onboarding Progress",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4beb8540-f80f-47df-874f-4ae2a9a2d7d8",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var errors = responseJSON.errors;\r",
													"\r",
													"pm.test(\"Verify that tags are returned\", function () {\r",
													"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
													"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "8fb00125-9484-4575-91be-ce1fec6e4ed5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/supplier/progress?supplierId=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"supplier",
												"progress"
											],
											"query": [
												{
													"key": "supplierId",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "7a446a55-e37e-4327-af13-34ab02d68fbb",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/progress?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"progress"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "adcd9de0-0e11-4b0e-9df4-9369bf523163",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/progress?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"progress"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Invalid Id - Get Onboarding Progress",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4beb8540-f80f-47df-874f-4ae2a9a2d7d8",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var errors = responseJSON.errors;\r",
													"\r",
													"pm.test(\"Verify that tags are returned\", function () {\r",
													"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
													"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "be119537-0705-4aac-91df-807a757d3c57",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/supplier/progress?supplierId=6586d903-203f-4819-3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"supplier",
												"progress"
											],
											"query": [
												{
													"key": "supplierId",
													"value": "6586d903-203f-4819-3",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "fc51f574-490f-45a9-82e7-ed86962c9330",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/progress?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"progress"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "ac2e082f-70c6-4289-aef7-50ad7d273770",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/progress?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"progress"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No auth -  Get Onboarding Progress",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8eb6ea6d-d14a-42b6-8634-cba34ed7185c",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "0c98a300-02e2-4f31-b28b-d406480237a2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/supplier/progress?supplierId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"supplier",
												"progress"
											],
											"query": [
												{
													"key": "supplierId",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "b6f1cb8c-1482-499b-8819-a943714f6535",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/progress?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"progress"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "74a0c278-df3f-4dfa-8fcc-fb958941b288",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/progress?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"progress"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "29bb4465-765c-4f62-b572-8336da9faf20"
						},
						{
							"name": "subsidiaries",
							"item": [
								{
									"name": "Anp Supplier Api Features Get Suppliers Get Subsidiaries Endpoint",
									"id": "65b97b59-8bf9-4e4b-9aca-13c070cd3b16",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/supplier/subsidiaries?companyId=<string>&pageNumber=<integer>&pageSize=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"supplier",
												"subsidiaries"
											],
											"query": [
												{
													"key": "companyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "pageNumber",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "ca14ac64-e3ee-4b97-b2ce-bcb3ecf438c4",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/subsidiaries?companyId=<string>&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"subsidiaries"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "companyId",
															"value": "<string>"
														},
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "f2db73fd-a074-4b50-af1e-c8d7e165d01f",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/subsidiaries?companyId=<string>&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"subsidiaries"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "companyId",
															"value": "<string>"
														},
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No companyId - Get Subsidiaries",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "56530489-830a-4179-a812-bcea1420d858",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var errors = responseJSON.errors;\r",
													"\r",
													"pm.test(\"Verify that company Id is required\", function () {\r",
													"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
													"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "c38ad15d-6383-4dc6-a7af-d561a328a46a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/supplier/subsidiaries?companyId=&pageNumber=1&pageSize=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"supplier",
												"subsidiaries"
											],
											"query": [
												{
													"key": "companyId",
													"value": "",
													"description": "(Required) "
												},
												{
													"key": "pageNumber",
													"value": "1",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "10",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "2625d2d4-533a-4c9e-9848-21ec3a1ca712",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/subsidiaries?companyId=<string>&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"subsidiaries"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "companyId",
															"value": "<string>"
														},
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "8c1013f9-93c7-439a-8e63-487a19532a0c",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/subsidiaries?companyId=<string>&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"subsidiaries"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "companyId",
															"value": "<string>"
														},
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Invalid companyId - Get Subsidiaries",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "56530489-830a-4179-a812-bcea1420d858",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var errors = responseJSON.errors;\r",
													"\r",
													"pm.test(\"Verify that company Id is invalid\", function () {\r",
													"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
													"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2d9fe95c-7ca3-4b04-83ae-c371b2a27d00",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/supplier/subsidiaries?companyId=d903-203f-4819-3a1b-08dd2661c275&pageNumber=1&pageSize=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"supplier",
												"subsidiaries"
											],
											"query": [
												{
													"key": "companyId",
													"value": "d903-203f-4819-3a1b-08dd2661c275",
													"description": "(Required) "
												},
												{
													"key": "pageNumber",
													"value": "1",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "10",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "32467ef7-979c-48a3-bac9-22f942e9b87a",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/subsidiaries?companyId=<string>&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"subsidiaries"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "companyId",
															"value": "<string>"
														},
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "78d4cc4a-f2cf-4767-8009-61ba112e539c",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/subsidiaries?companyId=<string>&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"subsidiaries"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "companyId",
															"value": "<string>"
														},
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No auth - Get Subsidiaries",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2a843e18-3f86-4312-a776-55784b988b0f",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "1ebf2086-b0e5-410f-a048-6fdcc1ec1f15",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/supplier/subsidiaries?companyId=<string>&pageNumber=<integer>&pageSize=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"supplier",
												"subsidiaries"
											],
											"query": [
												{
													"key": "companyId",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "pageNumber",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "9ff807e7-8e68-49ef-a7e0-e7c8d7831c69",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/subsidiaries?companyId=<string>&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"subsidiaries"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "companyId",
															"value": "<string>"
														},
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "9065d39c-2f1d-43e4-b6ef-d3fa6684e260",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/subsidiaries?companyId=<string>&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"subsidiaries"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "companyId",
															"value": "<string>"
														},
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "7f10e68b-da59-4cbf-a147-99ce7648c973"
						},
						{
							"name": "contact",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Success - Supplier contact",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b0e28972-5636-4648-ad6a-b82ebbfc6a59",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var data = responseJSON.data;\r",
															"\r",
															"pm.test(\"Verify that personnel are created successfully\", function () {\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(data.message).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(data.id).to.be.a(\"string\").and.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "f7d90986-3bcb-421c-86a2-0c2ef33264cd",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n // \"contactId\": \"<string>\",\n  \"fullName\": \"{{$randomFullName}}\",\n  \"email\": \"{{$randomEmail}}\",\n  \"phoneNumber\": \"{{$randomPhoneNumber}}\",\n  \"companyId\": \"{{supplierId}}\",\n  \"nationality\": \"{{$randomCountry}}\",\n  \"designation\": \"{{$randomJobTitle}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/contact/create"
											},
											"response": [
												{
													"id": "f6576083-2b77-4766-864e-996d6569dc61",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"nationality\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "1bd5900a-c613-4629-979d-7bc94c36d9cd",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"nationality\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Invalid fields - Supplier contact",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b0e28972-5636-4648-ad6a-b82ebbfc6a59",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that fullname, email and pnonenumber fields are invalid\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "26e75adf-e742-45b6-9390-300375df995e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n // \"contactId\": \"<string>\",\n  \"fullName\": \"Filo Gem19#\",\n  \"email\": \"filoyopmail.com\",\n  \"phoneNumber\": \"0908977uujj\",\n  \"companyId\": \"{{supplierId}}\",\n  \"nationality\": \"{{$randomCountry}}\",\n  \"designation\": \"{{$randomJobTitle}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/contact/create"
											},
											"response": [
												{
													"id": "7bf44675-2de1-42c7-aa8b-b462db3b9ac5",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"nationality\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "8d366b99-639b-468f-bba3-be2d2e7f140d",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"nationality\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Empty fields - Supplier contact",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b0e28972-5636-4648-ad6a-b82ebbfc6a59",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that fullname, email and pnonenumber fields are invalid\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "804269b4-f5d1-4317-acce-ec3d7565a0fb",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n // \"contactId\": \"<string>\",\n  \"fullName\": \"\",\n  \"email\": \"\",\n  \"phoneNumber\": \"\",\n  \"companyId\": \"\",\n  \"nationality\": \"\",\n  \"designation\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/contact/create"
											},
											"response": [
												{
													"id": "167a863b-8789-4d66-bb8f-7f8083a1ecca",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"nationality\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "2b1298ae-90c4-4638-9884-8190fda085e4",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"nationality\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Create Supplier Contact1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "107d26cc-7cb6-406a-8aec-9cf886c10569",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "95365229-f209-40c1-807b-412b9ed42c56",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n // \"contactId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"nationality\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/contact/create"
											},
											"response": [
												{
													"id": "e431f406-6e4f-4c19-883b-89d172b8e3c9",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"nationality\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "1048241d-034e-4eef-ad3e-2860e60e9808",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"nationality\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "ee47ae24-4448-4c64-a377-fede3574f65f"
								},
								{
									"name": "contacts",
									"item": [
										{
											"name": "{companyId}",
											"item": [
												{
													"name": "Success - All Contacts",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "6e04bc24-6ef8-401d-b038-6b8601e699e8",
																"exec": [
																	"\r",
																	"pm.collectionVariables.set(\"contactId\", pm.response.json().data[0].contactId);\r",
																	"\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"var responseJSON = pm.response.json();\r",
																	"var data = responseJSON.data;\r",
																	"\r",
																	"pm.test(\"Verify that contacts are returned\", function () {\r",
																	"    pm.expect(responseJSON.pageNumber).to.be.a(\"number\");\r",
																	"      pm.expect(responseJSON.pageSize).to.be.a(\"number\");\r",
																	"        pm.expect(responseJSON.totalRecords).to.be.a(\"number\");\r",
																	"    pm.expect(data[0].contactId).to.be.a(\"string\").and.not.empty;\r",
																	"   // pm.expect(data.id).to.be.a(\"string\").and.not.empty;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "70d3366a-bd86-4f6d-b45c-df38cf3b44cf",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{bearerToken}}"
															}
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/contacts/:companyId?pageNumber=1&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"contacts",
																":companyId"
															],
															"query": [
																{
																	"key": "pageNumber",
																	"value": "1",
																	"description": "(Required) "
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "companyId",
																	"value": "{{supplierId}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "8db06b2e-d5ea-43ff-a3b2-78c3ed8b0353",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/contacts/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"contacts",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "8507bac7-d2ed-462f-8bd2-841a0f014bf0",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/contacts/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"contacts",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												},
												{
													"name": "No companyId - Get All Contacts",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "607dad11-ac05-4662-b5d7-6702dcb7d84f",
																"exec": [
																	"pm.test(\"Status code is 400\", function () {\r",
																	"    pm.response.to.have.status(400);\r",
																	"});\r",
																	"\r",
																	"var responseJSON = pm.response.json();\r",
																	"var errors = responseJSON.errors;\r",
																	"\r",
																	"pm.test(\"Verify that company Id is required\", function () {\r",
																	"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
																	"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "272f9221-4953-4038-b330-497463641b71",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{bearerToken}}"
															}
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/contacts/:companyId?pageNumber=1&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"contacts",
																":companyId"
															],
															"query": [
																{
																	"key": "pageNumber",
																	"value": "1",
																	"description": "(Required) "
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "companyId",
																	"value": "",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "9dc69dd3-7f96-4eee-bf40-350c81af9250",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/contacts/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"contacts",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "4f66f09e-2950-4f62-b050-bb1469dd26b7",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/contacts/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"contacts",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												},
												{
													"name": "invalid companyId - Get All Contacts",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "607dad11-ac05-4662-b5d7-6702dcb7d84f",
																"exec": [
																	"pm.test(\"Status code is 400\", function () {\r",
																	"    pm.response.to.have.status(400);\r",
																	"});\r",
																	"\r",
																	"var responseJSON = pm.response.json();\r",
																	"var errors = responseJSON.errors;\r",
																	"\r",
																	"pm.test(\"Verify that company Id is invalid\", function () {\r",
																	"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
																	"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "c25702a8-3b04-42a0-8cbb-911475dc8625",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{bearerToken}}"
															}
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/contacts/:companyId?pageNumber=1&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"contacts",
																":companyId"
															],
															"query": [
																{
																	"key": "pageNumber",
																	"value": "1",
																	"description": "(Required) "
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "companyId",
																	"value": "-203f-4819-3a1b-08dd2661c275sasd",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "a4a11a17-6ef6-42c9-8df8-4ece85cff099",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/contacts/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"contacts",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "84bcbd5d-68bd-46b8-a76f-89efb3b89b6b",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/contacts/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"contacts",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												},
												{
													"name": "No auth - Get All Contacts",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "98e797e9-6594-43dc-911d-c5172381cbf1",
																"exec": [
																	"pm.test(\"Status code is 401\", function () {\r",
																	"    pm.response.to.have.status(401);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
																	"    pm.response.to.have.status(\"Unauthorized\");\r",
																	"});"
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "6a886804-f0ad-4591-a1e0-c9375e4c416d",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/contacts/:companyId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"contacts",
																":companyId"
															],
															"query": [
																{
																	"key": "pageNumber",
																	"value": "<integer>",
																	"description": "(Required) "
																},
																{
																	"key": "pageSize",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "companyId",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "5778f77a-b303-445a-bb76-86da9c87a154",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/contacts/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"contacts",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "9c890a63-a4d4-431b-9050-b0e52477af75",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/contacts/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"contacts",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												}
											],
											"id": "c582bf05-f1a6-4e0d-ba6e-02f9ecacc4b8"
										}
									],
									"id": "f78ad715-b3fd-40c8-90b3-351b59f5f7a4"
								},
								{
									"name": "{contactId}",
									"item": [
										{
											"name": "Success - Get A Contact",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dc3f438a-b690-4c0f-b70d-f3b915ec0b7d",
														"exec": [
															"//pm.collectionVariables.set(\"projectId\", pm.response.json().data.id);\r",
															"\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var data = responseJSON.data;\r",
															"\r",
															"pm.test(\"Verify that contact is returned successfully\", function () {\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(data.contactId).to.be.a(\"string\").and.not.empty;\r",
															"       });\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "c8cff0b2-653e-4a5d-a9af-18b8a3c61314",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/contact/:contactId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"contact",
														":contactId"
													],
													"variable": [
														{
															"key": "contactId",
															"value": "{{contactId}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "d2502ff1-90d3-47e7-a349-f83095e8b170",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/contact/:contactId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"contact",
																":contactId"
															],
															"variable": [
																{
																	"key": "contactId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "4b77117e-163e-439e-a73e-ac91861ff8a7",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/contact/:contactId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"contact",
																":contactId"
															],
															"variable": [
																{
																	"key": "contactId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No contactId - Get A Contact",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a6a5ce9e-4245-4d26-bc80-d7a74a18edef",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that contact Id is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "d13c64f7-472d-4746-b83c-caa0d56bc00e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/contact/:contactId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"contact",
														":contactId"
													],
													"variable": [
														{
															"key": "contactId",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "c34ec034-6b39-40ac-ba36-6c6ce04b9e9a",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/contact/:contactId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"contact",
																":contactId"
															],
															"variable": [
																{
																	"key": "contactId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "67a3f224-40f5-4533-8e5b-93c1dccecb34",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/contact/:contactId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"contact",
																":contactId"
															],
															"variable": [
																{
																	"key": "contactId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "invalid contactId - Get A Contact",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a6a5ce9e-4245-4d26-bc80-d7a74a18edef",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that contact Id is invalid\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "8068f8dd-9e9c-4317-b6c1-5fcb1e6ac37e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/contact/:contactId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"contact",
														":contactId"
													],
													"variable": [
														{
															"key": "contactId",
															"value": "6586d903-203f-4819-3a1b-",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "013b436a-391c-4d2f-ba56-45d1a89d6a9c",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/contact/:contactId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"contact",
																":contactId"
															],
															"variable": [
																{
																	"key": "contactId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "4f3c849f-9952-441f-a704-5abd6c6dc219",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/contact/:contactId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"contact",
																":contactId"
															],
															"variable": [
																{
																	"key": "contactId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Get A Contact",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f70244e5-00ef-4a77-b58b-01d7cb376cee",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "b3238acf-af68-457b-bab5-dce53bac2464",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/contact/:contactId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"contact",
														":contactId"
													],
													"variable": [
														{
															"key": "contactId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "135e1ef3-e7e9-4425-afe3-b52b0e253080",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/contact/:contactId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"contact",
																":contactId"
															],
															"variable": [
																{
																	"key": "contactId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "83ef7733-b882-4177-8d9e-2e4ceb50119d",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/contact/:contactId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"contact",
																":contactId"
															],
															"variable": [
																{
																	"key": "contactId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "a84e4407-fdf4-426e-805c-e19208872d1e"
								},
								{
									"name": "edit",
									"item": [
										{
											"name": "Success - Create Supplier contact",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "08789d01-570e-4dab-abd8-fb4c1bd972cf",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var data = responseJSON.data;\r",
															"\r",
															"pm.test(\"Verify that personnel is updated successfully\", function () {\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(data.message).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(data.id).to.be.a(\"string\").and.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "cc2995c5-8967-432e-9a13-6aaf05727c61",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n \"contactId\": \"687af610-ef60-4b01-7c35-08dd28d9b6c4\",\n            \"fullName\": \"Carolyn Bahringer\",\n            \"email\": \"Edward.Tillman@yopmail.com\",\n            \"phoneNumber\": \"485-588-8373\",\n            \"companyId\": \"6586d903-203f-4819-3a1b-08dd2661c275\",\n            \"nationality\": \"Hungary\",\n            \"designation\": \"Future Research Architect\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/contact/edit"
											},
											"response": [
												{
													"id": "27cc186d-0209-4e4c-a9a5-7b3b696729fe",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"nationality\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "c584df37-ab71-4e83-842d-17599c3f0669",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"nationality\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "empty fields - Create Supplier contact",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "08789d01-570e-4dab-abd8-fb4c1bd972cf",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that fullname, email and pnonenumber fields are required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "6f15eab8-0e27-4d08-83a0-5dc286154470",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n \"contactId\": \"{{contactId}}\",\n            \"fullName\": \"\",\n            \"email\": \"\",\n            \"phoneNumber\": \"\",\n            \"companyId\": \"{{supplierId}}\",\n            \"nationality\": \"\",\n            \"designation\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/contact/edit"
											},
											"response": [
												{
													"id": "c8cb7139-c733-4f08-a18c-8693cc198b70",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"nationality\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "0fef9f70-df59-4c5c-a3ae-8e584f343d8e",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"nationality\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "invalid fields - Create Supplier contact",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "08789d01-570e-4dab-abd8-fb4c1bd972cf",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that fullname, email and pnonenumber fields are invalid\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "2a503a82-b37c-4d53-8cf3-1345e3cd7d99",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"contactId\": \"{{contactId}}\",\n  \"fullName\": \"Filo Gem19#\",\n  \"email\": \"filoyopmail.com\",\n  \"phoneNumber\": \"0908977uujj\",\n  \"companyId\": \"{{supplierId}}\",\n  \"nationality\": \"{{$randomCountry}}\",\n  \"designation\": \"{{$randomJobTitle}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/contact/edit"
											},
											"response": [
												{
													"id": "bace69e8-e1fb-4694-9f3b-171d1c6d960f",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"nationality\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "dadfed27-cd55-4f0a-957d-a9d00fef61ca",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"nationality\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Create Supplier Contact2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5edaf59e-8a86-40b7-a951-65cc9ea75da9",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "f5ef62dc-2896-4b05-aaa6-0a848580f4d2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"contactId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"nationality\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/contact/edit"
											},
											"response": [
												{
													"id": "a5936316-dc7b-4c71-a3d7-72a0483fa374",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"nationality\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "5fcb243d-2eea-4165-99ee-2dff71221816",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"email\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"companyId\": \"<string>\",\n  \"nationality\": \"<string>\",\n  \"designation\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "d6a36cab-c851-426d-ab44-884ada8ee222"
								},
								{
									"name": "remove",
									"item": [
										{
											"name": "No contactId - Delete Contact",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b16569dd-b0d9-49f5-a6f4-a1542255884d",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that contact Id is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "c56ca4ec-fa53-466b-96a5-1c972bae1643",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"contactId\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/contact/remove"
											},
											"response": [
												{
													"id": "51ac1003-8f4b-44c8-8af7-07e2ca87e24b",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/remove"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "7c8cfc8d-2281-4389-9f6a-557c1defb873",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/remove"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Invalid contactId - Delete Contact",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b16569dd-b0d9-49f5-a6f4-a1542255884d",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that contact Id is invalid\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "a4079531-e577-4272-9414-fb9c21b70969",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"contactId\": \"{203f-4819-3a1b-08dd2661c275\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/contact/remove"
											},
											"response": [
												{
													"id": "66787e0a-f4e7-4017-be23-39027428eac0",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/remove"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "ab273ee5-7fcf-4479-b985-f4f4886a2e14",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/remove"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Delete Contact",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "17a8063a-6476-42ae-bb86-2974ab70a070",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "add013a2-330c-4435-aeda-9a22c8ab06d9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"contactId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/contact/remove"
											},
											"response": [
												{
													"id": "a57d622e-c6c3-4a3a-99b3-3960a9b2f57c",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/remove"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "baaf1c61-b56c-40a4-98ff-f42d3e0824c0",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"contactId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/contact/remove"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "d5e0e111-2839-4404-8476-08e28edfb545"
								}
							],
							"id": "263d970e-b7a0-480e-8c2b-f49f45061c04"
						},
						{
							"name": "award",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Success - Create Award",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3c7573d2-60a2-4aba-9bf0-4004e34c6e4a",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var data = responseJSON.data;\r",
															"\r",
															"pm.test(\"Verify that awards are created successfully\", function () {\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(data.message).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(data.id).to.be.a(\"string\").and.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "d619463d-3d89-4169-8722-e064df121033",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n // \"awardId\": \"<string>\",\n  \"awardName\": \"{{$randomAdjective}}\",\n  \"issuedBy\": \"{{$randomCompanyName}}\",\n  \"issuedDate\": \"2009-03-05\",\n  \"companyId\": \"{{supplierId}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/award/create"
											},
											"response": [
												{
													"id": "1b2b2aa2-fd26-4c8d-b304-9ed36bc9c862",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"awardId\": \"<string>\",\n  \"awardName\": \"<string>\",\n  \"issuedBy\": \"<string>\",\n  \"issuedDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/award/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "c3319564-9c10-44b0-8e8a-5ad9ef5dec60",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"awardId\": \"<string>\",\n  \"awardName\": \"<string>\",\n  \"issuedBy\": \"<string>\",\n  \"issuedDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/award/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "empty fields - Create Award",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1393959f-559d-4174-9f4e-bcb0591a7e88",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that awardname and issuedby fields are required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "9a0a3881-ec1d-4579-be6a-479cf9cbcfd6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n // \"awardId\": \"<string>\",\n  \"awardName\": \"\",\n  \"issuedBy\": \"\",\n  \"issuedDate\": \"2023-09-12\",\n  \"companyId\": \"{{supplierId}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/award/create"
											},
											"response": [
												{
													"id": "9a586eac-a815-4299-9caa-b05009823a0a",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"awardId\": \"<string>\",\n  \"awardName\": \"<string>\",\n  \"issuedBy\": \"<string>\",\n  \"issuedDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/award/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "efa8e915-74c9-4631-95a3-fa2ead0f9d8a",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"awardId\": \"<string>\",\n  \"awardName\": \"<string>\",\n  \"issuedBy\": \"<string>\",\n  \"issuedDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/award/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Create Award",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "50dd7701-601c-48d4-968c-db4830cf6367",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "474b9e22-6ba7-43dc-80e9-6ae2822ff489",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"awardId\": \"<string>\",\n  \"awardName\": \"<string>\",\n  \"issuedBy\": \"<string>\",\n  \"issuedDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/award/create"
											},
											"response": [
												{
													"id": "51813f63-a763-4bc4-ac19-e4ae6e1e2d25",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"awardId\": \"<string>\",\n  \"awardName\": \"<string>\",\n  \"issuedBy\": \"<string>\",\n  \"issuedDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/award/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "11494fbb-877a-4208-9e39-71dfdfc0a961",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"awardId\": \"<string>\",\n  \"awardName\": \"<string>\",\n  \"issuedBy\": \"<string>\",\n  \"issuedDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/award/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "b5be8426-17fb-4133-878d-1a15a18c0a92"
								},
								{
									"name": "awards",
									"item": [
										{
											"name": "{companyId}",
											"item": [
												{
													"name": "Success - Get All Awards",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "919c9016-8513-4e9b-a09a-7cf59fc0f12d",
																"exec": [
																	"\r",
																	"pm.collectionVariables.set(\"awardId\", pm.response.json().data[0].awardId);\r",
																	"\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"var responseJSON = pm.response.json();\r",
																	"var data = responseJSON.data;\r",
																	"\r",
																	"pm.test(\"Verify that contacts are returned\", function () {\r",
																	"    pm.expect(responseJSON.pageNumber).to.be.a(\"number\");\r",
																	"      pm.expect(responseJSON.pageSize).to.be.a(\"number\");\r",
																	"        pm.expect(responseJSON.totalRecords).to.be.a(\"number\");\r",
																	"    pm.expect(data[0].awardId).to.be.a(\"string\").and.not.empty;\r",
																	"   // pm.expect(data.id).to.be.a(\"string\").and.not.empty;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "5743d1ac-99f4-4a0b-8fbe-e89873c5c69d",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{bearerToken}}"
															}
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/awards/:companyId?pageNumber=1&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"awards",
																":companyId"
															],
															"query": [
																{
																	"key": "pageNumber",
																	"value": "1",
																	"description": "(Required) "
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "companyId",
																	"value": "{{supplierId}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "65f0d1d8-2fcf-425f-b04a-247c4720d0fb",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/awards/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"awards",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "770e8ab0-91f0-4683-9996-368c404ad724",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/awards/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"awards",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												},
												{
													"name": "No awardId - Get All Awards",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2566985c-5392-4b84-853b-40855f224866",
																"exec": [
																	"pm.test(\"Status code is 400\", function () {\r",
																	"    pm.response.to.have.status(400);\r",
																	"});\r",
																	"\r",
																	"var responseJSON = pm.response.json();\r",
																	"var errors = responseJSON.errors;\r",
																	"\r",
																	"pm.test(\"Verify that award Id is required\", function () {\r",
																	"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
																	"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "0a53bf67-8f96-4ce9-b05a-70e39bdc5f7e",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{bearerToken}}"
															}
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/awards/:companyId?pageNumber=1&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"awards",
																":companyId"
															],
															"query": [
																{
																	"key": "pageNumber",
																	"value": "1",
																	"description": "(Required) "
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "companyId",
																	"value": "",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "2d9975c0-57f2-4384-a28a-4334991d38c2",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/awards/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"awards",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "a856aade-e6ef-4019-92a3-908b67c77a98",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/awards/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"awards",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												},
												{
													"name": "invalid awardId - Get All Awards",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "2566985c-5392-4b84-853b-40855f224866",
																"exec": [
																	"pm.test(\"Status code is 400\", function () {\r",
																	"    pm.response.to.have.status(400);\r",
																	"});\r",
																	"\r",
																	"var responseJSON = pm.response.json();\r",
																	"var errors = responseJSON.errors;\r",
																	"\r",
																	"pm.test(\"Verify that award Id is invalid\", function () {\r",
																	"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
																	"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
																	"});\r",
																	""
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "3a36c7ba-6e58-4975-94bd-f93cfc59cff5",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{bearerToken}}"
															}
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/awards/:companyId?pageNumber=1&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"awards",
																":companyId"
															],
															"query": [
																{
																	"key": "pageNumber",
																	"value": "1",
																	"description": "(Required) "
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "companyId",
																	"value": "6586d903-203f-4819-3a1b-08d",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "521444d2-b4c5-4767-9ce1-059aabb292a1",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/awards/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"awards",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "02ad2d9c-0357-4368-a678-6e53336e31f1",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/awards/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"awards",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												},
												{
													"name": "No auth - Get All Awards",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "1fcfeaa8-186e-4b1c-b5e7-c2d16674fd86",
																"exec": [
																	"pm.test(\"Status code is 401\", function () {\r",
																	"    pm.response.to.have.status(401);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
																	"    pm.response.to.have.status(\"Unauthorized\");\r",
																	"});"
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "77b8777e-aa75-411a-9fca-2716f5f63b7e",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/awards/:companyId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"awards",
																":companyId"
															],
															"query": [
																{
																	"key": "pageNumber",
																	"value": "<integer>",
																	"description": "(Required) "
																},
																{
																	"key": "pageSize",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "companyId",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "b3355b1a-ecf3-4305-ab66-30159f54b096",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/awards/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"awards",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "181d4e09-1b90-48ec-851a-f9d1aa85268d",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/awards/:companyId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"awards",
																		":companyId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "companyId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												}
											],
											"id": "951e8206-b301-4a8e-9f41-57536396649d"
										}
									],
									"id": "54a652b1-07f9-4f1b-96c9-0afe24095894"
								},
								{
									"name": "{awardId}",
									"item": [
										{
											"name": "Anp Supplier Api Features Award Get An Award Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "87c3d12e-07b5-42cf-8092-cd744ddd6fc7",
														"exec": [
															"//pm.collectionVariables.set(\"projectId\", pm.response.json().data.id);\r",
															"\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var data = responseJSON.data;\r",
															"\r",
															"pm.test(\"Verify that award is returned successfully\", function () {\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(data.awardId).to.be.a(\"string\").and.not.empty;\r",
															"       });\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "051eb10d-e2d1-47d4-a3ce-36546070b6d4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/award/:awardId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"award",
														":awardId"
													],
													"variable": [
														{
															"key": "awardId",
															"value": "{{awardId}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "bbba6d67-e0a5-48f3-91ff-fdecc6e4d667",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/award/:awardId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"award",
																":awardId"
															],
															"variable": [
																{
																	"key": "awardId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "ac4a36b1-49e1-40d9-a863-92c0f4ef1deb",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/award/:awardId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"award",
																":awardId"
															],
															"variable": [
																{
																	"key": "awardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No awardId - Get An Award",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c1442c45-4736-4066-9adb-7d3df93a2da5",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that award Id is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "12aeb5e8-2496-46cb-9b36-1b148ffb75d6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/award/:awardId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"award",
														":awardId"
													],
													"variable": [
														{
															"key": "awardId",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "d0b4145f-af44-4999-bb2c-1d5ee7c4b1c7",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/award/:awardId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"award",
																":awardId"
															],
															"variable": [
																{
																	"key": "awardId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "ef795df3-7f34-4df0-8da9-dc7eeb39702d",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/award/:awardId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"award",
																":awardId"
															],
															"variable": [
																{
																	"key": "awardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "invalid awardId - Get An Award",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c1442c45-4736-4066-9adb-7d3df93a2da5",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that award Id is invalid\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "77a4c291-49b5-42ca-9c88-4072f09dd8ab",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/award/:awardId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"award",
														":awardId"
													],
													"variable": [
														{
															"key": "awardId",
															"value": "6586d903-203f-4819-3a1b-08dd2661",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "2e6b41a3-2c06-43b6-ad26-b33b97ce03b4",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/award/:awardId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"award",
																":awardId"
															],
															"variable": [
																{
																	"key": "awardId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "eb4b609c-888b-4b22-b72b-9000700e10ec",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/award/:awardId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"award",
																":awardId"
															],
															"variable": [
																{
																	"key": "awardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Get An Award",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f890f3a9-fbc4-465f-ae5e-bd48c99ddc55",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "2fec6c3a-a979-468c-b5e7-c9ecdd05d4f7",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/award/:awardId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"award",
														":awardId"
													],
													"variable": [
														{
															"key": "awardId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "3fddafb6-edee-4724-9cca-dec82440fad6",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/award/:awardId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"award",
																":awardId"
															],
															"variable": [
																{
																	"key": "awardId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "84d6907a-f14d-4a90-838a-b3532e4c7598",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/award/:awardId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"award",
																":awardId"
															],
															"variable": [
																{
																	"key": "awardId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "2c006049-e9c3-4b0e-88db-9cee25bcbcf1"
								},
								{
									"name": "edit",
									"item": [
										{
											"name": "Success - Edit Award",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2194f217-1b99-4bf2-a1b2-0ff19ea1740a",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var data = responseJSON.data;\r",
															"\r",
															"pm.test(\"Verify that award is updated successfully\", function () {\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(data.message).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(data.id).to.be.a(\"string\").and.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "4c5b9443-fcac-4059-a30b-2a11f90708e0",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"awardId\": \"{{awardId}}\",\n  \"awardName\": \"{{$randomAdjective}}\",\n  \"issuedBy\": \"{{$randomCompanyName}}\",\n  \"issuedDate\": \"2009-03-05\",\n  \"companyId\": \"{{supplierId}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/award/edit"
											},
											"response": [
												{
													"id": "30472b66-9957-454f-a6fe-3cdfb7be94f7",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"awardId\": \"<string>\",\n  \"awardName\": \"<string>\",\n  \"issuedBy\": \"<string>\",\n  \"issuedDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/award/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "3083085c-90aa-47a3-adc8-f38985e75b75",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"awardId\": \"<string>\",\n  \"awardName\": \"<string>\",\n  \"issuedBy\": \"<string>\",\n  \"issuedDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/award/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Empty fields - Edit Award",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2194f217-1b99-4bf2-a1b2-0ff19ea1740a",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that name and issuedby fields are required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "3963bea5-2a73-4740-8141-08bec62b299e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"awardId\": \"{{awardId}}\",\n  \"awardName\": \"\",\n  \"issuedBy\": \"\",\n  \"issuedDate\": \"2009-03-05\",\n  \"companyId\": \"{{supplierId}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/award/edit"
											},
											"response": [
												{
													"id": "3dce62e6-9600-4e22-bf60-cbc4414b88c3",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"awardId\": \"<string>\",\n  \"awardName\": \"<string>\",\n  \"issuedBy\": \"<string>\",\n  \"issuedDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/award/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "fa8f49a3-1ce2-49fc-b774-9750c884e245",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"awardId\": \"<string>\",\n  \"awardName\": \"<string>\",\n  \"issuedBy\": \"<string>\",\n  \"issuedDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/award/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Edit Award",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2b9b6194-61ec-4dc9-93d7-a9329faf0e6a",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "4f4d7620-236d-40ed-8061-3b537cede2f8",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"awardId\": \"<string>\",\n  \"awardName\": \"<string>\",\n  \"issuedBy\": \"<string>\",\n  \"issuedDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/award/edit"
											},
											"response": [
												{
													"id": "f0ae2647-ee65-4046-bedf-7a2956786ca1",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"awardId\": \"<string>\",\n  \"awardName\": \"<string>\",\n  \"issuedBy\": \"<string>\",\n  \"issuedDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/award/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "f6fe7110-b213-4955-b808-7c63a80c12dd",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"awardId\": \"<string>\",\n  \"awardName\": \"<string>\",\n  \"issuedBy\": \"<string>\",\n  \"issuedDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/award/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "0308e95d-e974-470a-8a30-868c67da5a52"
								},
								{
									"name": "delete",
									"item": [
										{
											"name": "No AwardId - Delete Award",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "746d4727-ac6e-4cbb-86f2-93523ac52e63",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that award Id is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "8c244132-627a-4b3e-a9a0-85e7c08e647b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"awardId\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/award/delete"
											},
											"response": [
												{
													"id": "d1807657-93f7-4355-8323-4398d668afb3",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"awardId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/award/delete"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "ca33e5e5-a35a-4b23-bdb6-5fe3d92966c3",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"awardId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/award/delete"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "invalid AwardId - Delete Award",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "746d4727-ac6e-4cbb-86f2-93523ac52e63",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that award Id is invalid\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "5c3a9da6-d975-4fd5-a539-997bb1346396",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"awardId\": \"6586d903-203f-4819-3a1b-08d\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/award/delete"
											},
											"response": [
												{
													"id": "576569a4-5172-44a5-9286-ac37809a8248",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"awardId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/award/delete"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "c8b4d828-e10d-4688-99bb-d4f756c41969",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"awardId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/award/delete"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Delete Award",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "281465ea-d193-4d16-bb25-9867e78cbeef",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "7b3d2ff3-8a9d-4d4c-bb6a-401d9cfa522a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"awardId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/award/delete"
											},
											"response": [
												{
													"id": "0c275fa6-7b76-4090-8dde-29aef2f7f56f",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"awardId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/award/delete"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "c8769bd7-2481-4a04-94ef-acc1856bdac1",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"awardId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/award/delete"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "6ec72d6d-14ee-48cf-8c1c-6ebd6ab12466"
								}
							],
							"id": "7344bfa0-3020-4934-95be-c1630046f7b1"
						},
						{
							"name": "suppliers",
							"item": [
								{
									"name": "Success - Get A Supplier",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "06130ddd-a937-4a0d-87c4-1f6f5e566239",
												"exec": [
													"pm.collectionVariables.set(\"supplierUserId\", pm.response.json().supplierUserId);\r",
													"// pm.collectionVariables.set(\"tagid1\", pm.response.json().tags[0].tagId);\r",
													"// pm.collectionVariables.set(\"tagid2\", pm.response.json().tags[1].tagId);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"\r",
													"pm.test(\"Verify that supplier details are returned\", function () {\r",
													"    pm.expect(responseJSON.companyId).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.businessName).to.be.a(\"string\").and.not.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "5f065c3e-6e7c-4239-91d4-2a857d886953",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/supplier/suppliers?supplierId={{supplierId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"supplier",
												"suppliers"
											],
											"query": [
												{
													"key": "supplierId",
													"value": "{{supplierId}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "ca9a6945-bd51-4d5e-9087-1823df1924c8",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/suppliers?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"suppliers"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "31a2b330-e0e1-4518-b071-37f9a3168616",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/suppliers?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"suppliers"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No supplierId - Get A Supplier",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e7759346-fec7-4408-876f-e0b4c85d83b3",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var errors = responseJSON.errors;\r",
													"\r",
													"pm.test(\"Verify that supplier Id is required\", function () {\r",
													"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
													"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "8a54d16e-7306-4192-a58d-aaf24e00c4df",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/supplier/suppliers?supplierId=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"supplier",
												"suppliers"
											],
											"query": [
												{
													"key": "supplierId",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "0ef0a165-1597-46b4-ae70-749ca4f5b621",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/suppliers?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"suppliers"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "8146655e-4ee2-4e99-a7c5-80cd0f0e0b42",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/suppliers?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"suppliers"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Invalid supplierId - Get A Supplier",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e7759346-fec7-4408-876f-e0b4c85d83b3",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var errors = responseJSON.errors;\r",
													"\r",
													"pm.test(\"Verify that supplier Id is invalid\", function () {\r",
													"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
													"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "f1f2d742-1817-4877-8869-692bf2dae8b5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/supplier/suppliers?supplierId=6586d903-203f-4819-3a1b-08dd2661c99",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"supplier",
												"suppliers"
											],
											"query": [
												{
													"key": "supplierId",
													"value": "6586d903-203f-4819-3a1b-08dd2661c99",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "7ad5bdeb-cabf-4ab7-b709-ddcac1d2160f",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/suppliers?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"suppliers"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "ec8f225e-3988-4051-99ed-dbba196a8db5",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/suppliers?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"suppliers"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No auth - Get A Supplier",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fe642848-e3f8-4370-afc9-aaa776e5f297",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "26b026c4-b668-4101-b8c9-d58ce14bc946",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/supplier/suppliers?supplierId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"supplier",
												"suppliers"
											],
											"query": [
												{
													"key": "supplierId",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "c4ebf3b3-7f1e-4a87-9f4b-6c763b7addfa",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/suppliers?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"suppliers"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "d278a803-6562-414c-8bab-86e6197875e1",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/suppliers?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"suppliers"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "b6ce86ea-f195-4ddc-abaf-59e883aaa4d2"
						},
						{
							"name": "remove supplier",
							"item": [
								{
									"name": "No CompanyId - Onboarding Delete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0bc48209-a275-4631-89bf-80242083abee",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var errors = responseJSON.errors;\r",
													"\r",
													"pm.test(\"Verify that company Id is required\", function () {\r",
													"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
													"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "e3d05506-d56f-4c03-b11a-71afb32c3c5c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyId\": \"\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/supplier/remove"
									},
									"response": [
										{
											"id": "5ccf6377-faf2-4b66-a65b-ab189a657f0b",
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"companyId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/remove"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "098ff78f-3551-499b-9c46-932dbd8fafd0",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"companyId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/remove"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Invalid CompanyId - Onboarding Delete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "be9f2ca2-7fe6-4caf-bbaa-6ac828ddc8d4",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var errors = responseJSON.errors;\r",
													"\r",
													"pm.test(\"Verify that company Id is invalid\", function () {\r",
													"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
													"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "f8cd31ec-4605-49ef-befb-4f787d2609f6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyId\": \"6-4819-3a1b-08dd2661c275\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/supplier/remove"
									},
									"response": [
										{
											"id": "592ddb60-154d-432e-b813-c8aeadaa622c",
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"companyId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/remove"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "4725d7e3-efc5-4e7a-b178-0a88926707c4",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"companyId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/remove"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No auth - Onboarding Delete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "055a2f4e-0131-49a3-812f-8721a4e9d4ef",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "207f7ab8-d185-409c-ac1b-9a1822df140d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/supplier/remove"
									},
									"response": [
										{
											"id": "1b0233bb-1ac5-47bb-8fcf-457599fba8c2",
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"companyId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/remove"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "deb6886e-8050-40ec-bbbe-e5277fe7df0d",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"companyId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/remove"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "5007fc33-0233-41c2-96fc-26ea898b3229"
						},
						{
							"name": "additional",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Anp Supplier Api Features Additional Info Create Addintional Info Endpoint",
											"id": "006e901e-c1ee-425b-99a5-c31f7f1a2c38",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"additionalInfoId\": \"<string>\",\n  \"documentTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"comment\": \"<string>\",\n  \"companyId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/additional/create"
											},
											"response": [
												{
													"id": "4be7f40f-8058-489d-84c2-55521800369b",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"additionalInfoId\": \"<string>\",\n  \"documentTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"comment\": \"<string>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/additional/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "39433016-0d09-4162-952a-99c9df634b95",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"additionalInfoId\": \"<string>\",\n  \"documentTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"comment\": \"<string>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/additional/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "3d256b49-56b4-4b44-a1eb-44afa36d50f7"
								},
								{
									"name": "edit",
									"item": [
										{
											"name": "Anp Supplier Api Features Additional Info Edit Additional Info Endpoint",
											"id": "288aad35-6b91-45c1-b5c3-18dc704ce768",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"additionalInfoId\": \"<string>\",\n  \"documentTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"comment\": \"<string>\",\n  \"companyId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/supplier/additional/edit"
											},
											"response": [
												{
													"id": "81bea82d-7e5b-40b1-a983-f8594c13e4ad",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"additionalInfoId\": \"<string>\",\n  \"documentTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"comment\": \"<string>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/additional/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "f3052c95-339a-4261-bfdc-8ec41e7e7cc7",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"additionalInfoId\": \"<string>\",\n  \"documentTypes\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"comment\": \"<string>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/supplier/additional/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "f4e17d75-7369-4570-b611-17e31baac7fe"
								},
								{
									"name": "list",
									"item": [
										{
											"name": "{supplierId}",
											"item": [
												{
													"name": "Anp Supplier Api Features Additional Info Get All Additional Infos Endpoint",
													"id": "c78dc3b7-c9a1-4bf7-ac51-b24e590a9326",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{bearerToken}}"
															}
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/additional/list/:supplierId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"additional",
																"list",
																":supplierId"
															],
															"query": [
																{
																	"key": "pageNumber",
																	"value": "<integer>",
																	"description": "(Required) "
																},
																{
																	"key": "pageSize",
																	"value": "<integer>",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"id": "9f8b6fc0-dcfc-47ae-9800-b3fa2fbe80bd",
																	"key": "supplierId",
																	"value": "<string>",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "2ba68c2a-aae3-42de-9f6f-306b44c0fe8f",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/additional/list/:supplierId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"additional",
																		"list",
																		":supplierId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "supplierId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "58df6580-9cda-47fe-a2c5-7cf03808f6bd",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/supplier/additional/list/:supplierId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"supplier",
																		"additional",
																		"list",
																		":supplierId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "supplierId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												}
											],
											"id": "52c47cae-5857-4dbf-b2a4-dfb27cda2ef8"
										}
									],
									"id": "c8c5326d-1e14-4185-a9f3-1638e68e3cf7"
								},
								{
									"name": "{additionalInfoId}",
									"item": [
										{
											"name": "Anp Supplier Api Features Additional Info Get An Additional Info Endpoint",
											"id": "477bb4ff-9abc-40ce-96b8-d1da42b110a2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/supplier/additional/:additionalInfoId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"supplier",
														"additional",
														":additionalInfoId"
													],
													"variable": [
														{
															"id": "c50f051b-2f1f-42a1-a8ec-fba6c307124d",
															"key": "additionalInfoId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "20848c5d-0663-43c8-ba22-cd44a86554ad",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/additional/:additionalInfoId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"additional",
																":additionalInfoId"
															],
															"variable": [
																{
																	"key": "additionalInfoId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "5f497155-7295-48fc-9eb2-2d1994ba3ad5",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/supplier/additional/:additionalInfoId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"supplier",
																"additional",
																":additionalInfoId"
															],
															"variable": [
																{
																	"key": "additionalInfoId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "32d2875e-37ba-4a13-a34c-22d0dca3c248"
								}
							],
							"id": "d3dbe2f3-5a97-44a2-b80c-ede6b5dfa79c"
						}
					],
					"id": "8f3cf938-f7bd-4aa0-ae7d-1dba817b54df"
				},
				{
					"name": "workflow",
					"item": [
						{
							"name": "Regulator login",
							"item": [
								{
									"name": "Initiator - Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "de80e272-27c8-4bcc-b1dc-a25ee9ae3289",
												"exec": [
													"pm.collectionVariables.set(\"initiatorBearerToken\", pm.response.json().data.accessToken);\r",
													"pm.collectionVariables.set(\"initiatorRefreshToken\", pm.response.json().data.refreshToken);\r",
													"pm.collectionVariables.set(\"initiatorUserId\", pm.response.json().data.userId);\r",
													"//pm.collectionVariables.set(\"supplierId\", pm.response.json().data.supplierId);\r",
													"//supplier variable is created in the create supplier endpoint\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that login is successful\", function () {\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.data.accessToken).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.data.refreshToken).to.be.a(\"string\").and.not.empty;\r",
													"});\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "381a97cf-47d4-4ba0-82c1-e08754853bdf",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    //\"email\": \"{{email}}\",\n // \"userName\": \"bailey@yopmail.com\",//\"yinka@yopmail.com\",\n   \"userName\":\"cesaltino.babo@anp.tl\", //initiator\n  // \"userName\": \"abel.saldanha@anp.tl\", //1st approver\n  // \"userName\": \"jaime.ximenes@anp.tl\", //2nd approver\n  \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/login"
									},
									"response": [
										{
											"id": "872c6621-8dfe-4264-8551-d77543781c0e",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\",\n    \"accessToken\": \"<string>\",\n    \"refreshToken\": \"<string>\",\n    \"role\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"supplierId\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "251f0295-3e9c-4193-9348-262d655a35fe",
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "a11c59b5-2fa2-43e7-9933-31b4181ad2df",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Approver - Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "de80e272-27c8-4bcc-b1dc-a25ee9ae3289",
												"exec": [
													"pm.collectionVariables.set(\"approverBearerToken\", pm.response.json().data.accessToken);\r",
													"pm.collectionVariables.set(\"approverRefreshToken\", pm.response.json().data.refreshToken);\r",
													"pm.collectionVariables.set(\"approverUserId\", pm.response.json().data.userId);\r",
													"//pm.collectionVariables.set(\"supplierId\", pm.response.json().data.supplierId);\r",
													"//supplier variable is created in the create supplier endpoint\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that login is successful\", function () {\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.data.accessToken).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.data.refreshToken).to.be.a(\"string\").and.not.empty;\r",
													"});\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "ec268ffb-3d58-4254-9908-d9fc4edad4a6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    //\"email\": \"{{email}}\",\n // \"userName\": \"bailey@yopmail.com\",//\"yinka@yopmail.com\",\n  // \"userName\":\"cesaltino.babo@anp.tl\", //initiator\n   \"userName\": \"abel.saldanha@anp.tl\", //1st approver\n  // \"userName\": \"jaime.ximenes@anp.tl\", //2nd approver\n  \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/login"
									},
									"response": [
										{
											"id": "50446b4b-670b-44b0-89cf-daee2a2f7164",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\",\n    \"accessToken\": \"<string>\",\n    \"refreshToken\": \"<string>\",\n    \"role\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"supplierId\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "c1338b41-1b0a-4533-ac0f-a332ff3abe2d",
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "43701300-ce23-431d-b829-f61a25d44769",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "secondApprover - Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "de80e272-27c8-4bcc-b1dc-a25ee9ae3289",
												"exec": [
													"pm.collectionVariables.set(\"secondApproverBearerToken\", pm.response.json().data.accessToken);\r",
													"pm.collectionVariables.set(\"secondApproverRefreshToken\", pm.response.json().data.refreshToken);\r",
													"pm.collectionVariables.set(\"secondApproverUserId\", pm.response.json().data.userId);\r",
													"//pm.collectionVariables.set(\"supplierId\", pm.response.json().data.supplierId);\r",
													"//supplier variable is created in the create supplier endpoint\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that login is successful\", function () {\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.data.accessToken).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.data.refreshToken).to.be.a(\"string\").and.not.empty;\r",
													"});\r",
													"pm.test(\"Response time is less than 200ms\", function () {\r",
													"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "1a09e751-d30e-4925-bbf5-03cc900f7d0a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    //\"email\": \"{{email}}\",\n // \"userName\": \"bailey@yopmail.com\",//\"yinka@yopmail.com\",\n  // \"userName\":\"cesaltino.babo@anp.tl\", //initiator\n //  \"userName\": \"abel.saldanha@anp.tl\", //1st approver\n   \"userName\": \"jaime.ximenes@anp.tl\", //2nd approver\n  \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/account/login"
									},
									"response": [
										{
											"id": "69ba000e-d45e-4e04-a288-83c0d1d1fe53",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\",\n    \"accessToken\": \"<string>\",\n    \"refreshToken\": \"<string>\",\n    \"role\": \"<string>\",\n    \"userId\": \"<string>\",\n    \"supplierId\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "48e4b4b3-f171-49ea-9683-6e90e89007be",
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "ef41f937-9ab0-4d86-aabf-d40b349d32ab",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"userName\": \"<string>\",\n  \"password\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/account/login"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "6abe42e6-ffbb-4d14-ae3d-4fd92a001f3f"
						},
						{
							"name": "roles",
							"item": [
								{
									"name": "ANP Web Api Features Roles Get All Roles Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "38eeaee1-a9c6-4e1b-96ad-8876778f0f99",
												"exec": [
													"\r",
													"pm.collectionVariables.set(\"roleId\", pm.response.json()[3].roleId);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var employees = responseJSON;\r",
													"\r",
													"pm.test(\"Verify that roles are returned\", function () {\r",
													"    pm.expect(employees[0].roleId).to.be.a(\"string\").and.not.be.empty;\r",
													"    pm.expect(employees[0].role).to.be.a(\"string\").and.not.be.empty;\r",
													"  \r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "be211358-21ba-437b-9525-220f7e5bf13f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{approverBearerToken}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": "{{baseUrl}}/api/account/roles"
									},
									"response": [
										{
											"id": "4f10a663-7287-41a4-a526-7675b54df8da",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/account/roles"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "[\n  {\n    \"roleId\": \"<string>\",\n    \"role\": \"<string>\"\n  },\n  {\n    \"roleId\": \"<string>\",\n    \"role\": \"<string>\"\n  }\n]"
										},
										{
											"id": "28c772ca-818a-4418-8109-6797ddf345df",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/account/roles"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No auth - Get All Roles",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "509d9e80-6a47-4840-aa9e-fb592cc8a063",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "46d7bc00-c3e9-4bf3-b787-2a65f376dc6b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": "{{baseUrl}}/api/account/roles"
									},
									"response": [
										{
											"id": "1580da2c-ad10-4a67-823c-505f8c0fc13d",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/account/roles"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "[\n  {\n    \"roleId\": \"<string>\",\n    \"role\": \"<string>\"\n  },\n  {\n    \"roleId\": \"<string>\",\n    \"role\": \"<string>\"\n  }\n]"
										},
										{
											"id": "6ecc6abf-4a1f-48cc-a720-04352b8fd5f1",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/account/roles"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "d86ab3c3-0034-4054-a264-a95aea69575e"
						},
						{
							"name": "create",
							"item": [
								{
									"name": "Empty fields - Create Workflow Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "47cc3c80-19f4-4fe8-95fe-330b83032d52",
												"exec": [
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that workflowname is required\", function () {\r",
													"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\");\r",
													"   \r",
													"\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "251d1f4a-6c08-49f8-a52a-3701ec0c18bd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/problem+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"workflowName\": \"\",\n  \"typeOfWorkflow\": 2,\n  \"descriptions\": \"\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/workflow/create"
									},
									"response": [
										{
											"id": "b4966c57-85e6-4615-9e0f-3fe35b973b06",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workflowName\": \"<string>\",\n  \"typeOfWorkflow\": 2,\n  \"descriptions\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/create"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "0f754855-1fd8-4f20-888a-0285075c9ba5",
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workflowName\": \"<string>\",\n  \"typeOfWorkflow\": 2,\n  \"descriptions\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/create"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "6a076c72-6580-481c-856b-0b8dd5308151",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workflowName\": \"<string>\",\n  \"typeOfWorkflow\": 2,\n  \"descriptions\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/create"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No auth - Create Workflow Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "47cc3c80-19f4-4fe8-95fe-330b83032d52",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "80d38b24-8337-4a3d-9c1d-0159e6dee35f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/problem+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"workflowName\": \"\",\n  \"typeOfWorkflow\": 2,\n  \"descriptions\": \"\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/workflow/create"
									},
									"response": [
										{
											"id": "d5e45da2-c732-4d5a-9d15-2743fbdb3908",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workflowName\": \"<string>\",\n  \"typeOfWorkflow\": 2,\n  \"descriptions\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/create"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "12262b03-6c4d-4cdc-bba4-2887069aadc1",
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workflowName\": \"<string>\",\n  \"typeOfWorkflow\": 2,\n  \"descriptions\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/create"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "3fb7da57-9f3a-4829-95e8-6aedad565943",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workflowName\": \"<string>\",\n  \"typeOfWorkflow\": 2,\n  \"descriptions\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/create"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "775ed5e6-520f-47e6-a491-4406e0b430ff"
						},
						{
							"name": "list",
							"item": [
								{
									"name": "Anp Workflow Features Manage Workflow Get All Workflows Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b1754f8a-1bd6-45fc-bb14-f6a373329046",
												"exec": [
													"pm.collectionVariables.set(\"workflowId\", pm.response.json().data[0].workflowId);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"\r",
													"pm.test(\"Verify that workflow list is returned\", function () {\r",
													"    pm.expect(responseJSON.data[0].workflowId).to.be.a(\"string\").and.not.be.empty;\r",
													"        pm.expect(responseJSON.data[0].viewDataSource).to.be.a(\"string\").and.not.be.empty;\r",
													"         pm.expect(responseJSON.data[0].descriptions).to.be.a(\"string\").and.not.be.empty;\r",
													"          pm.expect(responseJSON.data[0].workflowName).to.be.a(\"string\").and.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "bfd5f795-0c3c-49d6-a718-ca855084aaef",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/workflow/list?pageNumber=1&pageSize=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"workflow",
												"list"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "1",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "10",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "5b1124ee-f75b-4f63-89e6-ec07d4196103",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/workflow/list?pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"workflow",
														"list"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "0e00363d-a08a-4783-b608-a4950c67d63f",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/workflow/list?pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"workflow",
														"list"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "7b77399d-668e-49ef-bab4-0842884f41ce"
						},
						{
							"name": "edit",
							"item": [
								{
									"name": "Anp Workflow Features Manage Workflow Update Workflow Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1050d97d-e3b3-4ab3-afaf-7e0494ffc214",
												"exec": [
													"\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that workflowId is required\", function () {\r",
													"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\");\r",
													"   \r",
													"\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "4e46ff74-6c59-4b68-b2f7-426f893d96a7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/problem+json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"workflowId\": \"\",\n  \"workflowName\": \"\",\n  \"typeOfWorkflow\": \"\",\n  \"descriptions\": \"\",\n  \"viewDataSource\": \"\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/workflow/edit"
									},
									"response": [
										{
											"id": "fb59f76a-cd98-45f1-bfb6-535f4b5ec511",
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workflowId\": \"<string>\",\n  \"workflowName\": \"<string>\",\n  \"typeOfWorkflow\": 3,\n  \"descriptions\": \"<string>\",\n  \"viewDataSource\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/edit"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "7f97ad3c-80cc-4374-8e2b-7ad1dd3d0103",
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/problem+json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workflowId\": \"<string>\",\n  \"workflowName\": \"<string>\",\n  \"typeOfWorkflow\": 3,\n  \"descriptions\": \"<string>\",\n  \"viewDataSource\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/edit"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/problem+json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"type\": \"https://www.rfc-editor.org/rfc/rfc7231#section-6.5.1\",\n  \"title\": \"One or more validation errors occurred.\",\n  \"status\": 400,\n  \"instance\": \"/api/route\",\n  \"traceId\": \"0HMPNHL0JHL76:00000001\",\n  \"detail\": \"<string>\",\n  \"errors\": [\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    },\n    {\n      \"name\": \"Error or field name\",\n      \"reason\": \"Error reason\",\n      \"code\": \"<string>\",\n      \"severity\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "ea61309f-9647-463c-a88f-99cd3a031329",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workflowId\": \"<string>\",\n  \"workflowName\": \"<string>\",\n  \"typeOfWorkflow\": 3,\n  \"descriptions\": \"<string>\",\n  \"viewDataSource\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/edit"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "39b11907-73b2-454c-a887-a6befb030fc2"
						},
						{
							"name": "{workflowId}",
							"item": [
								{
									"name": "Anp Workflow Features Manage Workflow Get A Workflow Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0e049587-7eec-454a-837f-b9e132587c47",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"\r",
													"pm.test(\"Verify that workflow is returned\", function () {\r",
													"    pm.expect(responseJSON.data.workflowId).to.be.a(\"string\").and.not.be.empty;\r",
													"        pm.expect(responseJSON.data.viewDataSource).to.be.a(\"string\").and.not.be.empty;\r",
													"         pm.expect(responseJSON.data.descriptions).to.be.a(\"string\").and.not.be.empty;\r",
													"          pm.expect(responseJSON.data.workflowName).to.be.a(\"string\").and.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "08eb300a-976b-4b6a-98b9-bcc5bd7bbc5d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/workflow/:workflowId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"workflow",
												":workflowId"
											],
											"variable": [
												{
													"key": "workflowId",
													"value": "{{workflowId}}",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "918c8421-b221-4a20-8e6c-e0e4ec91caee",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/workflow/:workflowId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"workflow",
														":workflowId"
													],
													"variable": [
														{
															"key": "workflowId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "f7c2a3aa-f7b3-401e-990e-305749c1d964",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/workflow/:workflowId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"workflow",
														":workflowId"
													],
													"variable": [
														{
															"key": "workflowId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "bd5813e0-769a-4aba-8547-c17392c5e19d"
						},
						{
							"name": "types",
							"item": [
								{
									"name": "Anp Workflow Features Manage Workflow Get Workflow Types Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "78cc0ef6-af27-43e7-b83b-1cf670a430bd",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"\r",
													"pm.test(\"Verify that workflow types are returned\", function () {\r",
													"    pm.expect(responseJSON.Supplier).to.be.a(\"number\");\r",
													"    pm.expect(responseJSON.Bid).to.be.a(\"number\");\r",
													"        pm.expect(responseJSON.Procurement).to.be.a(\"number\");\r",
													"         pm.expect(responseJSON.Contract).to.be.a(\"number\");\r",
													"          pm.expect(responseJSON.Project).to.be.a(\"number\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "a9baf987-f755-4878-9b12-24229c63b1d3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": "{{baseUrl}}/api/workflow/types"
									},
									"response": [
										{
											"id": "0a8f987a-c0c1-4ab9-a99f-666b04df3c62",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/workflow/types"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "430fcbc2-ca58-4368-bab0-6fa3266ec931",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/workflow/types"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "808de651-b305-4d48-9593-cd20ea3c92f6"
						},
						{
							"name": "history",
							"item": [
								{
									"name": "{requestId}",
									"item": [
										{
											"name": "Anp Workflow Features Manage Task Get Workflow History Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "38c15cbe-4619-4095-8f0f-ee6b87b3eafb",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"\r",
															"pm.test(\"Verify that workflow history is returned\", function () {\r",
															"    pm.expect(responseJSON.data[0].workflowRequestHistoryId).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(responseJSON.data[0].workflowAction).to.be.a(\"number\");\r",
															"        pm.expect(responseJSON.data[0].modifiedOn).to.be.a(\"string\").and.not.be.empty;\r",
															"         pm.expect(responseJSON.data[0].entityId).to.be.a(\"string\").and.not.be.empty;\r",
															"          pm.expect(responseJSON.data[0].workflowLevel).to.be.a(\"string\").and.not.be.empty;\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "c5e1b1fa-a460-4187-9d2a-ab435c70dc39",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/workflow/history/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"workflow",
														"history",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "fa087b2a-e880-47ac-bb83-08dd341c5bcc",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "7a36d7e0-4e99-47f2-ba16-4943c6fa230c",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/history/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"history",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "8654db6b-dc2c-4139-b205-31b470117fbd",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/history/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"history",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth -  Get Workflow History Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "38c15cbe-4619-4095-8f0f-ee6b87b3eafb",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "3671116f-83da-48dd-8b1e-6fd003732e86",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/workflow/history/:requestId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"workflow",
														"history",
														":requestId"
													],
													"variable": [
														{
															"key": "requestId",
															"value": "fa087b2a-e880-47ac-bb83-08dd341c5bcc",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "5de1ca00-63e7-460c-ae36-06c91171f84b",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/history/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"history",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "0e1c8500-f237-48ae-8272-427ea1afcc5e",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/history/:requestId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"history",
																":requestId"
															],
															"variable": [
																{
																	"key": "requestId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "51a95bbe-cf00-4dc2-9b94-8bd4224b6051"
								}
							],
							"id": "2146e85e-1de9-45af-bf12-e7cc4b18cffc"
						},
						{
							"name": "workflowParameters",
							"item": [
								{
									"name": "{workflowType}",
									"item": [
										{
											"name": "Anp Workflow Features Manage Task Get Workflow Parameter Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "388d89f0-f90d-4c77-a8b4-9a3ca993c74b",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"\r",
															"pm.test(\"Verify that workflow parameter type is returned\", function () {\r",
															"    pm.expect(responseJSON.data[0].workflowParameterId).to.be.a(\"string\").and.not.be.empty;\r",
															"        pm.expect(responseJSON.data[0].parameterName).to.be.a(\"string\").and.not.be.empty;\r",
															"         pm.expect(responseJSON.data[0].parameterType).to.be.a(\"string\").and.not.be.empty;\r",
															"          pm.expect(responseJSON.data[0].workflowId).to.be.a(\"string\").and.not.be.empty;\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "361c04fa-a534-4249-9b6d-0430a4732282",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/workflow/workflowParameters/:workflowType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"workflow",
														"workflowParameters",
														":workflowType"
													],
													"variable": [
														{
															"key": "workflowType",
															"value": "0",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "ba3c2bea-4796-4d63-8af3-5ea64ee62fa3",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/workflowParameters/:workflowType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"workflowParameters",
																":workflowType"
															],
															"variable": [
																{
																	"key": "workflowType"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "3f5b3daf-3ed0-4405-a332-3e62795eafe2",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/workflowParameters/:workflowType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"workflowParameters",
																":workflowType"
															],
															"variable": [
																{
																	"key": "workflowType"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Get Workflow Parameter Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "388d89f0-f90d-4c77-a8b4-9a3ca993c74b",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "d41c5069-3312-41b5-83f3-a27bc35fa364",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/workflow/workflowParameters/:workflowType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"workflow",
														"workflowParameters",
														":workflowType"
													],
													"variable": [
														{
															"key": "workflowType",
															"value": "0",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "f4b627b4-1bcb-4028-b875-9a9a64043f7b",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/workflowParameters/:workflowType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"workflowParameters",
																":workflowType"
															],
															"variable": [
																{
																	"key": "workflowType"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "f0d6c974-d8c0-46db-8834-21a3215c301a",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/workflowParameters/:workflowType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"workflowParameters",
																":workflowType"
															],
															"variable": [
																{
																	"key": "workflowType"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "b146af64-18ee-4783-adde-273213bbb449"
								}
							],
							"id": "5038d9f3-a098-42cf-a045-63224500714e"
						},
						{
							"name": "initiate",
							"item": [
								{
									"name": "No auth - Initiate Workflow Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ebf6f2ce-938d-4466-a8a6-2bff2c8758bb",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "7a58bf90-8835-472e-a29b-51efa5231ebd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityId\": \"\",\n  \"entityName\": \"\",\n  \"workflowDescription\": \"\",\n  \"parameters\": [\n    {\n      \"parameterName\": \"\",\n      \"parameterValue\": \"\"\n    },\n    {\n      \"parameterName\": \"\",\n      \"parameterValue\": \"\"\n    }\n  ],\n  \"selectedWorkflowType\": \"\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/workflow/initiate"
									},
									"response": [
										{
											"id": "a74b3cd6-2b6d-40e4-9101-a9e4fb295def",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"entityId\": \"<string>\",\n  \"entityName\": \"<string>\",\n  \"workflowDescription\": \"<string>\",\n  \"parameters\": [\n    {\n      \"parameterName\": \"<string>\",\n      \"parameterValue\": \"<string>\"\n    },\n    {\n      \"parameterName\": \"<string>\",\n      \"parameterValue\": \"<string>\"\n    }\n  ],\n  \"selectedWorkflowType\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/initiate"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "36f08f01-fd21-4b6b-8146-504721885131",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"entityId\": \"<string>\",\n  \"entityName\": \"<string>\",\n  \"workflowDescription\": \"<string>\",\n  \"parameters\": [\n    {\n      \"parameterName\": \"<string>\",\n      \"parameterValue\": \"<string>\"\n    },\n    {\n      \"parameterName\": \"<string>\",\n      \"parameterValue\": \"<string>\"\n    }\n  ],\n  \"selectedWorkflowType\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/initiate"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Empty fields - Initiate Workflow Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ebf6f2ce-938d-4466-a8a6-2bff2c8758bb",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var errors = responseJSON.errors;\r",
													"\r",
													"pm.test(\"Verify that entity Id is invalid\", function () {\r",
													"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
													"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2cf8a7a0-eeac-4529-847a-7552af0c10c6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityId\": \"\",\n  \"entityName\": \"\",\n  \"workflowDescription\": \"\",\n  \"parameters\": [\n    {\n      \"parameterName\": \"\",\n      \"parameterValue\": \"\"\n    },\n    {\n      \"parameterName\": \"\",\n      \"parameterValue\": \"\"\n    }\n  ],\n  \"selectedWorkflowType\": \"\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/workflow/initiate"
									},
									"response": [
										{
											"id": "1b6a15d3-46fe-4800-a35c-e6c0331ca9c0",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"entityId\": \"<string>\",\n  \"entityName\": \"<string>\",\n  \"workflowDescription\": \"<string>\",\n  \"parameters\": [\n    {\n      \"parameterName\": \"<string>\",\n      \"parameterValue\": \"<string>\"\n    },\n    {\n      \"parameterName\": \"<string>\",\n      \"parameterValue\": \"<string>\"\n    }\n  ],\n  \"selectedWorkflowType\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/initiate"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "36c0b5a0-78c6-40ed-b0b5-d756e1b33990",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"entityId\": \"<string>\",\n  \"entityName\": \"<string>\",\n  \"workflowDescription\": \"<string>\",\n  \"parameters\": [\n    {\n      \"parameterName\": \"<string>\",\n      \"parameterValue\": \"<string>\"\n    },\n    {\n      \"parameterName\": \"<string>\",\n      \"parameterValue\": \"<string>\"\n    }\n  ],\n  \"selectedWorkflowType\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/initiate"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Anp Workflow Features Manage Task Initiate Workflow Endpoint Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "763f2a2d-cd36-405a-9059-311f890e4f83",
												"exec": [
													"pm.collectionVariables.set(\"requestId\", pm.response.json().data.id);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that Workflow initiated successfully\", function () {\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.data.id).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "48aa2b8d-cb25-458b-8e28-a4ca57a2c830",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{approverBearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "// {\n//   \"entityId\": \"{{supplierId}}\",//procurementId\n//   \"entityName\": \"Supplier\",//Procurement\n//   \"workflowDescription\": \"Supplier verification for sly@yopmail.com\",\n//   \"parameters\": [\n//     {\n//       \"parameterName\": \"SupplierId\",\n//       \"parameterValue\": \"{{supplierId}}\"  //from login\n//     },\n//     {\n//       \"parameterName\": \"baseurl\",\n//       \"parameterValue\": \"{{baseUrl}}\"\n//     },\n//       {\n//       \"parameterName\": \"RoleId\",\n//       \"parameterValue\": \"{{roleId}}\"//\"b53300b8-5f92-40c8-bf66-08dcf4682678\" \n//     },\n//      {\n//       \"parameterName\": \"UserId\",\n//       \"parameterValue\": \"{{supplierUserId}}\"//\"3d7d0b63-17e9-4d94-8afd-08dd23248f67\"  //from suppliers\n//     }\n//   ],\n//   \"selectedWorkflowType\": \"Supplier\"\n// }\n\n{\n  \"entityId\": \"{{serviceInformationId}}\", //procurementId\n  \"entityName\": \"Procurement\",\n  \"workflowDescription\": \"Procurement verification for chair\",\n  \"parameters\": [\n    {\n      \"parameterName\": \"procurement\", \n      \"parameterValue\": \"{{serviceInformationId}}\"  //procurementId\n    },\n    {\n      \"parameterName\": \"baseurl\",\n      \"parameterValue\": \"{{baseUrl}}\"\n    }\n \n  ],\n  \"selectedWorkflowType\": \"Procurement\"\n}\n\n",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/workflow/initiate"
									},
									"response": [
										{
											"id": "ab42f935-86bb-48b2-b28e-f1e32e9bbf22",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"entityId\": \"<string>\",\n  \"entityName\": \"<string>\",\n  \"workflowDescription\": \"<string>\",\n  \"parameters\": [\n    {\n      \"parameterName\": \"<string>\",\n      \"parameterValue\": \"<string>\"\n    },\n    {\n      \"parameterName\": \"<string>\",\n      \"parameterValue\": \"<string>\"\n    }\n  ],\n  \"selectedWorkflowType\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/initiate"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "270bb8cd-e3da-47d7-ad6d-337118dc2cf5",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"entityId\": \"<string>\",\n  \"entityName\": \"<string>\",\n  \"workflowDescription\": \"<string>\",\n  \"parameters\": [\n    {\n      \"parameterName\": \"<string>\",\n      \"parameterValue\": \"<string>\"\n    },\n    {\n      \"parameterName\": \"<string>\",\n      \"parameterValue\": \"<string>\"\n    }\n  ],\n  \"selectedWorkflowType\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/initiate"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "7ba6f9c6-0b95-483f-a2bd-a51dd0e45df5"
						},
						{
							"name": "assignedTask",
							"item": [
								{
									"name": "Anp Workflow Features Manage Task Get Assigned Task Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "432c7712-fd58-498c-beba-616abb6f09fe",
												"exec": [
													"pm.collectionVariables.set(\"requestId\", pm.response.json().data[0].workflowRequestId);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"\r",
													"pm.test(\"Verify that assignedtask is returned\", function () {\r",
													"    pm.expect(responseJSON.data[0].workflowRequestId).to.be.a(\"string\").and.not.be.empty;\r",
													"        pm.expect(responseJSON.data[0].descriptions).to.be.a(\"string\").and.not.be.empty;\r",
													"         pm.expect(responseJSON.data[0].lastProcessor).to.be.a(\"string\").and.not.be.empty;\r",
													"          pm.expect(responseJSON.data[0].preparedBy).to.be.a(\"string\").and.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "3ac6e0de-e145-4f06-bac6-f8ad7a2da37f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{approverBearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": "{{baseUrl}}/api/workflow/assignedTask"
									},
									"response": [
										{
											"id": "fbf2c2a2-b5a5-450a-bf51-55c5d2404346",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/workflow/assignedTask"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "51de6441-e9ef-4a96-b5b4-9beec858a89e",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": "{{baseUrl}}/api/workflow/assignedTask"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "128a0f56-f0d9-46a0-8bb4-cac3bf43b8e9"
						},
						{
							"name": "processTask",
							"item": [
								{
									"name": "Anp Workflow Features Manage Task Process Workflow Task Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9cc1bd8f-6db4-4d13-a292-e8fafc9ff2b4",
												"exec": [
													"//pm.collectionVariables.set(\"requestId\", pm.response.json().data.id);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); // Fixed the variable name from responseData to responseJSON\r",
													"\r",
													"pm.test(\"Verify that Workflow is processed successfully\", function () {\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.data.id).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "53d8602e-b5b2-4226-97ed-f5d3ca99ee20",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{secondApproverBearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"requestId\":  \"{{requestId}}\",//\"fa087b2a-e880-47ac-bb83-08dd341c5bcc\",\n  \"entityId\": \"{{supplierId}}\", //procurementId\n  \"entityName\": \"Supplier\",\n  \"comment\": \"<string>\",\n  \"workflowAction\": \"Approved\",\n  \"approverId\": \"{{secondApproverUserId}}\",//login user id\n  \"descriptions\": \"Supplier verification for sly@yopmail.com\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/workflow/processTask"
									},
									"response": [
										{
											"id": "dc0182f1-f1c1-49df-bef7-8efb04ae2a65",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"requestId\": \"<string>\",\n  \"entityId\": \"<string>\",\n  \"entityName\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"workflowAction\": 0,\n  \"approverId\": \"<string>\",\n  \"descriptions\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/processTask"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "61903011-66d0-41dd-bb7f-e9b2df3ef9e1",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"requestId\": \"<string>\",\n  \"entityId\": \"<string>\",\n  \"entityName\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"workflowAction\": 0,\n  \"approverId\": \"<string>\",\n  \"descriptions\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/processTask"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No auth - Process Workflow Task Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9cc1bd8f-6db4-4d13-a292-e8fafc9ff2b4",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "4017462a-c78a-4ae7-9fb3-ce798e3ef5b5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"requestId\": \"fa087b2a-e880-47ac-bb83-08dd341c5bcc\",\n  \"entityId\": \"{{supplierId}}\",\n  \"entityName\": \"Supplier\",\n  \"comment\": \"<string>\",\n  \"workflowAction\": 0,\n  \"approverId\": \"{{userId}}\",//login user id\n  \"descriptions\": \"Supplier verification for yinka@yopmail.com\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/workflow/processTask"
									},
									"response": [
										{
											"id": "8c061175-ef98-4f25-99bb-ddfdaea5aaed",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"requestId\": \"<string>\",\n  \"entityId\": \"<string>\",\n  \"entityName\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"workflowAction\": 0,\n  \"approverId\": \"<string>\",\n  \"descriptions\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/processTask"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "5246d797-0079-4d46-8452-d9a2b2ae1029",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"requestId\": \"<string>\",\n  \"entityId\": \"<string>\",\n  \"entityName\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"workflowAction\": 0,\n  \"approverId\": \"<string>\",\n  \"descriptions\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/processTask"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "e4e657b7-58d9-4e09-a30c-7646dd8642f2"
						},
						{
							"name": "step",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Anp Workflow Features Manage Steps Create Step Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c68d2bba-aee7-47c2-b760-c9fe35711fbd",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that workflowId  is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "0c53cbab-f5cf-4893-b49b-a96df5d49f2c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"stepName\": \"\",\n  \"descriptions\": \"\",\n  \"workflowId\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/step/create"
											},
											"response": [
												{
													"id": "61f015e8-e443-45d5-b9f6-b99c2c7f023c",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"stepName\": \"<string>\",\n  \"descriptions\": \"<string>\",\n  \"workflowId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/step/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "c1f41887-2157-4368-b893-15acafc8f348",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"stepName\": \"<string>\",\n  \"descriptions\": \"<string>\",\n  \"workflowId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/step/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "1622f930-5770-4095-9935-b73e51f0a804"
								},
								{
									"name": "{workflowStepId}",
									"item": [
										{
											"name": "Anp Workflow Features Manage Steps Get A Step Endpoint",
											"id": "1cfd68bf-d880-40cf-a5b1-c43490fefe10",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/workflow/step/:workflowStepId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"workflow",
														"step",
														":workflowStepId"
													],
													"variable": [
														{
															"id": "dceb76f0-9588-4601-9a6c-483340549798",
															"key": "workflowStepId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "55fa0de1-2257-4196-b9af-e5a4c39f864b",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/step/:workflowStepId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"step",
																":workflowStepId"
															],
															"variable": [
																{
																	"key": "workflowStepId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "4a544dc3-f088-48a3-85b2-6e252f0c167f",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/step/:workflowStepId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"step",
																":workflowStepId"
															],
															"variable": [
																{
																	"key": "workflowStepId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "cb749cd7-67bd-4dfb-b10f-1bcc35d9f9f9"
								},
								{
									"name": "edit",
									"item": [
										{
											"name": "Empty fields - Update Workflow Step Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0d096256-c879-41fa-8fb1-940786a275b3",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that workflowStepId  is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "2b09bcdf-dbe3-494b-8a53-c8df05aae7b0",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workflowStepId\": \"<string>\",\n  \"stepName\": \"<string>\",\n  \"descriptions\": \"<string>\",\n  \"workflowId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/step/edit"
											},
											"response": [
												{
													"id": "3915a01a-8a73-4f86-99a6-b4d8ba01f80b",
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"workflowStepId\": \"<string>\",\n  \"stepName\": \"<string>\",\n  \"descriptions\": \"<string>\",\n  \"workflowId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/step/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "6cb72273-af87-455d-b3e9-f6dfd0872746",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"workflowStepId\": \"<string>\",\n  \"stepName\": \"<string>\",\n  \"descriptions\": \"<string>\",\n  \"workflowId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/step/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "7adbe28c-9fa4-4fba-926d-5f823608ccc0"
								}
							],
							"id": "3df9a80c-c2b3-4fa6-a378-ba403dbfd96f"
						},
						{
							"name": "steps",
							"item": [
								{
									"name": "remove",
									"item": [
										{
											"name": "No StepId - Delete Workflow Step Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6ccb0f80-d577-4f9d-adc5-4c913cfa8ad1",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that stepId  is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "0e95364e-a2e7-4e66-871d-a3a91b15a508",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"stepId\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/steps/remove"
											},
											"response": [
												{
													"id": "948986e6-1a5c-4fed-bd43-9ab1a6fcecd3",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"stepId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/steps/remove"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "79ac479f-62b1-4afb-97a5-77e55077e3ca",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"stepId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/steps/remove"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "cc25ebc1-539f-443d-97d4-85c08de80755"
								},
								{
									"name": "Anp Workflow Features Manage Steps Get All Steps Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fa215c3e-e9b6-41e6-8833-234823e6699e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"\r",
													"pm.test(\"Verify that steps are returned\", function () {\r",
													"    pm.expect(responseJSON.data[0].workflowStepId).to.be.a(\"string\").and.not.be.empty;\r",
													"        pm.expect(responseJSON.data[0].stepName).to.be.a(\"string\").and.not.be.empty;\r",
													"         pm.expect(responseJSON.data[0].descriptions).to.be.a(\"string\").and.not.be.empty;\r",
													"          pm.expect(responseJSON.data[0].workflowId).to.be.a(\"string\").and.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "7dffe4d4-4ddc-40e2-9edd-50d398e7ac8d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/workflow/steps?workflowId=879f417d-23af-4cd0-586a-08dce3c79c32&pageNumber=1&pageSize=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"workflow",
												"steps"
											],
											"query": [
												{
													"key": "workflowId",
													"value": "879f417d-23af-4cd0-586a-08dce3c79c32",
													"description": "(Required) "
												},
												{
													"key": "pageNumber",
													"value": "1",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "10",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "5b67ab94-684d-407e-be22-7fb79242eb4a",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/workflow/steps?workflowId=<string>&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"workflow",
														"steps"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "workflowId",
															"value": "<string>"
														},
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "1a669bfd-a4f9-4e0b-b681-ab80b46a83ef",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/workflow/steps?workflowId=<string>&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"workflow",
														"steps"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "workflowId",
															"value": "<string>"
														},
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "8d54c547-9c07-483d-9d28-8237e274ca8f"
						},
						{
							"name": "process",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Empty fields - Create Process Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d9a1f992-dd22-4cef-8640-207853823111",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that mandatory fields are required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "262b8c53-d4a2-4ecc-bcda-34621aa763c8",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"duration\": \"\",\n  \"sequence\": \"\",\n  \"terminatingStep\": \"\",\n  \"autoAssignProcessor\": \"\",\n  \"workflowId\": \"\",\n  \"fromStepId\": \"\",\n  \"toStepId\": \"\",\n  \"workflowStepActions\": [\n    {\n      \"workflowStepActionId\": \"<string>\",\n      \"actionType\": 2,\n      \"workflowCommandId\": \"<string>\",\n      \"workflowStepRelationId\": \"<string>\"\n    },\n    {\n      \"workflowStepActionId\": \"<string>\",\n      \"actionType\": 0,\n      \"workflowCommandId\": \"<string>\",\n      \"workflowStepRelationId\": \"<string>\"\n    }\n  ],\n  \"stepApprovers\": [\n    {\n      \"userId\": \"<string>\"\n    },\n    {\n      \"userId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/process/create"
											},
											"response": [
												{
													"id": "d5324907-4fef-4791-b31a-21f982fecc08",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"duration\": \"<integer>\",\n  \"sequence\": \"<integer>\",\n  \"terminatingStep\": \"<boolean>\",\n  \"autoAssignProcessor\": \"<boolean>\",\n  \"workflowId\": \"<string>\",\n  \"fromStepId\": \"<string>\",\n  \"toStepId\": \"<string>\",\n  \"workflowStepActions\": [\n    {\n      \"workflowStepActionId\": \"<string>\",\n      \"actionType\": 2,\n      \"workflowCommandId\": \"<string>\",\n      \"workflowStepRelationId\": \"<string>\"\n    },\n    {\n      \"workflowStepActionId\": \"<string>\",\n      \"actionType\": 0,\n      \"workflowCommandId\": \"<string>\",\n      \"workflowStepRelationId\": \"<string>\"\n    }\n  ],\n  \"stepApprovers\": [\n    {\n      \"userId\": \"<string>\"\n    },\n    {\n      \"userId\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/process/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "90ca60e6-b65d-4426-85ff-1811e8ce6528",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"duration\": \"<integer>\",\n  \"sequence\": \"<integer>\",\n  \"terminatingStep\": \"<boolean>\",\n  \"autoAssignProcessor\": \"<boolean>\",\n  \"workflowId\": \"<string>\",\n  \"fromStepId\": \"<string>\",\n  \"toStepId\": \"<string>\",\n  \"workflowStepActions\": [\n    {\n      \"workflowStepActionId\": \"<string>\",\n      \"actionType\": 2,\n      \"workflowCommandId\": \"<string>\",\n      \"workflowStepRelationId\": \"<string>\"\n    },\n    {\n      \"workflowStepActionId\": \"<string>\",\n      \"actionType\": 0,\n      \"workflowCommandId\": \"<string>\",\n      \"workflowStepRelationId\": \"<string>\"\n    }\n  ],\n  \"stepApprovers\": [\n    {\n      \"userId\": \"<string>\"\n    },\n    {\n      \"userId\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/process/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "85b79471-05e9-4b55-acd7-42e60ad79c23"
								},
								{
									"name": "remove",
									"item": [
										{
											"name": "Anp Workflow Features Manage Step Relation Delete Step Relation Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4a4b2335-b63e-4209-9e96-e2813a792f53",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that relationId  is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "2abbb8ad-c229-4e04-b3c0-1ed228dfa8a9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"relationId\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/process/remove"
											},
											"response": [
												{
													"id": "c91f54f6-58e8-4466-b779-69247388e222",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"relationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/process/remove"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "eb4d5091-8a99-4eaf-9ede-a3a5f43361f9",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"relationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/process/remove"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "f03c338f-55e6-4b31-a1f8-80a24e335983"
								},
								{
									"name": "list",
									"item": [
										{
											"name": "Anp Workflow Features Manage Step Relation Get All Workflow Process Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d346df64-586e-433f-96df-9159845ba412",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"\r",
															"pm.test(\"Verify that process list is returned\", function () {\r",
															"    pm.expect(responseJSON.data[0].workflowStepRelationId).to.be.a(\"string\").and.not.be.empty;\r",
															"        pm.expect(responseJSON.data[0].duration).to.be.a(\"number\");\r",
															"         pm.expect(responseJSON.data[0].sequence).to.be.a(\"number\");\r",
															"          pm.expect(responseJSON.data[0].terminatingStep).to.be.a(\"boolean\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "e5737a6a-f4dc-45b3-9b54-25b5dcb3ead4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/workflow/process/list?workflowId=879f417d-23af-4cd0-586a-08dce3c79c32&pageNumber=1&pageSize=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"workflow",
														"process",
														"list"
													],
													"query": [
														{
															"key": "workflowId",
															"value": "879f417d-23af-4cd0-586a-08dce3c79c32",
															"description": "(Required) "
														},
														{
															"key": "pageNumber",
															"value": "1",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "10",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "87564e77-d1e5-4f13-9e6a-6c410571ec43",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/process/list?workflowId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"process",
																"list"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "workflowId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "73066477-0cf0-4cfb-a662-df17f0885d56",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/process/list?workflowId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"process",
																"list"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "workflowId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "02900b68-3400-44ec-9832-9126a45c2b19"
								},
								{
									"name": "{workflowStepRelationId}",
									"item": [
										{
											"name": "Anp Workflow Features Manage Step Relation Get A Workflow Process Endpoint",
											"id": "ecabe444-e1b6-4bf4-ad95-4d1deb32e94e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/workflow/process/:workflowStepRelationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"workflow",
														"process",
														":workflowStepRelationId"
													],
													"variable": [
														{
															"id": "efb5c0f4-f70e-4c40-b4c1-3a6a2572b05a",
															"key": "workflowStepRelationId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "51d941fe-42ba-4cd6-b683-7adb1b76eb7e",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/process/:workflowStepRelationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"process",
																":workflowStepRelationId"
															],
															"variable": [
																{
																	"key": "workflowStepRelationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "628a251f-4d5b-480b-9bd1-e23a35ab4c70",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/process/:workflowStepRelationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"process",
																":workflowStepRelationId"
															],
															"variable": [
																{
																	"key": "workflowStepRelationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "4f67c43b-52b7-484f-ace7-e804d6e82805"
								},
								{
									"name": "edit",
									"item": [
										{
											"name": "Empty fields - Update Process Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9af75414-b13a-44c6-86a2-bdd0527e3e68",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that workflowStepRelationId  is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "77e1cd64-cf58-4b56-99b0-09b83401c699",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workflowStepRelationId\": \"\",\n  \"duration\": \"\",\n  \"sequence\": \"\",\n  \"terminatingStep\": \"\",\n  \"autoAssignProcessor\": \"\",\n  \"workflowId\": \"\",\n  \"fromStepId\": \"\",\n  \"toStepId\": \"\",\n  \"workflowStepActions\": [\n    {\n      \"workflowStepActionId\": \"<string>\",\n      \"actionType\": 2,\n      \"workflowCommandId\": \"<string>\",\n      \"workflowStepRelationId\": \"<string>\"\n    },\n    {\n      \"workflowStepActionId\": \"<string>\",\n      \"actionType\": 0,\n      \"workflowCommandId\": \"<string>\",\n      \"workflowStepRelationId\": \"<string>\"\n    }\n  ],\n  \"stepApprovers\": [\n    {\n      \"userId\": \"<string>\"\n    },\n    {\n      \"userId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/process/edit"
											},
											"response": [
												{
													"id": "00160d78-4b32-411d-9d8a-61d728ba5343",
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"workflowStepRelationId\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"sequence\": \"<integer>\",\n  \"terminatingStep\": \"<boolean>\",\n  \"autoAssignProcessor\": \"<boolean>\",\n  \"workflowId\": \"<string>\",\n  \"fromStepId\": \"<string>\",\n  \"toStepId\": \"<string>\",\n  \"workflowStepActions\": [\n    {\n      \"workflowStepActionId\": \"<string>\",\n      \"actionType\": 2,\n      \"workflowCommandId\": \"<string>\",\n      \"workflowStepRelationId\": \"<string>\"\n    },\n    {\n      \"workflowStepActionId\": \"<string>\",\n      \"actionType\": 0,\n      \"workflowCommandId\": \"<string>\",\n      \"workflowStepRelationId\": \"<string>\"\n    }\n  ],\n  \"stepApprovers\": [\n    {\n      \"userId\": \"<string>\"\n    },\n    {\n      \"userId\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/process/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "3d75ca65-2b68-4f1b-9f43-e1b5245ffc46",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"workflowStepRelationId\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"sequence\": \"<integer>\",\n  \"terminatingStep\": \"<boolean>\",\n  \"autoAssignProcessor\": \"<boolean>\",\n  \"workflowId\": \"<string>\",\n  \"fromStepId\": \"<string>\",\n  \"toStepId\": \"<string>\",\n  \"workflowStepActions\": [\n    {\n      \"workflowStepActionId\": \"<string>\",\n      \"actionType\": 2,\n      \"workflowCommandId\": \"<string>\",\n      \"workflowStepRelationId\": \"<string>\"\n    },\n    {\n      \"workflowStepActionId\": \"<string>\",\n      \"actionType\": 0,\n      \"workflowCommandId\": \"<string>\",\n      \"workflowStepRelationId\": \"<string>\"\n    }\n  ],\n  \"stepApprovers\": [\n    {\n      \"userId\": \"<string>\"\n    },\n    {\n      \"userId\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/process/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Update Process Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5e8cd4b5-ccea-454b-b82a-a6db055ab5c1",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "cecc8522-73ec-400c-8dd6-0f8a62248e05",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workflowStepRelationId\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"sequence\": \"<integer>\",\n  \"terminatingStep\": \"<boolean>\",\n  \"autoAssignProcessor\": \"<boolean>\",\n  \"workflowId\": \"<string>\",\n  \"fromStepId\": \"<string>\",\n  \"toStepId\": \"<string>\",\n  \"workflowStepActions\": [\n    {\n      \"workflowStepActionId\": \"<string>\",\n      \"actionType\": 2,\n      \"workflowCommandId\": \"<string>\",\n      \"workflowStepRelationId\": \"<string>\"\n    },\n    {\n      \"workflowStepActionId\": \"<string>\",\n      \"actionType\": 0,\n      \"workflowCommandId\": \"<string>\",\n      \"workflowStepRelationId\": \"<string>\"\n    }\n  ],\n  \"stepApprovers\": [\n    {\n      \"userId\": \"<string>\"\n    },\n    {\n      \"userId\": \"<string>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/process/edit"
											},
											"response": [
												{
													"id": "0768afe1-56f1-454a-85e8-e2f0c232637d",
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"workflowStepRelationId\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"sequence\": \"<integer>\",\n  \"terminatingStep\": \"<boolean>\",\n  \"autoAssignProcessor\": \"<boolean>\",\n  \"workflowId\": \"<string>\",\n  \"fromStepId\": \"<string>\",\n  \"toStepId\": \"<string>\",\n  \"workflowStepActions\": [\n    {\n      \"workflowStepActionId\": \"<string>\",\n      \"actionType\": 2,\n      \"workflowCommandId\": \"<string>\",\n      \"workflowStepRelationId\": \"<string>\"\n    },\n    {\n      \"workflowStepActionId\": \"<string>\",\n      \"actionType\": 0,\n      \"workflowCommandId\": \"<string>\",\n      \"workflowStepRelationId\": \"<string>\"\n    }\n  ],\n  \"stepApprovers\": [\n    {\n      \"userId\": \"<string>\"\n    },\n    {\n      \"userId\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/process/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "d1749265-026a-4d49-bd24-f73f5def7aea",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"workflowStepRelationId\": \"<string>\",\n  \"duration\": \"<integer>\",\n  \"sequence\": \"<integer>\",\n  \"terminatingStep\": \"<boolean>\",\n  \"autoAssignProcessor\": \"<boolean>\",\n  \"workflowId\": \"<string>\",\n  \"fromStepId\": \"<string>\",\n  \"toStepId\": \"<string>\",\n  \"workflowStepActions\": [\n    {\n      \"workflowStepActionId\": \"<string>\",\n      \"actionType\": 2,\n      \"workflowCommandId\": \"<string>\",\n      \"workflowStepRelationId\": \"<string>\"\n    },\n    {\n      \"workflowStepActionId\": \"<string>\",\n      \"actionType\": 0,\n      \"workflowCommandId\": \"<string>\",\n      \"workflowStepRelationId\": \"<string>\"\n    }\n  ],\n  \"stepApprovers\": [\n    {\n      \"userId\": \"<string>\"\n    },\n    {\n      \"userId\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/process/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "948f721b-df9f-4785-adb6-25cb6a087dc2"
								}
							],
							"id": "cf2c5480-4e00-486e-88a0-11e257583f51"
						},
						{
							"name": "parameter",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Empty fields - Create Workflow Parameter Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c8d33966-1704-469d-aa69-ad46a21a5e3c",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that workflowStepRelationId  is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "7c776d6f-9922-450b-a71c-4e75d0ed6368",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"parameterName\": \"\",\n  \"parameterType\": 3,\n  \"workflowId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/parameter/create"
											},
											"response": [
												{
													"id": "296bc165-d73f-49e2-86f0-12c7f21fef58",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"parameterName\": \"<string>\",\n  \"parameterType\": 3,\n  \"workflowId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/parameter/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "adf9f286-cb6c-45df-94fe-24db1c68f79b",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"parameterName\": \"<string>\",\n  \"parameterType\": 3,\n  \"workflowId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/parameter/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Create Workflow Parameter",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "f0fc0fe3-d9dc-46b0-8c89-de48e7a4840e",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "67e0ce41-e5c5-4df7-93f1-25d432f667a9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"parameterName\": \"<string>\",\n  \"parameterType\": 3,\n  \"workflowId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/parameter/create"
											},
											"response": [
												{
													"id": "bf553cb9-aa77-4347-ae88-26b4c9a29c05",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"parameterName\": \"<string>\",\n  \"parameterType\": 3,\n  \"workflowId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/parameter/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "5c3381fa-1f12-4e61-9e28-d708b8e98461",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"parameterName\": \"<string>\",\n  \"parameterType\": 3,\n  \"workflowId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/parameter/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "2f2a1d86-ca64-419d-808b-c3cda271d99a"
								},
								{
									"name": "remove",
									"item": [
										{
											"name": "No workflowParameterId - Delete Workflow Parameter Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "66d123ef-d530-4754-9cf8-c7bfc642f13b",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that workflowParameterId  is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "0d0873d7-4a8a-48e9-aaaf-63388742acec",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workflowParameterId\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/parameter/remove"
											},
											"response": [
												{
													"id": "b3e5d971-6749-4668-99c1-b7853da83c66",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"workflowParameterId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/parameter/remove"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "09eb2c64-e010-4fee-9a58-1528e2f31540",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"workflowParameterId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/parameter/remove"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "c25505a0-fb07-47fe-8260-3d84cc4c4cd6"
								},
								{
									"name": "list",
									"item": [
										{
											"name": "Anp Workflow Features Manage Parameters Get All Workflow Paramters Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bba72182-b4cf-46fd-9584-2244bf94a813",
														"exec": [
															"pm.collectionVariables.set(\"workflowParameterId\", pm.response.json().data[0].workflowParameterId);\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"\r",
															"pm.test(\"Verify that parameter list is returned\", function () {\r",
															"    pm.expect(responseJSON.data[0].workflowParameterId).to.be.a(\"string\").and.not.be.empty;\r",
															"        pm.expect(responseJSON.data[0].parameterName).to.be.a(\"string\").and.not.be.empty;\r",
															"         pm.expect(responseJSON.data[0].parameterType).to.be.a(\"string\").and.not.be.empty;\r",
															"          pm.expect(responseJSON.data[0].workflowId).to.be.a(\"string\").and.not.be.empty;\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "d948e527-aa3c-4335-8aa9-7ce8880e3c91",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/workflow/parameter/list?workflowId=879f417d-23af-4cd0-586a-08dce3c79c32&pageNumber=1&pageSize=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"workflow",
														"parameter",
														"list"
													],
													"query": [
														{
															"key": "workflowId",
															"value": "879f417d-23af-4cd0-586a-08dce3c79c32",
															"description": "(Required) "
														},
														{
															"key": "pageNumber",
															"value": "1",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "10",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "a296c17b-d038-47dd-9e85-de849a434e4b",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/parameter/list?workflowId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"parameter",
																"list"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "workflowId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "f9cc15ac-616e-4323-b329-2764b4c23d3f",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/parameter/list?workflowId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"parameter",
																"list"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "workflowId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "b2b90887-f592-48c5-865d-13238d60aa2c"
								},
								{
									"name": "{workflowParameterId}",
									"item": [
										{
											"name": "Anp Workflow Features Manage Parameters Get A Workflow Parameter",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c5e33715-b7bb-4c1e-b8fb-ff30c884c208",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"\r",
															"pm.test(\"Verify that workflow parameter  is returned\", function () {\r",
															"    pm.expect(responseJSON.data.workflowParameterId).to.be.a(\"string\").and.not.be.empty;\r",
															"        pm.expect(responseJSON.data.parameterName).to.be.a(\"string\").and.not.be.empty;\r",
															"         pm.expect(responseJSON.data.parameterType).to.be.a(\"string\").and.not.be.empty;\r",
															"          pm.expect(responseJSON.data.workflowId).to.be.a(\"string\").and.not.be.empty;\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "317bca68-78b5-4bec-ab09-54077bf0ccaf",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/workflow/parameter/:workflowParameterId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"workflow",
														"parameter",
														":workflowParameterId"
													],
													"variable": [
														{
															"key": "workflowParameterId",
															"value": "{{workflowParameterId}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "915fc3db-118e-41c7-8636-4a5502cff8b7",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/parameter/:workflowParameterId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"parameter",
																":workflowParameterId"
															],
															"variable": [
																{
																	"key": "workflowParameterId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "578e39fc-60de-439b-ab1c-65f14c1d3bac",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/parameter/:workflowParameterId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"parameter",
																":workflowParameterId"
															],
															"variable": [
																{
																	"key": "workflowParameterId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "97d23bbd-86c7-4fbf-883a-8825c2098b33"
								},
								{
									"name": "types",
									"item": [
										{
											"name": "Anp Workflow Features Manage Parameters Get Parameter Types Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4c91bc50-d88a-4700-b89e-2716362dc628",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"\r",
															"pm.test(\"Verify that workflow parameter  is returned\", function () {\r",
															"    pm.expect(responseJSON.Int).to.be.a(\"number\");\r",
															"        pm.expect(responseJSON.String).to.be.a(\"number\");\r",
															"         pm.expect(responseJSON.List).to.be.a(\"number\");\r",
															"          pm.expect(responseJSON.Guid).to.be.a(\"number\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "ab840609-8e10-4521-86f9-808e4c61b8f6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": "{{baseUrl}}/api/workflow/parameter/types"
											},
											"response": [
												{
													"id": "67f327f0-b7d5-4da9-b9f9-17e16fa135c0",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": "{{baseUrl}}/api/workflow/parameter/types"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "4a4625ae-14cb-4446-a788-37d6f9aba727",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": "{{baseUrl}}/api/workflow/parameter/types"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "c48efaa9-47ed-438b-b658-7157b4fada11"
								},
								{
									"name": "edit",
									"item": [
										{
											"name": "No workflowParameterId - Update Workflow Paramter Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "99471a08-d8af-47f8-8be1-43b826398cf0",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that workflowParameterId  is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "4d4409a7-ece3-49db-a93b-638ce97a5742",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workflowParameterId\": \"\",\n  \"parameterName\": \"<string>\",\n  \"parameterType\": 3,\n  \"workflowId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/parameter/edit"
											},
											"response": [
												{
													"id": "6833524d-7620-4f5a-8154-574e5d70857c",
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"workflowParameterId\": \"<string>\",\n  \"parameterName\": \"<string>\",\n  \"parameterType\": 3,\n  \"workflowId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/parameter/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "89d32246-e587-418a-a663-6871f62bb63c",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"workflowParameterId\": \"<string>\",\n  \"parameterName\": \"<string>\",\n  \"parameterType\": 3,\n  \"workflowId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/parameter/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "f0b4896e-1e81-4797-a2b6-d2645e6291e7"
								}
							],
							"id": "fbb59902-ec88-4e58-abee-8ecbef9d25f3"
						},
						{
							"name": "command",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Empty fields - Create Command Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0522723c-2b1c-41f3-be79-c6742b53733a",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that workflownId  is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "fea573f5-7679-4e8e-82a1-f72cba063750",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"descriptions\": \"\",\n  \"queryCommand\": \"\",\n  \"className\": \"\",\n  \"methodName\": \"\",\n  \"commandType\": \"\",\n  \"actionType\": \"\",\n  \"workflowId\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/command/create"
											},
											"response": [
												{
													"id": "978b1172-c95b-45d8-9279-dd54dc4a7644",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"descriptions\": \"<string>\",\n  \"queryCommand\": \"<string>\",\n  \"className\": \"<string>\",\n  \"methodName\": \"<string>\",\n  \"commandType\": \"<string>\",\n  \"actionType\": \"<string>\",\n  \"workflowId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/command/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "786c2bd6-d387-4390-844e-372e381d3dc5",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"descriptions\": \"<string>\",\n  \"queryCommand\": \"<string>\",\n  \"className\": \"<string>\",\n  \"methodName\": \"<string>\",\n  \"commandType\": \"<string>\",\n  \"actionType\": \"<string>\",\n  \"workflowId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/command/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Create Command Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "22723ed8-730b-4894-85d2-20fa0cfe55df",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "7ab50577-8a75-4a33-bb7c-1e6fefe39521",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"descriptions\": \"<string>\",\n  \"queryCommand\": \"<string>\",\n  \"className\": \"<string>\",\n  \"methodName\": \"<string>\",\n  \"commandType\": \"<string>\",\n  \"actionType\": \"<string>\",\n  \"workflowId\": \"{{workflowId}}\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/command/create"
											},
											"response": [
												{
													"id": "51530775-abb1-4620-9b0f-4baafd47d4d2",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"descriptions\": \"<string>\",\n  \"queryCommand\": \"<string>\",\n  \"className\": \"<string>\",\n  \"methodName\": \"<string>\",\n  \"commandType\": \"<string>\",\n  \"actionType\": \"<string>\",\n  \"workflowId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/command/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "b18910d4-c836-4063-81c6-154959bcb8a1",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"descriptions\": \"<string>\",\n  \"queryCommand\": \"<string>\",\n  \"className\": \"<string>\",\n  \"methodName\": \"<string>\",\n  \"commandType\": \"<string>\",\n  \"actionType\": \"<string>\",\n  \"workflowId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/command/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "0f6b598a-293d-461e-a88d-68f06a4fce52"
								},
								{
									"name": "remove",
									"item": [
										{
											"name": "No workflowCommandId - Delete Command Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5998f0ca-80ce-4f1d-ad88-6adef7b6c620",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that workflowCommandId  is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "1ffcd494-6a8a-4a61-9b04-ba8c7a2385a8",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workflowCommandId\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/command/remove"
											},
											"response": [
												{
													"id": "e2e53e14-10ac-4ff8-9b39-34b42b1cb9ee",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"workflowCommandId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/command/remove"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "0353e854-0358-4032-8609-a8fda18634d4",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"workflowCommandId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/command/remove"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "8d35166f-c298-4405-b17a-4f785edf76e2"
								},
								{
									"name": "commands",
									"item": [
										{
											"name": "Anp Workflow Features Manage Command Get All Commands Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1e40dbbe-a11c-47b5-8ce4-2384e7e7a00e",
														"exec": [
															"pm.collectionVariables.set(\"workflowCommandId\", pm.response.json().data[0].workflowCommandId);\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"\r",
															"pm.test(\"Verify that commands are returned\", function () {\r",
															"    pm.expect(responseJSON.data[0].workflowCommandId).to.be.a(\"string\").and.not.be.empty;\r",
															"        pm.expect(responseJSON.data[0].descriptions).to.be.a(\"string\").and.not.be.empty;\r",
															"         pm.expect(responseJSON.data[0].queryCommand).to.be.a(\"string\").and.not.be.empty;\r",
															"          pm.expect(responseJSON.data[0].className).to.be.a(\"string\").and.not.be.empty;\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "789c2d55-8725-4557-8a8c-198b75b7ecff",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/workflow/commands?workflowId=879f417d-23af-4cd0-586a-08dce3c79c32&pageNumber=1&pageSize=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"workflow",
														"commands"
													],
													"query": [
														{
															"key": "workflowId",
															"value": "879f417d-23af-4cd0-586a-08dce3c79c32",
															"description": "(Required) "
														},
														{
															"key": "pageNumber",
															"value": "1",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "10",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "e6c6f0bb-1c77-4fdb-b857-98238fb7a86d",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/commands?workflowId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"commands"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "workflowId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "03b209bf-c639-45ba-ad46-8da46860c15a",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/commands?workflowId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"commands"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "workflowId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "562673cf-2b7f-4952-8999-24051ab8a02e"
								},
								{
									"name": "{commandId}",
									"item": [
										{
											"name": "Anp Workflow Features Manage Command Get A Command Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "247dd1ba-636b-4052-840e-7ee970a0640c",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"\r",
															"pm.test(\"Verify that workflowCommand is returned\", function () {\r",
															"    pm.expect(responseJSON.data.workflowCommandId).to.be.a(\"string\").and.not.be.empty;\r",
															"        pm.expect(responseJSON.data.descriptions).to.be.a(\"string\").and.not.be.empty;\r",
															"         pm.expect(responseJSON.data.queryCommand).to.be.a(\"string\").and.not.be.empty;\r",
															"          pm.expect(responseJSON.data.className).to.be.a(\"string\").and.not.be.empty;\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "90dc46f7-771e-4391-8130-443c0af66391",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/workflow/command/:commandId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"workflow",
														"command",
														":commandId"
													],
													"variable": [
														{
															"key": "commandId",
															"value": "{{workflowCommandId}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "88b706cb-816b-4f1a-adb4-6bec818a8fd9",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/command/:commandId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"command",
																":commandId"
															],
															"variable": [
																{
																	"key": "commandId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "65baf99f-7d2f-4b38-83cd-5cec11369de7",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/workflow/command/:commandId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"workflow",
																"command",
																":commandId"
															],
															"variable": [
																{
																	"key": "commandId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "73fb4d71-08ac-49a0-9454-62f977b9b681"
								},
								{
									"name": "edit",
									"item": [
										{
											"name": "No workflowCommandId - Update Command Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5675deb3-c6ab-459b-afc1-14f0ba29fb2f",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that workflowCommandId  is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "f88cd8ba-2ea8-443d-b134-cf87987af76d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"workflowCommandId\": \"\",\n  \"descriptions\": \"\",\n  \"queryCommand\": \"<string>\",\n  \"className\": \"<string>\",\n  \"methodName\": \"<string>\",\n  \"commandType\": \"<string>\",\n  \"actionType\": \"<string>\",\n  \"workflowId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/workflow/command/edit"
											},
											"response": [
												{
													"id": "1cc0b2e4-9a2e-4730-b4ae-d096f530cb0c",
													"name": "Success",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"workflowCommandId\": \"<string>\",\n  \"descriptions\": \"<string>\",\n  \"queryCommand\": \"<string>\",\n  \"className\": \"<string>\",\n  \"methodName\": \"<string>\",\n  \"commandType\": \"<string>\",\n  \"actionType\": \"<string>\",\n  \"workflowId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/command/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "038916ed-c331-4ba6-bfe2-a9963f5af6ec",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"workflowCommandId\": \"<string>\",\n  \"descriptions\": \"<string>\",\n  \"queryCommand\": \"<string>\",\n  \"className\": \"<string>\",\n  \"methodName\": \"<string>\",\n  \"commandType\": \"<string>\",\n  \"actionType\": \"<string>\",\n  \"workflowId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/workflow/command/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "d9ab0c13-ef8b-40f6-998a-549a80c7a120"
								}
							],
							"id": "9bfe935d-de15-4600-a2f3-e6449ce83d6f"
						}
					],
					"id": "e4b42d9f-561c-4d74-a2af-f56504f6afa1"
				},
				{
					"name": "lookup",
					"item": [
						{
							"name": "create",
							"item": [
								{
									"name": "ANP Web Api Features Lookup Create Lookup Endpoint1",
									"id": "e9337fec-f553-4cd5-bdd7-98e4295e2056",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"lookupId\": \"<string>\",\n  \"lookupName\": \"<string>\",\n  \"lookupValue\": \"<string>\",\n  \"lookupType\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/lookup/create"
									},
									"response": [
										{
											"id": "c2d17e8c-354a-433a-92aa-92f1c2686119",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"lookupId\": \"<string>\",\n  \"lookupName\": \"<string>\",\n  \"lookupValue\": \"<string>\",\n  \"lookupType\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/lookup/create"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "1b338457-0c47-4771-8186-c57dec8daa24",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"lookupId\": \"<string>\",\n  \"lookupName\": \"<string>\",\n  \"lookupValue\": \"<string>\",\n  \"lookupType\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/lookup/create"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "cbfaabcf-2b4b-4150-9a88-37c5592dd38e"
						},
						{
							"name": "edit",
							"item": [
								{
									"name": "ANP Web Api Features Lookup Create Lookup Endpoint2",
									"id": "8dba287a-c2ce-424e-b1c8-28ac35c6f41b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"lookupId\": \"<string>\",\n  \"lookupName\": \"<string>\",\n  \"lookupValue\": \"<string>\",\n  \"lookupType\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/lookup/edit"
									},
									"response": [
										{
											"id": "ff1ed59a-d734-45f0-abf8-b1201b93dfad",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"lookupId\": \"<string>\",\n  \"lookupName\": \"<string>\",\n  \"lookupValue\": \"<string>\",\n  \"lookupType\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/lookup/edit"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "9da09c82-90c6-4740-aead-94f22334618d",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"lookupId\": \"<string>\",\n  \"lookupName\": \"<string>\",\n  \"lookupValue\": \"<string>\",\n  \"lookupType\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/lookup/edit"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "36230ebb-0925-4138-83db-19e630e04790"
						},
						{
							"name": "remove",
							"item": [
								{
									"name": "ANP Web Api Features Lookup Delete Lookup Endpoint",
									"id": "bc80badb-1cd7-49cf-853e-551874b472eb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/lookup/remove"
									},
									"response": [
										{
											"id": "a0337f06-7821-4c4b-8b57-8b2d372a77dd",
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/lookup/remove"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"id\": \"<string>\",\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "17d65aea-fef3-42f4-816b-b7e66099b3e9",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/lookup/remove"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "16258c4f-99ad-4fa1-b4bf-0373adc8a338"
						},
						{
							"name": "Lookup",
							"item": [
								{
									"name": "ANP Web Api Features Lookup Get All Lookup Endpoint",
									"id": "9d99fcf8-993c-4310-bc60-ae6c28d3b4c7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/lookup/Lookup?pageNumber=1&pageSize=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"lookup",
												"Lookup"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "1",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "10",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "bdaa76bb-c3fa-41c5-8939-4a17cd18bd14",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/lookup/Lookup?pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"lookup",
														"Lookup"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"pageNumber\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"totalRecords\": \"<integer>\",\n  \"data\": [\n    {\n      \"lookupId\": \"<string>\",\n      \"lookupName\": \"<string>\",\n      \"lookupValue\": \"<string>\",\n      \"lookupType\": \"<string>\"\n    },\n    {\n      \"lookupId\": \"<string>\",\n      \"lookupName\": \"<string>\",\n      \"lookupValue\": \"<string>\",\n      \"lookupType\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "252a2773-9247-4c39-a6c5-76c2649e56c6",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/lookup/Lookup?pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"lookup",
														"Lookup"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "a54f371a-fcea-4252-b8d3-8af02d7e46b6"
						},
						{
							"name": "lookups",
							"item": [
								{
									"name": "{Id}",
									"item": [
										{
											"name": "ANP Web Api Features Lookup Get A Lookup Endpoint",
											"id": "79970389-bb31-4856-a0e9-10f907795a01",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/lookup/lookups/:Id?lookupId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"lookup",
														"lookups",
														":Id"
													],
													"query": [
														{
															"key": "lookupId",
															"value": "<string>",
															"description": "(Required) "
														}
													],
													"variable": [
														{
															"id": "52c40575-ffd7-4134-a5bf-a40aa705b7a6",
															"key": "Id"
														},
														{
															"id": "505da482-715e-4d09-94a0-6997d4044e8a",
															"key": "id",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "efb78ea6-1fa8-4253-8f25-b1d289c82264",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/lookup/lookups/:Id?lookupId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"lookup",
																"lookups",
																":Id"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "lookupId",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "Id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"lookupId\": \"<string>\",\n    \"lookupName\": \"<string>\",\n    \"lookupValue\": \"<string>\",\n    \"lookupType\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "7457d647-e58e-4f81-8177-b18035c0e682",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/lookup/lookups/:Id?lookupId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"lookup",
																"lookups",
																":Id"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "lookupId",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "Id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "1cca594a-6afc-44db-b0b7-1e0e887c116c"
								}
							],
							"id": "44a75c15-b38e-406e-94bd-a5030cbab765"
						},
						{
							"name": "{lookupType}",
							"item": [
								{
									"name": "ANP Web Api Features Lookup Get Lookup By Type",
									"id": "598572cd-30a6-4181-81e3-ac05e206e0c3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/lookup/:lookupType",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"lookup",
												":lookupType"
											],
											"variable": [
												{
													"id": "a9da1c8b-0515-44cf-af97-18c79cbaed81",
													"key": "lookupType",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "7e0fcf2a-532f-468b-8b2b-c3e5593f10ef",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/lookup/:lookupType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"lookup",
														":lookupType"
													],
													"variable": [
														{
															"key": "lookupType"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": [\n    {\n      \"lookupId\": \"<string>\",\n      \"lookupName\": \"<string>\",\n      \"lookupValue\": \"<string>\",\n      \"lookupType\": \"<string>\"\n    },\n    {\n      \"lookupId\": \"<string>\",\n      \"lookupName\": \"<string>\",\n      \"lookupValue\": \"<string>\",\n      \"lookupType\": \"<string>\"\n    }\n  ],\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "4a7d830f-bec3-4850-94b2-262ea56b4078",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/lookup/:lookupType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"lookup",
														":lookupType"
													],
													"variable": [
														{
															"key": "lookupType"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "78d7b14b-ef90-4834-9414-42a5b72ff831"
						}
					],
					"id": "156e3049-7bb0-4e54-b91e-8b83da27b60b"
				},
				{
					"name": "goods",
					"item": [
						{
							"name": "supplier",
							"item": [
								{
									"name": "tags",
									"item": [
										{
											"name": "{supplierId}",
											"item": [
												{
													"name": "Success - Get Supplier Tags",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "ccf28832-1d6a-459f-be65-fb2809eb21b0",
																"exec": [
																	"pm.collectionVariables.set(\"tagId1\", pm.response.json().data[0].tagId);\r",
																	"pm.collectionVariables.set(\"tagId2\", pm.response.json().data[1].tagId);\r",
																	"\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"var responseJSON = pm.response.json(); \r",
																	"\r",
																	"pm.test(\"Verify that supplier tags are returned\", function () {\r",
																	"\r",
																	"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
																	"    pm.expect(responseJSON.data[0].tagId).to.be.a(\"string\").and.not.empty;\r",
																	"    pm.expect(responseJSON.data[0].tagName).to.be.a(\"string\").and.not.empty;\r",
																	"    pm.expect(responseJSON.data[0].companyId).to.be.a(\"string\").and.not.empty;\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "de54faca-d9b9-4ff5-977b-1b6664a65e7a",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{bearerToken}}"
															}
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/goods/supplier/tags/:supplierId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"goods",
																"supplier",
																"tags",
																":supplierId"
															],
															"variable": [
																{
																	"key": "supplierId",
																	"value": "{{supplierId}}",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"id": "8e14f28d-947d-4deb-8c42-9a5acda45ec3",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/goods/supplier/tags/:supplierId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"goods",
																		"supplier",
																		"tags",
																		":supplierId"
																	],
																	"variable": [
																		{
																			"key": "supplierId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "ffc3d401-4a24-4026-8e9f-6c3bc271239d",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/goods/supplier/tags/:supplierId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"goods",
																		"supplier",
																		"tags",
																		":supplierId"
																	],
																	"variable": [
																		{
																			"key": "supplierId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												}
											],
											"id": "0e29c8ea-7b1a-4ae6-9b71-750d9efa997c"
										}
									],
									"id": "209b652f-ae0e-4e8a-bdee-ca55d61a0b96"
								}
							],
							"id": "b45a2095-0282-4c3c-845c-17ceab66310d"
						},
						{
							"name": "create",
							"item": [
								{
									"name": "Anp Goods Services Features Create Create Product Endpoint1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3f4bf5a4-2d6a-4daf-a77d-d8a6e4d9553c",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var data = responseJSON.data;\r",
													"\r",
													"pm.test(\"Verify that goods is created successfully\", function () {\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(data.message).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(data.id).to.be.a(\"string\").and.not.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "1389292b-029a-49d4-a483-992eacbad876",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \n    \"availability\":6,\n\"brand\":\"Film\",\n\"categoryId\":\"1c21b2e3-8d22-4d9a-ea86-08dd033c624c\",\n\"certification\":\"Cert 1\",\n\"comment\":\"\",\n\"currency\": \"USD\",\n\"description\":\"\",\n\"distributionMechanism\":\"Mechanism 1\",\n\"globalPrice\": 850,\n\"isTaxInclusive\":false,\n\"location\":\"New York\",\n\"model\":\"45455665\",\n\"price\":1000,\n\"productLine\":\"Film\",\n\"productName\":\"Film\",\n\"productType\":0,\n\"productionCountry\":\"Country 1\",\n\"quantity\":4,\n\"serialNumber\":\"344556\",\n\"status\": \"Publish\",\n\"tagIds\": [\"{{tagId1}}\"],\n\"tax\": 3,\n\"warrantType\": \"Type 1\",\n\"warrantyDuration\": 1\n} //frontend payload \n\n//  {\n//  // \"productId\": \"string\",\n//   \"description\": \"Factory safeties\",\n//   \"productName\": \"{{$randomProduct}}\",\n//   \"dimension\": \"56\",\n//   \"serviceSource\": \"string\",\n//   \"price\": {{$randomPrice}},\n//   \"quantity\": 10,\n//   \"createdDate\": \"2025-01-21T13:09:39.325Z\",\n//   \"companyId\": \"{{supplierId}}\",\n//   \"categoryId\": \"57b3ec6c-8741-4ac4-8576-08dd1ba9c97f\",\n//   \"location\": \"New york\",\n//   \"globalPrice\": {{$randomPrice}},\n//   \"status\": \"publish\",\n//   \"productType\": 1,\n//   \"brand\": \"{{$randomCompanyName}}\",\n//   \"serialNumber\": \"123443\",\n//   \"certification\": \"Cert 1\",\n//   \"productLine\": \"Samsung\",\n//   \"warrantyDuration\": 1,\n//   \"warrantType\": \"Type 1\",\n//   \"availability\": 10,\n//   \"distributionMechanism\": \"Mechanism 1\",\n//   \"comment\": \"string\",\n//   \"model\": \"423323\",\n//   \"productionCountry\": \"USA\",\n//   \"currency\": \"USD\",\n//   \"tagIds\": [\n//     \"{{tagId1}}\",\n//     \"{{tagId2}}\"\n//   ],\n//   \"tax\": 2,\n//   \"isTaxInclusive\": false\n// } //swagger payload\n\n// {\n//  // \"productId\": \"<string>\",\n//   \"description\": \"Factory safeties\",\n//   \"productName\": \"{{$randomProduct}}\",\n//   \"price\": \"{{$randomPrice}}\",\n//   \"quantity\": \"15\",\n//   \"createdDate\": \"2025-01-21\",\n//   \"companyId\": \"{{supplierId}}\",\n//   \"categoryId\": \"57b3ec6c-8741-4ac4-8576-08dd1ba9c97f\",\n//   \"location\": \"New york\",\n//   \"globalPrice\": \"{{$randomPrice}}\",\n//   \"status\": \"<string>\",\n//   \"productType\": 0,\n//   \"brand\": \"{{$randomCompanyName}}\",\n//   \"serialNumber\": \"34756434566\",\n//   \"certification\": \"Cert 1\",\n//   \"productLine\": \"Safety\",\n//   \"warrantyDuration\": \"1\",\n//   \"warrantType\": \"Type 1\",\n//   \"availability\": \"15\",\n//   \"distributionMechanism\": \"Mechanism 1\",\n//   \"comment\": \"<string>\",\n//   \"model\": \"576787877\",\n//   \"productionCountry\": \"USA\",\n//   \"currency\": \"USD\",\n//   \"tagIds\": [\n//     \"{{tagId1}}\",//\"fd9ac3bd-0cb4-485a-5d7c-08dd28d7f704\",\n//     \"{{tagId2}}\"//\"06e8eebe-cff5-4866-5d7d-08dd28d7f704\"\n//   ],\n//   \"tax\": \"2\",\n//   \"isTaxInclusive\": false\n// }\n//",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/goods/create"
									},
									"response": [
										{
											"id": "a5069b3d-bf6b-470d-9c96-79d856703330",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"productId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"productName\": \"<string>\",\n  \"price\": \"<number>\",\n  \"quantity\": \"<integer>\",\n  \"createdDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\",\n  \"categoryId\": \"<string>\",\n  \"location\": \"<string>\",\n  \"globalPrice\": \"<number>\",\n  \"status\": \"<string>\",\n  \"productType\": 0,\n  \"brand\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"certification\": \"<string>\",\n  \"productLine\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantType\": \"<string>\",\n  \"availability\": \"<integer>\",\n  \"distributionMechanism\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"model\": \"<string>\",\n  \"productionCountry\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"tagIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tax\": \"<number>\",\n  \"isTaxInclusive\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/create"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "c053558f-10c4-48b7-8445-76054c4de30f",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"productId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"productName\": \"<string>\",\n  \"price\": \"<number>\",\n  \"quantity\": \"<integer>\",\n  \"createdDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\",\n  \"categoryId\": \"<string>\",\n  \"location\": \"<string>\",\n  \"globalPrice\": \"<number>\",\n  \"status\": \"<string>\",\n  \"productType\": 0,\n  \"brand\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"certification\": \"<string>\",\n  \"productLine\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantType\": \"<string>\",\n  \"availability\": \"<integer>\",\n  \"distributionMechanism\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"model\": \"<string>\",\n  \"productionCountry\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"tagIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tax\": \"<number>\",\n  \"isTaxInclusive\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/create"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Empty fields - Create Product",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "71c8be79-04e6-481d-90ed-10f46d95e4bf",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var errors = responseJSON.errors;\r",
													"\r",
													"pm.test(\"Verify that mandatory fields are required\", function () {\r",
													"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
													"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "eecd80ff-e8ed-423b-b983-cdf59e012149",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n // \"productId\": \"<string>\",\n  \"description\": \"\",\n  \"productName\": \"\",\n  \"price\": \"\",\n  \"quantity\": \"\",\n  \"createdDate\": \"\",\n  \"companyId\": \"\",\n  \"categoryId\": \"\",\n  \"location\": \"\",\n  \"globalPrice\": \"\",\n  \"status\": \"\",\n  \"productType\": 0,\n  \"brand\": \"\",\n  \"serialNumber\": \"<string>\",\n  \"certification\": \"<string>\",\n  \"productLine\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantType\": \"<string>\",\n  \"availability\": \"<integer>\",\n  \"distributionMechanism\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"model\": \"<string>\",\n  \"productionCountry\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"tagIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tax\": \"<number>\",\n  \"isTaxInclusive\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/goods/create"
									},
									"response": [
										{
											"id": "d7282ffc-6625-43dc-8113-4393b3b22dc7",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"productId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"productName\": \"<string>\",\n  \"price\": \"<number>\",\n  \"quantity\": \"<integer>\",\n  \"createdDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\",\n  \"categoryId\": \"<string>\",\n  \"location\": \"<string>\",\n  \"globalPrice\": \"<number>\",\n  \"status\": \"<string>\",\n  \"productType\": 0,\n  \"brand\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"certification\": \"<string>\",\n  \"productLine\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantType\": \"<string>\",\n  \"availability\": \"<integer>\",\n  \"distributionMechanism\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"model\": \"<string>\",\n  \"productionCountry\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"tagIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tax\": \"<number>\",\n  \"isTaxInclusive\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/create"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "25e8b950-1d2d-4ef1-af29-f2d005fc54c4",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"productId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"productName\": \"<string>\",\n  \"price\": \"<number>\",\n  \"quantity\": \"<integer>\",\n  \"createdDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\",\n  \"categoryId\": \"<string>\",\n  \"location\": \"<string>\",\n  \"globalPrice\": \"<number>\",\n  \"status\": \"<string>\",\n  \"productType\": 0,\n  \"brand\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"certification\": \"<string>\",\n  \"productLine\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantType\": \"<string>\",\n  \"availability\": \"<integer>\",\n  \"distributionMechanism\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"model\": \"<string>\",\n  \"productionCountry\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"tagIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tax\": \"<number>\",\n  \"isTaxInclusive\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/create"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No auth - Create Product",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bbcc6712-15b2-429d-920a-bd180a311744",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2812bef8-15ef-40da-8036-4d276da8babe",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"productId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"productName\": \"<string>\",\n  \"price\": \"<number>\",\n  \"quantity\": \"<integer>\",\n  \"createdDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\",\n  \"categoryId\": \"<string>\",\n  \"location\": \"<string>\",\n  \"globalPrice\": \"<number>\",\n  \"status\": \"<string>\",\n  \"productType\": 0,\n  \"brand\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"certification\": \"<string>\",\n  \"productLine\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantType\": \"<string>\",\n  \"availability\": \"<integer>\",\n  \"distributionMechanism\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"model\": \"<string>\",\n  \"productionCountry\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"tagIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tax\": \"<number>\",\n  \"isTaxInclusive\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/goods/create"
									},
									"response": [
										{
											"id": "4f57ef1e-c056-4dc2-ae27-27f559a34742",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"productId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"productName\": \"<string>\",\n  \"price\": \"<number>\",\n  \"quantity\": \"<integer>\",\n  \"createdDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\",\n  \"categoryId\": \"<string>\",\n  \"location\": \"<string>\",\n  \"globalPrice\": \"<number>\",\n  \"status\": \"<string>\",\n  \"productType\": 0,\n  \"brand\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"certification\": \"<string>\",\n  \"productLine\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantType\": \"<string>\",\n  \"availability\": \"<integer>\",\n  \"distributionMechanism\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"model\": \"<string>\",\n  \"productionCountry\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"tagIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tax\": \"<number>\",\n  \"isTaxInclusive\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/create"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "26de29e1-8dce-4360-b85b-c21d42b47fd2",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"productId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"productName\": \"<string>\",\n  \"price\": \"<number>\",\n  \"quantity\": \"<integer>\",\n  \"createdDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\",\n  \"categoryId\": \"<string>\",\n  \"location\": \"<string>\",\n  \"globalPrice\": \"<number>\",\n  \"status\": \"<string>\",\n  \"productType\": 0,\n  \"brand\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"certification\": \"<string>\",\n  \"productLine\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantType\": \"<string>\",\n  \"availability\": \"<integer>\",\n  \"distributionMechanism\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"model\": \"<string>\",\n  \"productionCountry\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"tagIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tax\": \"<number>\",\n  \"isTaxInclusive\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/create"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "0218a3c7-a787-4060-ba6f-7f8aa4c4e538"
						},
						{
							"name": "list",
							"item": [
								{
									"name": "Anp Goods Services Features Create Get All Products Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e70e1b2b-a29c-4c64-a215-d15cc261bde0",
												"exec": [
													"pm.collectionVariables.set(\"productId\", pm.response.json().data[0].productId);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Verify that products are returned\", function () {\r",
													"    pm.expect(pm.response.json().data[0].productId).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(pm.response.json().data[0].productName).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(pm.response.json().data[0].price).to.be.a(\"number\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "c95dcf2d-5f72-444d-a40e-2f3d48e64585",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/goods/list?sortOrder=0&productType=0&pageNumber=1&pageSize=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"goods",
												"list"
											],
											"query": [
												{
													"key": "categoryId",
													"value": "90413696-a73a-4035-de6d-08dd14195a47",
													"description": "worked",
													"disabled": true
												},
												{
													"key": "supplierId",
													"value": "<string>",
													"disabled": true
												},
												{
													"key": "industryId",
													"value": "<string>",
													"disabled": true
												},
												{
													"key": "startDate",
													"value": "2025-01-01",
													"description": "worked",
													"disabled": true
												},
												{
													"key": "endDate",
													"value": "2025-01-28",
													"description": "worked",
													"disabled": true
												},
												{
													"key": "tagIds",
													"value": "ed876256-5746-4123-2e45-08dd3c72e2cf",
													"disabled": true
												},
												{
													"key": "tagIds",
													"value": "3bc30e49-d403-4a15-90b1-08dd370c3ffd",
													"description": "worked",
													"disabled": true
												},
												{
													"key": "sortOrder",
													"value": "0",
													"description": "01234"
												},
												{
													"key": "productType",
													"value": "0",
													"description": "Working"
												},
												{
													"key": "country",
													"value": "New York",
													"disabled": true
												},
												{
													"key": "productName",
													"value": "UltraTech Pro Laptop",
													"description": "Working",
													"disabled": true
												},
												{
													"key": "pageNumber",
													"value": "1",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "10",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "d54cdeba-606f-468c-aea8-a8708316d782",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/goods/list?categoryId=<string>&supplierId=<string>&industryId=<string>&startDate=<dateTime>&endDate=<dateTime>&tagIds=<string>&sortOrder=4&productType=1&country=<string>&productName=<string>&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"goods",
														"list"
													],
													"query": [
														{
															"key": "categoryId",
															"value": "<string>"
														},
														{
															"key": "supplierId",
															"value": "<string>"
														},
														{
															"key": "industryId",
															"value": "<string>"
														},
														{
															"key": "startDate",
															"value": "<dateTime>"
														},
														{
															"key": "endDate",
															"value": "<dateTime>"
														},
														{
															"key": "tagIds",
															"value": "<string>"
														},
														{
															"key": "sortOrder",
															"value": "4"
														},
														{
															"key": "productType",
															"value": "1"
														},
														{
															"key": "country",
															"value": "<string>"
														},
														{
															"key": "productName",
															"value": "<string>"
														},
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "50509a84-6bb4-49d4-ad8e-c6ad71327c4f",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/goods/list?categoryId=<string>&supplierId=<string>&industryId=<string>&startDate=<dateTime>&endDate=<dateTime>&tagIds=<string>&sortOrder=4&productType=1&country=<string>&productName=<string>&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"goods",
														"list"
													],
													"query": [
														{
															"key": "categoryId",
															"value": "<string>"
														},
														{
															"key": "supplierId",
															"value": "<string>"
														},
														{
															"key": "industryId",
															"value": "<string>"
														},
														{
															"key": "startDate",
															"value": "<dateTime>"
														},
														{
															"key": "endDate",
															"value": "<dateTime>"
														},
														{
															"key": "tagIds",
															"value": "<string>"
														},
														{
															"key": "sortOrder",
															"value": "4"
														},
														{
															"key": "productType",
															"value": "1"
														},
														{
															"key": "country",
															"value": "<string>"
														},
														{
															"key": "productName",
															"value": "<string>"
														},
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "ed82b894-aa57-4a06-b40a-da07ad69c4fd"
						},
						{
							"name": "edit",
							"item": [
								{
									"name": "Anp Goods Services Features Create Create Product Endpoint2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "124996de-278e-4596-84a5-70e79c0f584b",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Verify that products are returned\", function () {\r",
													"    pm.expect(pm.response.json().data[0].id).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(pm.response.json().data[0].message).to.be.a(\"string\").and.not.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "3c433302-dfad-4277-ab5d-f5866e8d9165",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{  \n      \"productId\": \"{{productId}}\",\n      \"availability\":10,\n\"brand\":\"Bello\",\n\"categoryId\":\"1c21b2e3-8d22-4d9a-ea86-08dd033c624c\",\n   \"companyId\": \"{{supplierId}}\",\n\n\"certification\":\"Cert 1\",\n\"comment\":\"\",\n\"currency\": \"USD\",\n\"description\":\"\",\n\"distributionMechanism\":\"Mechanism 1\",\n\"globalPrice\": 550,\n\"isTaxInclusive\":false,\n\"location\":\"New York\",\n\"model\":\"45455665\",\n\"price\":6000,\n\"productLine\":\"Bello\",\n\"productName\":\"Safety\",\n\"productType\":0,\n\"productionCountry\":\"Country 1\",\n\"quantity\":4,\n\"serialNumber\":\"344556\",\n\"status\": \"Publish\",\n\"tagIds\": [\"2c663509-91c4-43e7-eeda-08dd39473a2e\"],\n\"tax\": 3,\n\"warrantType\": \"Type 1\",\n\"warrantyDuration\": 1\n}\n\n// {\n//   \"productId\": \"<string>\",\n//   \"description\": \"<string>\",\n//   \"productName\": \"<string>\",\n//   \"price\": \"<number>\",\n//   \"quantity\": \"<integer>\",\n//   \"createdDate\": \"<dateTime>\",\n//   \"companyId\": \"<string>\",\n//   \"categoryId\": \"<string>\",\n//   \"location\": \"<string>\",\n//   \"globalPrice\": \"<number>\",\n//   \"status\": \"<string>\",\n//   \"productType\": 0,\n//   \"brand\": \"<string>\",\n//   \"serialNumber\": \"<string>\",\n//   \"certification\": \"<string>\",\n//   \"productLine\": \"<string>\",\n//   \"warrantyDuration\": \"<integer>\",\n//   \"warrantType\": \"<string>\",\n//   \"availability\": \"<integer>\",\n//   \"distributionMechanism\": \"<string>\",\n//   \"comment\": \"<string>\",\n//   \"model\": \"<string>\",\n//   \"productionCountry\": \"<string>\",\n//   \"currency\": \"<string>\",\n//   \"tagIds\": [\n//     \"<string>\",\n//     \"<string>\"\n//   ],\n//   \"tax\": \"<number>\",\n//   \"isTaxInclusive\": \"<boolean>\"\n// }",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/goods/edit"
									},
									"response": [
										{
											"id": "f8e22735-4ba5-40e1-857e-9a2e84ee84aa",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"productId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"productName\": \"<string>\",\n  \"price\": \"<number>\",\n  \"quantity\": \"<integer>\",\n  \"createdDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\",\n  \"categoryId\": \"<string>\",\n  \"location\": \"<string>\",\n  \"globalPrice\": \"<number>\",\n  \"status\": \"<string>\",\n  \"productType\": 0,\n  \"brand\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"certification\": \"<string>\",\n  \"productLine\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantType\": \"<string>\",\n  \"availability\": \"<integer>\",\n  \"distributionMechanism\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"model\": \"<string>\",\n  \"productionCountry\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"tagIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tax\": \"<number>\",\n  \"isTaxInclusive\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/edit"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "657d9da0-f69c-471c-98a2-63ac812a5d62",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"productId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"productName\": \"<string>\",\n  \"price\": \"<number>\",\n  \"quantity\": \"<integer>\",\n  \"createdDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\",\n  \"categoryId\": \"<string>\",\n  \"location\": \"<string>\",\n  \"globalPrice\": \"<number>\",\n  \"status\": \"<string>\",\n  \"productType\": 0,\n  \"brand\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"certification\": \"<string>\",\n  \"productLine\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantType\": \"<string>\",\n  \"availability\": \"<integer>\",\n  \"distributionMechanism\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"model\": \"<string>\",\n  \"productionCountry\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"tagIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tax\": \"<number>\",\n  \"isTaxInclusive\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/edit"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No Product Id - Edit Product",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8a46bdd7-1208-4d74-8390-908dc8cbd5fd",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var errors = responseJSON.errors;\r",
													"\r",
													"pm.test(\"Verify that productId is required\", function () {\r",
													"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
													"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "b88ca990-86e3-4c37-97ef-761cc9db02b0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"productId\": \"\",\n  \"description\": \"<string>\",\n  \"productName\": \"<string>\",\n  \"price\": \"<number>\",\n  \"quantity\": \"<integer>\",\n  \"createdDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\",\n  \"categoryId\": \"<string>\",\n  \"location\": \"<string>\",\n  \"globalPrice\": \"<number>\",\n  \"status\": \"<string>\",\n  \"productType\": 0,\n  \"brand\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"certification\": \"<string>\",\n  \"productLine\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantType\": \"<string>\",\n  \"availability\": \"<integer>\",\n  \"distributionMechanism\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"model\": \"<string>\",\n  \"productionCountry\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"tagIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tax\": \"<number>\",\n  \"isTaxInclusive\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/goods/edit"
									},
									"response": [
										{
											"id": "e8994498-cc8d-4261-99c1-1d236ce4b2be",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"productId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"productName\": \"<string>\",\n  \"price\": \"<number>\",\n  \"quantity\": \"<integer>\",\n  \"createdDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\",\n  \"categoryId\": \"<string>\",\n  \"location\": \"<string>\",\n  \"globalPrice\": \"<number>\",\n  \"status\": \"<string>\",\n  \"productType\": 0,\n  \"brand\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"certification\": \"<string>\",\n  \"productLine\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantType\": \"<string>\",\n  \"availability\": \"<integer>\",\n  \"distributionMechanism\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"model\": \"<string>\",\n  \"productionCountry\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"tagIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tax\": \"<number>\",\n  \"isTaxInclusive\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/edit"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "a218b81f-dfa3-4234-bb70-2537033c5d3f",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"productId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"productName\": \"<string>\",\n  \"price\": \"<number>\",\n  \"quantity\": \"<integer>\",\n  \"createdDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\",\n  \"categoryId\": \"<string>\",\n  \"location\": \"<string>\",\n  \"globalPrice\": \"<number>\",\n  \"status\": \"<string>\",\n  \"productType\": 0,\n  \"brand\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"certification\": \"<string>\",\n  \"productLine\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantType\": \"<string>\",\n  \"availability\": \"<integer>\",\n  \"distributionMechanism\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"model\": \"<string>\",\n  \"productionCountry\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"tagIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tax\": \"<number>\",\n  \"isTaxInclusive\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/edit"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No auth - edit Product",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3eb7cf5c-2c34-4507-97df-de57a8894167",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "e13ceb2e-228b-4eda-bf33-0f795172e76f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"productId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"productName\": \"<string>\",\n  \"price\": \"<number>\",\n  \"quantity\": \"<integer>\",\n  \"createdDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\",\n  \"categoryId\": \"<string>\",\n  \"location\": \"<string>\",\n  \"globalPrice\": \"<number>\",\n  \"status\": \"<string>\",\n  \"productType\": 0,\n  \"brand\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"certification\": \"<string>\",\n  \"productLine\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantType\": \"<string>\",\n  \"availability\": \"<integer>\",\n  \"distributionMechanism\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"model\": \"<string>\",\n  \"productionCountry\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"tagIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tax\": \"<number>\",\n  \"isTaxInclusive\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/goods/edit"
									},
									"response": [
										{
											"id": "4813bdcc-4467-4dbf-9dd3-eacb03306245",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"productId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"productName\": \"<string>\",\n  \"price\": \"<number>\",\n  \"quantity\": \"<integer>\",\n  \"createdDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\",\n  \"categoryId\": \"<string>\",\n  \"location\": \"<string>\",\n  \"globalPrice\": \"<number>\",\n  \"status\": \"<string>\",\n  \"productType\": 0,\n  \"brand\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"certification\": \"<string>\",\n  \"productLine\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantType\": \"<string>\",\n  \"availability\": \"<integer>\",\n  \"distributionMechanism\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"model\": \"<string>\",\n  \"productionCountry\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"tagIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tax\": \"<number>\",\n  \"isTaxInclusive\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/edit"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "687d72be-aab3-45a6-90cb-996fbc2b8bce",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"productId\": \"<string>\",\n  \"description\": \"<string>\",\n  \"productName\": \"<string>\",\n  \"price\": \"<number>\",\n  \"quantity\": \"<integer>\",\n  \"createdDate\": \"<dateTime>\",\n  \"companyId\": \"<string>\",\n  \"categoryId\": \"<string>\",\n  \"location\": \"<string>\",\n  \"globalPrice\": \"<number>\",\n  \"status\": \"<string>\",\n  \"productType\": 0,\n  \"brand\": \"<string>\",\n  \"serialNumber\": \"<string>\",\n  \"certification\": \"<string>\",\n  \"productLine\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantType\": \"<string>\",\n  \"availability\": \"<integer>\",\n  \"distributionMechanism\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"model\": \"<string>\",\n  \"productionCountry\": \"<string>\",\n  \"currency\": \"<string>\",\n  \"tagIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"tax\": \"<number>\",\n  \"isTaxInclusive\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/edit"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "6a8356c0-6a42-484c-a3af-bd9af62c0e37"
						},
						{
							"name": "remove product",
							"item": [
								{
									"name": "No ProductId - Delete Product",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2a785e2a-92d5-48d0-a479-3876cf9e16f3",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json();\r",
													"var errors = responseJSON.errors;\r",
													"\r",
													"pm.test(\"Verify that productId is required\", function () {\r",
													"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
													"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "3b375d88-a1d3-418f-a081-0608df74170b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"productId\": \"\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/goods/remove",
										"description": "Delete Product"
									},
									"response": [
										{
											"id": "68c5b20e-f769-4796-a6f2-b859ab3d393a",
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"productId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/remove"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "6fe381e1-b62c-408f-ba27-903c48cb42b0",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"productId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/remove"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No auth - Delete Product",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b9f3676f-8624-45ac-ba03-72f8dad63cfa",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "1a45c590-6a58-49da-8a43-a424f831b133",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"productId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/goods/remove",
										"description": "Delete Product"
									},
									"response": [
										{
											"id": "18d11db3-1ef7-4e7e-a6f7-8cb7ddc8d208",
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"productId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/remove"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "40c733cc-9af7-4a84-9cf9-30c92c6ae8d2",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"productId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/remove"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "90f8fccf-3c8d-48d8-805e-4d586c8920e7"
						},
						{
							"name": "product",
							"item": [
								{
									"name": "{productId}",
									"item": [
										{
											"name": "Anp Goods Services Features Create Get A Product Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5735e97c-85b2-4a0d-846c-999780958136",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that product is returned\", function () {\r",
															"\r",
															"   // pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(responseJSON.data.productId).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(responseJSON.data.productName).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(responseJSON.data.price).to.be.a(\"number\");\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "61fb8fb6-df2d-4a79-bc63-07398fb3ea83",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/goods/product/:productId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"goods",
														"product",
														":productId"
													],
													"variable": [
														{
															"key": "productId",
															"value": "{{productId}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "55cd2319-9bf8-4c80-ac26-5107963373f1",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/goods/product/:productId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"goods",
																"product",
																":productId"
															],
															"variable": [
																{
																	"key": "productId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "ca9ae382-1eaa-4a26-a98c-b2f92739e0e6",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/goods/product/:productId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"goods",
																"product",
																":productId"
															],
															"variable": [
																{
																	"key": "productId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "4ad922cb-720e-4e95-9997-1a15b6cd6e3e"
								}
							],
							"id": "c7510454-9609-48a6-8945-b99018a24c07"
						},
						{
							"name": "cart",
							"item": [
								{
									"name": "add",
									"item": [
										{
											"name": "Anp Goods Services Features Cart Add Cart Item Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8829db34-caf1-4d2e-96a2-57294db08d92",
														"exec": [
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Verify that item is added to cart returned\", function () {\r",
															"        pm.expect(pm.response.json().isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(pm.response.json().data.id).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(pm.response.json().data.message).to.be.a(\"string\").and.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "be4f29bf-1add-4c3c-8d0e-00fd609a2854",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n // \"orderId\": \"<string>\",\n  \"customerId\": \"{{supplierId}}\",\n  \"itemsList\": [\n    {\n      \"quantity\": \"1\",\n      \"cost\": \"1000\",\n      \"productId\": \"{{productId}}\"\n    }\n    // {\n    //   \"quantity\": \"<integer>\",\n    //   \"cost\": \"<number>\",\n    //   \"productId\": \"<string>\"\n    // }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/cart/add"
											},
											"response": [
												{
													"id": "5af97ece-42c3-4803-a8d9-65caa6e047c2",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"orderId\": \"<string>\",\n  \"customerId\": \"<string>\",\n  \"itemsList\": [\n    {\n      \"quantity\": \"<integer>\",\n      \"cost\": \"<number>\",\n      \"productId\": \"<string>\"\n    },\n    {\n      \"quantity\": \"<integer>\",\n      \"cost\": \"<number>\",\n      \"productId\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/cart/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "32177a61-7721-4f3d-936e-8cfd0f75523a",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"orderId\": \"<string>\",\n  \"customerId\": \"<string>\",\n  \"itemsList\": [\n    {\n      \"quantity\": \"<integer>\",\n      \"cost\": \"<number>\",\n      \"productId\": \"<string>\"\n    },\n    {\n      \"quantity\": \"<integer>\",\n      \"cost\": \"<number>\",\n      \"productId\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/cart/add"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No customerId - Add Cart Item Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8829db34-caf1-4d2e-96a2-57294db08d92",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that customerId is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "c4bcdfea-6399-4d51-9b3d-7b01df852875",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n // \"orderId\": \"<string>\",\n  \"customerId\": \"\",\n  \"itemsList\": [\n    {\n      \"quantity\": \"1\",\n      \"cost\": \"100\",\n      \"productId\": \"{{productId}}\"\n    }\n    // {\n    //   \"quantity\": \"<integer>\",\n    //   \"cost\": \"<number>\",\n    //   \"productId\": \"<string>\"\n    // }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/cart/add"
											},
											"response": [
												{
													"id": "052eabd6-67b0-40fc-b29e-3ee5d7f3fde7",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"orderId\": \"<string>\",\n  \"customerId\": \"<string>\",\n  \"itemsList\": [\n    {\n      \"quantity\": \"<integer>\",\n      \"cost\": \"<number>\",\n      \"productId\": \"<string>\"\n    },\n    {\n      \"quantity\": \"<integer>\",\n      \"cost\": \"<number>\",\n      \"productId\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/cart/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "78e98077-678f-48b3-a31f-50311dcfc1aa",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"orderId\": \"<string>\",\n  \"customerId\": \"<string>\",\n  \"itemsList\": [\n    {\n      \"quantity\": \"<integer>\",\n      \"cost\": \"<number>\",\n      \"productId\": \"<string>\"\n    },\n    {\n      \"quantity\": \"<integer>\",\n      \"cost\": \"<number>\",\n      \"productId\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/cart/add"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No productId - Cart Add Cart Item",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8829db34-caf1-4d2e-96a2-57294db08d92",
														"exec": [
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Verify that productid is returned\", function () {\r",
															"        pm.expect(pm.response.json().isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(pm.response.json().data[0].id).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(pm.response.json().data[0].message).to.be.a(\"string\").and.not.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "52a268df-6302-4869-814f-32499da56649",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n // \"orderId\": \"<string>\",\n  \"customerId\": \"{{supplierId}}\",\n  \"itemsList\": [\n    {\n      \"quantity\": \"\",\n      \"cost\": \"1000\",\n      \"productId\": \"\"\n    }\n    // {\n    //   \"quantity\": \"<integer>\",\n    //   \"cost\": \"<number>\",\n    //   \"productId\": \"<string>\"\n    // }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/cart/add"
											},
											"response": [
												{
													"id": "68a2fd69-c5e8-436c-9f0c-b5f32481feb8",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"orderId\": \"<string>\",\n  \"customerId\": \"<string>\",\n  \"itemsList\": [\n    {\n      \"quantity\": \"<integer>\",\n      \"cost\": \"<number>\",\n      \"productId\": \"<string>\"\n    },\n    {\n      \"quantity\": \"<integer>\",\n      \"cost\": \"<number>\",\n      \"productId\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/cart/add"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "f779c97a-31af-4dcd-8571-67a44ddf5c2c",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"orderId\": \"<string>\",\n  \"customerId\": \"<string>\",\n  \"itemsList\": [\n    {\n      \"quantity\": \"<integer>\",\n      \"cost\": \"<number>\",\n      \"productId\": \"<string>\"\n    },\n    {\n      \"quantity\": \"<integer>\",\n      \"cost\": \"<number>\",\n      \"productId\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/cart/add"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "033f0fa7-dde2-4c92-8c22-7e8a419ff8bc"
								},
								{
									"name": "list",
									"item": [
										{
											"name": "Anp Goods Services Features Cart Get All Carts Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b9eee099-376a-4791-930e-ee4b64dc9783",
														"exec": [
															"pm.collectionVariables.set(\"orderId\", pm.response.json().data[0].orderId);\r",
															"pm.collectionVariables.set(\"itemId\", pm.response.json().data[0].itemId);\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Verify that items in cart are returned\", function () {\r",
															"    pm.expect(pm.response.json().data[0].orderId).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(pm.response.json().data[0].cost).to.be.a(\"number\");\r",
															"        pm.expect(pm.response.json().data[0].quantity).to.be.a(\"number\");\r",
															"                pm.expect(pm.response.json().data[0].itemId).to.be.a(\"string\").and.not.be.empty;\r",
															"\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "db915329-2671-45fb-999d-9da505f97e30",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/goods/cart/list?customerId={{supplierId}}&pageNumber=1&pageSize=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"goods",
														"cart",
														"list"
													],
													"query": [
														{
															"key": "customerId",
															"value": "{{supplierId}}",
															"description": "(Required) "
														},
														{
															"key": "pageNumber",
															"value": "1",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "10",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "59b895fa-4238-483d-9a8b-28e757e5df5b",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/goods/cart/list?customerId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"goods",
																"cart",
																"list"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "customerId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "2e8507fe-1f3a-484f-84ac-ee9d28474214",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/goods/cart/list?customerId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"goods",
																"cart",
																"list"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "customerId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "af49fa04-bf82-4788-b602-0b427c27dc2f"
								},
								{
									"name": "remove",
									"item": [
										{
											"name": "No itemId - Remove Cart Item",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9db08ea3-52bf-42f1-88c4-cbf0c1b529c2",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json();\r",
															"var errors = responseJSON.errors;\r",
															"\r",
															"pm.test(\"Verify that itemId is required\", function () {\r",
															"    pm.expect(errors[0].name).to.be.a(\"string\").and.not.be.empty;\r",
															"    pm.expect(errors[0].reason).to.be.a(\"string\").and.not.be.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "d7f49f22-57ec-4ee9-b23a-8778be2b77de",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"itemId\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/cart/remove"
											},
											"response": [
												{
													"id": "8807b228-1876-4427-b4e8-465dda18164f",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"itemId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/cart/remove"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "2f116dff-1184-4d86-85c8-79569b04c0df",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"itemId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/cart/remove"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No auth - Remove Cart Item Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9db08ea3-52bf-42f1-88c4-cbf0c1b529c2",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "c732f457-2014-40e5-9988-c222339a7a82",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"itemId\": \"\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/cart/remove"
											},
											"response": [
												{
													"id": "cef4e57f-ab9c-4f1e-b202-bfb46b8f3544",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"itemId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/cart/remove"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "0bad6e8a-1f7c-42ba-9710-0d0ea03c78ae",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"itemId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/goods/cart/remove"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "6ae4f97f-6180-4989-b5a8-26ed109f0f42"
								},
								{
									"name": "myOrder",
									"item": [
										{
											"name": "Anp Goods Services Features Cart Get My Order Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "ee524963-f041-4443-b21b-739be2978dbe",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Verify that items in cart are returned\", function () {\r",
															"    pm.expect(pm.response.json().data[0].orderId).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(pm.response.json().data[0].cost).to.be.a(\"number\");\r",
															"        pm.expect(pm.response.json().data[0].quantity).to.be.a(\"number\");\r",
															"                pm.expect(pm.response.json().data[0].itemId).to.be.a(\"string\").and.not.be.empty;\r",
															"\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "564e446e-0f42-4537-825f-d5f75bc121b7",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/goods/cart/myOrder?pageNumber=1&pageSize=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"goods",
														"cart",
														"myOrder"
													],
													"query": [
														{
															"key": "pageNumber",
															"value": "1",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "10",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "6030a8bf-d361-4c8c-b018-afed209e0576",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/goods/cart/myOrder?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"goods",
																"cart",
																"myOrder"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "b910113f-334a-45ed-8441-1a573cb6f3a6",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/goods/cart/myOrder?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"goods",
																"cart",
																"myOrder"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "dc4eff6a-2e2a-4884-84da-c3c569564687"
								}
							],
							"id": "9b4c29cb-bd4f-4621-9e67-32e2fd524621"
						}
					],
					"id": "d5e0db51-be4c-4d19-888b-ac38554471f5"
				},
				{
					"name": "procurement Copy",
					"item": [
						{
							"name": "create",
							"item": [
								{
									"name": "Anp Procurement Features Service Information Create Endpoint1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e90c1f36-be54-434a-8a22-748bb3d24f2e",
												"exec": [
													"pm.collectionVariables.set(\"serviceInformationId\", pm.response.json().data.id);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); \r",
													"\r",
													"pm.test(\"Verify that Service Information is created successfully\", function () {\r",
													"\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.data.id).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
													"\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "44575044-23cb-49ab-9dcb-4ec8cec83490",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{approverBearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  //\"serviceInformationId\": \"<string>\",\n  \"title\":\"{{$randomProduct}}\",\n  \"bidStartDate\": \"2025-01-25\",\n  \"bidEndDate\": \"2025-01-30\",\n  \"description\": \"Oil minning\",\n  \"businessType\": \"Sole proprietorship\",\n  \"bidRequirement\": \"3 contracts executed\",\n  \"prerequisite\": \"CAC\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"{{industryId}}\",\n  \"status\": 4\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/procurement/create"
									},
									"response": [
										{
											"id": "6130eaa6-1386-4ca2-85b6-e84155ffa5a2",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"businessType\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"status\": 3\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/create"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "4c2120a5-c254-415a-84d5-3ac440480293",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"businessType\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"status\": 3\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/create"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "5ac08d1e-96d3-4958-a055-99c05d0508c1",
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"businessType\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"status\": 3\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/create"
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No Auth - Service Information Create",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e90c1f36-be54-434a-8a22-748bb3d24f2e",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "d768a876-a829-417d-86b9-1d04d1d97dde",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  //\"serviceInformationId\": \"<string>\",\n  \"title\": \"Oil minning\",\n  \"bidStartDate\": \"2025-01-25\",\n  \"bidEndDate\": \"2025-01-30\",\n  \"description\": \"Oil minning\",\n  \"businessType\": \"Sole proprietorship\",\n  \"bidRequirement\": \"3 contracts executed\",\n  \"prerequisite\": \"CAC\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"{{industryId}}\",\n  \"status\": 4\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/procurement/create"
									},
									"response": [
										{
											"id": "6b8a564e-3655-43ad-9a6e-e654f6032173",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"businessType\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"status\": 3\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/create"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "aa796045-85c3-4e5a-b70e-c64e13d4dab2",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"businessType\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"status\": 3\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/create"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "7dd15ad0-9e0a-4e3b-9cd8-8137427bcdf1",
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"businessType\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"status\": 3\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/create"
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "Anp Procurement Features Service Information Create Endpoint1 Copy 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e90c1f36-be54-434a-8a22-748bb3d24f2e",
												"exec": [
													"pm.collectionVariables.set(\"serviceInformationId\", pm.response.json().data.id);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); \r",
													"\r",
													"pm.test(\"Verify that Service Information is created successfully\", function () {\r",
													"\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.data.id).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
													"\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "b453114f-ba79-47b1-8fd0-f46f701bc71d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{approverBearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  //\"serviceInformationId\": \"<string>\",\n  \"title\": \"Oil minning\",\n  \"bidStartDate\": \"2025-01-25\",\n  \"bidEndDate\": \"2025-01-30\",\n  \"description\": \"Oil minning\",\n  \"businessType\": \"Sole proprietorship\",\n  \"bidRequirement\": \"3 contracts executed\",\n  \"prerequisite\": \"CAC\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"{{industryId}}\",\n  \"status\": 4\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/procurement/create"
									},
									"response": [
										{
											"id": "b8c4f250-880c-40e6-981b-461d413609ab",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"businessType\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"status\": 3\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/create"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "9e99c7e1-6513-44dc-8cb4-9862e276d2c9",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"businessType\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"status\": 3\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/create"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "75875b59-a719-4f1a-82ad-c4d9c69c243c",
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"businessType\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"status\": 3\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/create"
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "c2c79b69-bb24-46ae-a492-106f72effe12"
						},
						{
							"name": "edit",
							"item": [
								{
									"name": "Anp Procurement Features Service Information Create Endpoint2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "090993b6-34c5-4eaa-a7bf-0a9e176e90b6",
												"exec": [
													"//pm.collectionVariables.set(\"serviceInformationId\", pm.response.json().data.id);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); \r",
													"\r",
													"pm.test(\"Verify that Service Information is updated successfully\", function () {\r",
													"\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.data.id).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
													"\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "adcc6098-167a-416f-af51-9c913bb0e60d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{approverBearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "// {\n//   \"serviceInformationId\": \"<string>\",\n//   \"title\": \"<string>\",\n//   \"bidStartDate\": \"<dateTime>\",\n//   \"bidEndDate\": \"<dateTime>\",\n//   \"description\": \"<string>\",\n//   \"businessType\": \"<string>\",\n//   \"bidRequirement\": \"<string>\",\n//   \"prerequisite\": \"<string>\",\n//   \"workReference\": \"<string>\",\n//   \"additionalInformation\": \"<string>\",\n//   \"industryId\": \"<string>\",\n//   \"status\": 3\n// }\n\n{\"serviceInformationId\": \"{{serviceInformationId}}\",//\"056c9951-15e5-42e0-7c60-08dd3c8ae4f9\",\n            \"title\": {{$randomProduct}}, //\"Mineral minning\",\n            \"bidStartDate\": \"2025-01-27T00:00:00\",\n            \"bidEndDate\": \"2025-02-03T00:00:00\",\n            \"description\": \"Mineral minning\",\n            \"businessType\": \"Sole proprietorship\",\n            \"bidRequirement\": \"3 contracts executed\",\n            \"prerequisite\": \"CAC\",\n            \"workReference\": \"<string>\",\n            \"additionalInformation\": \"<string>\",\n            \"industryId\": \"{{industryId}}\",//\"513f3a56-83ec-47cc-8010-08dcff87fbf6\",\n            //\"modifiedDate\": \"2025-01-24T15:22:48.2105359\"\n              \"status\": 4\n\n            }",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/procurement/edit"
									},
									"response": [
										{
											"id": "b3f3bfd8-7535-4217-81da-f5ad72c07eb2",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"businessType\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"status\": 3\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/edit"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "3e594cad-e83d-4cae-ad48-bb9b9ac3f2d7",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"businessType\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"status\": 3\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/edit"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "091dda84-49e8-4e13-92f5-2d196025917c",
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"businessType\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"status\": 3\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/edit"
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No Auth - Service Information Edit",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e26fe15b-e159-40de-97aa-8c6d6683f9e1",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "2838e5b5-492c-4c6b-b938-5e5b3d782d25",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"businessType\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"status\": 3\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/procurement/edit"
									},
									"response": [
										{
											"id": "f7671ee4-85b3-4abc-a001-0d06dca3dc4b",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"businessType\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"status\": 3\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/edit"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "9d29e4d8-48b4-4751-931f-822cc3e9a273",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"businessType\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"status\": 3\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/edit"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "0614954a-aec3-47e4-87e1-8dddf19949bf",
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"businessType\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\",\n  \"status\": 3\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/edit"
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "050f8717-99e2-4bfa-b0b3-ad638e708edd"
						},
						{
							"name": "TenderGoodsService",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Anp Procurement Features Service Information Create Tender Goods Service Endpoint1",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "adae8ba5-cae9-4f7f-9fe0-50841d10c3f3",
														"exec": [
															"pm.collectionVariables.set(\"tenderGoodsServiceId\", pm.response.json().data.id);\r",
															"\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that Service Information is created successfully\", function () {\r",
															"\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(responseJSON.data.id).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "fc57bcd4-667b-4d83-9e93-cf517011c18e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{approverBearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n // \"tenderGoodsServicesId\": \"<string>\",\n  \"itemName\": \"Gold\",\n  \"description\": \"Gold minning\",\n  \"quantity\": \"10\",\n  \"estimatedCost\": \"50000\",\n  \"procurementMethod\": \"Request for proposal\",\n  \"warrantyDuration\": \"5\",\n  \"warrantyType\": \"Standard\",\n  \"serviceInformationId\": \"85218a2b-83c4-464a-3cd6-08dd3c7c59fc\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/TenderGoodsService/create"
											},
											"response": [
												{
													"id": "a29d4935-1a2e-4d6d-931a-f73c3cd651a5",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderGoodsServicesId\": \"<string>\",\n  \"itemName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"estimatedCost\": \"<number>\",\n  \"procurementMethod\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantyType\": \"<string>\",\n  \"serviceInformationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/TenderGoodsService/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "a6f9780b-a1e8-4cae-9667-8d69054837a6",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderGoodsServicesId\": \"<string>\",\n  \"itemName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"estimatedCost\": \"<number>\",\n  \"procurementMethod\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantyType\": \"<string>\",\n  \"serviceInformationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/TenderGoodsService/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "8e1df7dc-31d8-4be0-8c8d-15c926b73b1a",
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderGoodsServicesId\": \"<string>\",\n  \"itemName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"estimatedCost\": \"<number>\",\n  \"procurementMethod\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantyType\": \"<string>\",\n  \"serviceInformationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/TenderGoodsService/create"
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No Auth - Create Tender Goods Service",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "adae8ba5-cae9-4f7f-9fe0-50841d10c3f3",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "65f1b809-4a61-448a-85f8-dc0842ccadd5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n // \"tenderGoodsServicesId\": \"<string>\",\n  \"itemName\": \"Gold\",\n  \"description\": \"Gold minning\",\n  \"quantity\": \"10\",\n  \"estimatedCost\": \"50000\",\n  \"procurementMethod\": \"Request for proposal\",\n  \"warrantyDuration\": \"5\",\n  \"warrantyType\": \"Standard\",\n  \"serviceInformationId\": \"85218a2b-83c4-464a-3cd6-08dd3c7c59fc\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/TenderGoodsService/create"
											},
											"response": [
												{
													"id": "defda989-0fcb-41e4-b34a-b4c53894e6fb",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderGoodsServicesId\": \"<string>\",\n  \"itemName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"estimatedCost\": \"<number>\",\n  \"procurementMethod\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantyType\": \"<string>\",\n  \"serviceInformationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/TenderGoodsService/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "a02877c1-4983-4280-8417-207ddfe5132d",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderGoodsServicesId\": \"<string>\",\n  \"itemName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"estimatedCost\": \"<number>\",\n  \"procurementMethod\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantyType\": \"<string>\",\n  \"serviceInformationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/TenderGoodsService/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "59b28f1f-9482-4fa0-a4d3-87a9d4e51ab9",
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderGoodsServicesId\": \"<string>\",\n  \"itemName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"estimatedCost\": \"<number>\",\n  \"procurementMethod\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantyType\": \"<string>\",\n  \"serviceInformationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/TenderGoodsService/create"
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "6bead6d5-f1e0-499a-80ac-86e6e51ebd96"
								},
								{
									"name": "edit",
									"item": [
										{
											"name": "Anp Procurement Features Service Information Create Tender Goods Service Endpoint2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "88258290-3b0a-4d5c-a554-d78d41a19062",
														"exec": [
															"//pm.collectionVariables.set(\"serviceInformationId\", pm.response.json().data.id);\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that tender goods and service is updated successfully\", function () {\r",
															"\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(responseJSON.data.id).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "7b7ccd10-9b32-4a52-9e80-563e2db9bff0",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{approverBearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "// {\n//   \"tenderGoodsServicesId\": \"<string>\",\n//   \"itemName\": \"<string>\",\n//   \"description\": \"<string>\",\n//   \"quantity\": \"<integer>\",\n//   \"estimatedCost\": \"<number>\",\n//   \"procurementMethod\": \"<string>\",\n//   \"warrantyDuration\": \"<integer>\",\n//   \"warrantyType\": \"<string>\",\n//   \"serviceInformationId\": \"<string>\"\n// }\n\n{\n            \"tenderGoodsServicesId\":\"{{tenderGoodsServiceId}}\",//\"61702bda-7363-4553-c353-08dd3c7d3efd\",\n            \"itemName\": \"Gold\",\n            \"description\": \"Gold minning\",\n            \"quantity\": 20,\n            \"estimatedCost\": 40000.00,\n            \"procurementMethod\": \"Request for proposal\",\n            \"warrantyDuration\": 5,\n            \"warrantyType\": \"Standard\",\n            \"serviceInformationId\":  \"{{serviceInformationId}}\"//\"85218a2b-83c4-464a-3cd6-08dd3c7c59fc\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/TenderGoodsService/edit"
											},
											"response": [
												{
													"id": "f33cd87f-e3ef-4907-b4b4-d1704c86a180",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderGoodsServicesId\": \"<string>\",\n  \"itemName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"estimatedCost\": \"<number>\",\n  \"procurementMethod\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantyType\": \"<string>\",\n  \"serviceInformationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/TenderGoodsService/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "ec649bb6-17cc-4076-84f2-398e481cfff2",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderGoodsServicesId\": \"<string>\",\n  \"itemName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"estimatedCost\": \"<number>\",\n  \"procurementMethod\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantyType\": \"<string>\",\n  \"serviceInformationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/TenderGoodsService/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "033010d9-a763-4f71-8ccf-e1bac4c72372",
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderGoodsServicesId\": \"<string>\",\n  \"itemName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"estimatedCost\": \"<number>\",\n  \"procurementMethod\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantyType\": \"<string>\",\n  \"serviceInformationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/TenderGoodsService/edit"
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No Auth - Tender Goods Service Edit",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "eb716062-ee75-4bc0-8dd3-c4280746c8f7",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "eda8ee03-685f-4973-b0bc-c228d57615c7",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tenderGoodsServicesId\": \"<string>\",\n  \"itemName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"estimatedCost\": \"<number>\",\n  \"procurementMethod\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantyType\": \"<string>\",\n  \"serviceInformationId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/TenderGoodsService/edit"
											},
											"response": [
												{
													"id": "908918da-2e31-409e-82ae-82de8e8dec4f",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderGoodsServicesId\": \"<string>\",\n  \"itemName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"estimatedCost\": \"<number>\",\n  \"procurementMethod\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantyType\": \"<string>\",\n  \"serviceInformationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/TenderGoodsService/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "8d387100-f07e-479c-87f3-b17b076c9b44",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderGoodsServicesId\": \"<string>\",\n  \"itemName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"estimatedCost\": \"<number>\",\n  \"procurementMethod\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantyType\": \"<string>\",\n  \"serviceInformationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/TenderGoodsService/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "62be0891-3dab-49da-8297-260981971357",
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderGoodsServicesId\": \"<string>\",\n  \"itemName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"estimatedCost\": \"<number>\",\n  \"procurementMethod\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantyType\": \"<string>\",\n  \"serviceInformationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/TenderGoodsService/edit"
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "0c9225fc-d35c-465c-9501-6919221c5da1"
								}
							],
							"id": "0805c8f0-3ce6-4555-ad1e-a7a9bc3dec2f"
						},
						{
							"name": "TenderDocument",
							"item": [
								{
									"name": "listTenderDocument",
									"item": [
										{
											"name": "create",
											"item": [
												{
													"name": "Anp Procurement Features Service Information Create Tender Document Endpoint1",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "20c3e128-f154-4846-9243-b6208d301bc4",
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"var responseJSON = pm.response.json(); \r",
																	"\r",
																	"pm.test(\"Verify that Service Information is created successfully\", function () {\r",
																	"\r",
																	"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
																	"    pm.expect(responseJSON.data.id).to.be.a(\"string\").and.not.empty;\r",
																	"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "77658c99-5671-4e21-aebf-b67f7109655e",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{approverBearerToken}}"
															}
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n // \"tenderDetailId\": \"<string>\",\n  \"startdate\": \"2025-01-25T14:09:39.906Z\",\n  \"endDate\": \"2025-01-30T14:09:39.906Z\",\n  \"tenderType\": \"TechnicalInformation\",//\"ExpressionOfInterest\",//\"Commercials\",\n  \"serviceInformationId\": \"{{serviceInformationId}}\",//\"85218a2b-83c4-464a-3cd6-08dd3c7c59fc\",\n  \"tenderDocuments\": [\n    {\n     // \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"CAC\",\n      \"assignPoint\": \"30\"\n    }\n    // {\n    //   \"tenderDocumentId\": \"<string>\",\n    //   \"documentName\": \"<string>\",\n    //   \"assignPoint\": \"<integer>\"\n    // }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/TenderDocument/create"
													},
													"response": [
														{
															"id": "f6e67ebe-aff0-4ec4-ab23-e15f1dd27cd5",
															"name": "Success",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"tenderDetailId\": \"<string>\",\n  \"startdate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"tenderType\": \"Commercials\",\n  \"serviceInformationId\": \"<string>\",\n  \"tenderDocuments\": [\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    },\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/procurement/TenderDocument/create"
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "9bc61153-bad3-4dd0-9bd5-f3a376bd572d",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"tenderDetailId\": \"<string>\",\n  \"startdate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"tenderType\": \"Commercials\",\n  \"serviceInformationId\": \"<string>\",\n  \"tenderDocuments\": [\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    },\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/procurement/TenderDocument/create"
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "18d75aed-4b55-4c08-99d5-6ef1aee31575",
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"tenderDetailId\": \"<string>\",\n  \"startdate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"tenderType\": \"Commercials\",\n  \"serviceInformationId\": \"<string>\",\n  \"tenderDocuments\": [\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    },\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/procurement/TenderDocument/create"
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												},
												{
													"name": "No Auth - Create Tender Document",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "20c3e128-f154-4846-9243-b6208d301bc4",
																"exec": [
																	"pm.test(\"Status code is 401\", function () {\r",
																	"    pm.response.to.have.status(401);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
																	"    pm.response.to.have.status(\"Unauthorized\");\r",
																	"});"
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "134571a7-97c6-4c30-9eef-1c209cd73337",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n // \"tenderDetailId\": \"<string>\",\n  \"startdate\": \"2025-01-25T14:09:39.906Z\",\n  \"endDate\": \"2025-01-30T14:09:39.906Z\",\n  \"tenderType\": \"TechnicalInformation\",//\"ExpressionOfInterest\",//\"Commercials\",\n  \"serviceInformationId\": \"85218a2b-83c4-464a-3cd6-08dd3c7c59fc\",\n  \"tenderDocuments\": [\n    {\n     // \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"CAC\",\n      \"assignPoint\": \"30\"\n    }\n    // {\n    //   \"tenderDocumentId\": \"<string>\",\n    //   \"documentName\": \"<string>\",\n    //   \"assignPoint\": \"<integer>\"\n    // }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/TenderDocument/create"
													},
													"response": [
														{
															"id": "7353d2dc-ac1f-4872-ba72-8ae03222c4ba",
															"name": "Success",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"tenderDetailId\": \"<string>\",\n  \"startdate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"tenderType\": \"Commercials\",\n  \"serviceInformationId\": \"<string>\",\n  \"tenderDocuments\": [\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    },\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/procurement/TenderDocument/create"
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "e9071ef1-214a-4d85-99c8-44f8758aed02",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"tenderDetailId\": \"<string>\",\n  \"startdate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"tenderType\": \"Commercials\",\n  \"serviceInformationId\": \"<string>\",\n  \"tenderDocuments\": [\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    },\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/procurement/TenderDocument/create"
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "f223863f-5a3a-4e69-93cd-5ce2106ae715",
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"tenderDetailId\": \"<string>\",\n  \"startdate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"tenderType\": \"Commercials\",\n  \"serviceInformationId\": \"<string>\",\n  \"tenderDocuments\": [\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    },\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/procurement/TenderDocument/create"
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												}
											],
											"id": "acaf3795-5709-49ac-bebf-4cfb228a9e41"
										},
										{
											"name": "{serviceInformationId}",
											"item": [
												{
													"name": "Get all Tender Document by Service Information Id",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "681f9a4d-2f01-4516-8309-f04a5fa478a3",
																"exec": [
																	"pm.collectionVariables.set(\"tenderDocumentId\", pm.response.json().data[0].tenderDocumentId);\r",
																	"pm.collectionVariables.set(\"tenderDocumentId2\", pm.response.json().data[1].tenderDocumentId);\r",
																	"\r",
																	"pm.collectionVariables.set(\"tenderDetailId\", pm.response.json().data.tenderDetailId);\r",
																	"\r",
																	"pm.test(\"Status code is 200\", function () {\r",
																	"    pm.response.to.have.status(200);\r",
																	"});\r",
																	"\r",
																	"var responseJSON = pm.response.json(); \r",
																	"\r",
																	"pm.test(\"Verify that tender document is returned\", function () {\r",
																	"\r",
																	"   // pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
																	"   // pm.expect(responseJSON.data.email).to.be.a(\"string\").and.not.empty;\r",
																	"   // pm.expect(responseJSON.data.userName).to.be.a(\"string\").and.not.empty;\r",
																	"        pm.expect(responseJSON.data[0]).to.be.a(\"object\").and.not.empty;\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "7804081a-16b0-4b7f-8800-923941830154",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{approverBearerToken}}"
															}
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/listTenderDocument/:serviceInformationId?pageNumber=1&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"listTenderDocument",
																":serviceInformationId"
															],
															"query": [
																{
																	"key": "pageNumber",
																	"value": "1",
																	"description": "(Required) "
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "serviceInformationId",
																	"value": "{{serviceInformationId}}",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get all Tender Document by Service Information Id"
													},
													"response": [
														{
															"id": "0910cd40-f4f8-4d22-b6d9-73dbdbffa3ab",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/procurement/listTenderDocument/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"procurement",
																		"listTenderDocument",
																		":serviceInformationId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "serviceInformationId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "07a00a2e-5eda-4b88-875b-bb7321c5cae3",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/procurement/listTenderDocument/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"procurement",
																		"listTenderDocument",
																		":serviceInformationId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "serviceInformationId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "0d76909e-3857-4a7a-8400-352fe27aaf7c",
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/procurement/listTenderDocument/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"procurement",
																		"listTenderDocument",
																		":serviceInformationId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "serviceInformationId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												},
												{
													"name": "No ServiceInformationId - Get all Tender Document by Service Information Id",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "681f9a4d-2f01-4516-8309-f04a5fa478a3",
																"exec": [
																	"pm.test(\"Status code is 400\", function () {\r",
																	"    pm.response.to.have.status(400);\r",
																	"});\r",
																	"\r",
																	"var responseJSON = pm.response.json(); \r",
																	"\r",
																	"pm.test(\"Verify that serviceInformationId Id is required\", function () {\r",
																	"\r",
																	"   // pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
																	"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
																	"    pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
																	"      //  pm.expect(responseJSON.data.phoneNumber).to.be.a(\"string\").and.not.empty;\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "d4bc6abb-4995-4e1f-8a5d-c2c83d93615a",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{approverBearerToken}}"
															}
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/listTenderDocument/:serviceInformationId?pageNumber=1&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"listTenderDocument",
																":serviceInformationId"
															],
															"query": [
																{
																	"key": "pageNumber",
																	"value": "1",
																	"description": "(Required) "
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "serviceInformationId",
																	"value": "",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get all Tender Document by Service Information Id"
													},
													"response": [
														{
															"id": "6f7e42ce-6404-4fe4-8304-da85be2bea40",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/procurement/listTenderDocument/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"procurement",
																		"listTenderDocument",
																		":serviceInformationId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "serviceInformationId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "017d2e49-5de4-4b7d-bc8d-21eef37d1a54",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/procurement/listTenderDocument/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"procurement",
																		"listTenderDocument",
																		":serviceInformationId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "serviceInformationId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "0d3aa80d-3a8e-4ab2-8363-ffc77bcf38f1",
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/procurement/listTenderDocument/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"procurement",
																		"listTenderDocument",
																		":serviceInformationId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "serviceInformationId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												},
												{
													"name": "Invalid ServiceInformationId - Get all Tender Document by Service Information",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "681f9a4d-2f01-4516-8309-f04a5fa478a3",
																"exec": [
																	"pm.test(\"Status code is 400\", function () {\r",
																	"    pm.response.to.have.status(400);\r",
																	"});\r",
																	"\r",
																	"var responseJSON = pm.response.json(); \r",
																	"\r",
																	"pm.test(\"Verify that serviceInformationId is invalid\", function () {\r",
																	"\r",
																	"   // pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
																	"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
																	"    pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
																	"      //  pm.expect(responseJSON.data.phoneNumber).to.be.a(\"string\").and.not.empty;\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "f2e64adc-db81-4c0e-9e57-74ef1f0a84b2",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{approverBearerToken}}"
															}
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/listTenderDocument/:serviceInformationId?pageNumber=1&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"listTenderDocument",
																":serviceInformationId"
															],
															"query": [
																{
																	"key": "pageNumber",
																	"value": "1",
																	"description": "(Required) "
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "serviceInformationId",
																	"value": "85218a2b-83c4-464a-3cd6-08dd3c7c5",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get all Tender Document by Service Information Id"
													},
													"response": [
														{
															"id": "6abc338b-50b5-4f86-a935-c0dacddbb7a0",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/procurement/listTenderDocument/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"procurement",
																		"listTenderDocument",
																		":serviceInformationId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "serviceInformationId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "651e5961-a2ba-4216-91b9-8b4f183e44e9",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/procurement/listTenderDocument/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"procurement",
																		"listTenderDocument",
																		":serviceInformationId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "serviceInformationId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "a4e13320-461d-48de-a214-3a04e770afc9",
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/procurement/listTenderDocument/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"procurement",
																		"listTenderDocument",
																		":serviceInformationId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "serviceInformationId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												},
												{
													"name": "No Auth - Get all Tender Document by Service Information Id",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "681f9a4d-2f01-4516-8309-f04a5fa478a3",
																"exec": [
																	"pm.test(\"Status code is 401\", function () {\r",
																	"    pm.response.to.have.status(401);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
																	"    pm.response.to.have.status(\"Unauthorized\");\r",
																	"});"
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "5323abe6-91ed-4c33-8b75-824b6f88f0d4",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/listTenderDocument/:serviceInformationId?pageNumber=1&pageSize=10",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"listTenderDocument",
																":serviceInformationId"
															],
															"query": [
																{
																	"key": "pageNumber",
																	"value": "1",
																	"description": "(Required) "
																},
																{
																	"key": "pageSize",
																	"value": "10",
																	"description": "(Required) "
																}
															],
															"variable": [
																{
																	"key": "serviceInformationId",
																	"value": "85218a2b-83c4-464a-3cd6-08dd3c7c59fc",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get all Tender Document by Service Information Id"
													},
													"response": [
														{
															"id": "18640379-1139-42a8-b58f-0da0a4e460b7",
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/procurement/listTenderDocument/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"procurement",
																		"listTenderDocument",
																		":serviceInformationId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "serviceInformationId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "a04212a4-e4d0-4bfd-9c39-91a7ac6b26f3",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/procurement/listTenderDocument/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"procurement",
																		"listTenderDocument",
																		":serviceInformationId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "serviceInformationId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "c3e72f37-d616-49dd-b85d-bdc930d6c449",
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/procurement/listTenderDocument/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"procurement",
																		"listTenderDocument",
																		":serviceInformationId"
																	],
																	"query": [
																		{
																			"description": "(Required) ",
																			"key": "pageNumber",
																			"value": "<integer>"
																		},
																		{
																			"description": "(Required) ",
																			"key": "pageSize",
																			"value": "<integer>"
																		}
																	],
																	"variable": [
																		{
																			"key": "serviceInformationId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												}
											],
											"id": "be592fae-58e3-49e9-8773-354b03813277"
										}
									],
									"id": "b689834e-e079-4744-a085-63fbe64fefe6"
								},
								{
									"name": "edit",
									"item": [
										{
											"name": "Anp Procurement Features Service Information Create Tender Document Endpoint2",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "28279aee-87cf-4d66-9e7a-78a3edc06085",
														"exec": [
															"//pm.collectionVariables.set(\"serviceInformationId\", pm.response.json().data.id);\r",
															"\r",
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that Service Information is updated successfully\", function () {\r",
															"\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(responseJSON.data.id).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(responseJSON.data.message).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "75c03239-40f1-4dd4-87cd-72a9dccb1991",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{approverBearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "// {\n//   \"tenderDetailId\": \"<string>\",\n//   \"startdate\": \"<dateTime>\",\n//   \"endDate\": \"<dateTime>\",\n//   \"tenderType\": \"Commercials\",\n//   \"serviceInformationId\": \"<string>\",\n//   \"tenderDocuments\": [\n//     {\n//       \"tenderDocumentId\": \"<string>\",\n//       \"documentName\": \"<string>\",\n//       \"assignPoint\": \"<integer>\"\n//     },\n//     {\n//       \"tenderDocumentId\": \"<string>\",\n//       \"documentName\": \"<string>\",\n//       \"assignPoint\": \"<integer>\"\n//     }\n//   ]\n// }\n\n{\n \"tenderDetailId\": \"{{tenderDetailId}}\",//\"3ddc6a60-c611-46d5-90ea-08dd3d4d6e53\",\n  \"startdate\": \"2025-01-25T14:09:39.906Z\",\n  \"endDate\": \"2025-01-30T14:09:39.906Z\",\n  \"tenderType\": \"TechnicalInformation\",//\"ExpressionOfInterest\",//\"Commercials\",\n  \"serviceInformationId\": \"{{serviceInformationId}}\",//\"85218a2b-83c4-464a-3cd6-08dd3c7c59fc\",\n  \"tenderDocuments\": [\n    {\n      \"tenderDocumentId\": \"{{tenderDocumentId}}\",//\"4c121b45-cb83-440b-c468-08dd3d4d6e57\",\n      \"documentName\": \"NIN\",\n      \"assignPoint\": \"20\"\n    }\n    // {\n    //   \"tenderDocumentId\": \"<string>\",\n    //   \"documentName\": \"<string>\",\n    //   \"assignPoint\": \"<integer>\"\n    // }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/TenderDocument/edit"
											},
											"response": [
												{
													"id": "03866276-f445-45d2-bddd-8aeb9b98940d",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderDetailId\": \"<string>\",\n  \"startdate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"tenderType\": \"Commercials\",\n  \"serviceInformationId\": \"<string>\",\n  \"tenderDocuments\": [\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    },\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/TenderDocument/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "826ed7c6-83bd-45b8-9319-7aa5ff4cad53",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderDetailId\": \"<string>\",\n  \"startdate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"tenderType\": \"Commercials\",\n  \"serviceInformationId\": \"<string>\",\n  \"tenderDocuments\": [\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    },\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/TenderDocument/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "1587e3c4-9faa-4cea-883d-2fdbbeae2ce1",
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderDetailId\": \"<string>\",\n  \"startdate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"tenderType\": \"Commercials\",\n  \"serviceInformationId\": \"<string>\",\n  \"tenderDocuments\": [\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    },\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/TenderDocument/edit"
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No Auth - Edit Tender Document",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "58f40e70-aeb1-48cc-ba6c-406e3a5d4252",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "677bf9fe-03c5-40e0-ade0-8a65170c74e5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tenderDetailId\": \"<string>\",\n  \"startdate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"tenderType\": \"Commercials\",\n  \"serviceInformationId\": \"<string>\",\n  \"tenderDocuments\": [\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    },\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/TenderDocument/edit"
											},
											"response": [
												{
													"id": "1c21f035-c021-4f51-979f-d02bbb30473a",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderDetailId\": \"<string>\",\n  \"startdate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"tenderType\": \"Commercials\",\n  \"serviceInformationId\": \"<string>\",\n  \"tenderDocuments\": [\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    },\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/TenderDocument/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "501aaef9-d9af-4e55-afa5-45b8b7f0afac",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderDetailId\": \"<string>\",\n  \"startdate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"tenderType\": \"Commercials\",\n  \"serviceInformationId\": \"<string>\",\n  \"tenderDocuments\": [\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    },\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/TenderDocument/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "1c5c0152-43f5-42fd-a79e-4e838313213a",
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderDetailId\": \"<string>\",\n  \"startdate\": \"<dateTime>\",\n  \"endDate\": \"<dateTime>\",\n  \"tenderType\": \"Commercials\",\n  \"serviceInformationId\": \"<string>\",\n  \"tenderDocuments\": [\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    },\n    {\n      \"tenderDocumentId\": \"<string>\",\n      \"documentName\": \"<string>\",\n      \"assignPoint\": \"<integer>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/TenderDocument/edit"
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "a70ee208-0f73-454a-99c0-5fe709e5d21b"
								}
							],
							"id": "527e3bec-cf41-4a40-a5ea-c6c7f4ef18a4"
						},
						{
							"name": "listServiceInformation",
							"item": [
								{
									"name": "Anp Procurement Features Service Information Get All Service Information Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "012053ec-52e5-437a-8498-28be4d66fe5e",
												"exec": [
													"//pm.collectionVariables.set(\"serviceInformationId\", pm.response.json().data.id);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); \r",
													"\r",
													"pm.test(\"Verify that Service Information is returned successfully\", function () {\r",
													"\r",
													"    // pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    // pm.expect(responseJSON.data.id).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.data[0]).to.be.an(\"object\").and.not.empty;\r",
													"\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "356afeeb-f919-4f83-8baa-a30f1c390682",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{approverBearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/procurement/listServiceInformation?pageNumber=1&pageSize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"procurement",
												"listServiceInformation"
											],
											"query": [
												{
													"key": "operatorId",
													"value": "<string>",
													"disabled": true
												},
												{
													"key": "status",
													"value": "0",
													"disabled": true
												},
												{
													"key": "pageNumber",
													"value": "1",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "20",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "9505bc29-9bc7-4156-9992-4f5da6c6b10a",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/listServiceInformation?operatorId=<string>&status=0&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"listServiceInformation"
													],
													"query": [
														{
															"key": "operatorId",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "0"
														},
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "086a76ce-8505-4fa2-89b5-104937d42265",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/listServiceInformation?operatorId=<string>&status=0&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"listServiceInformation"
													],
													"query": [
														{
															"key": "operatorId",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "0"
														},
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "c93d9f5e-5f66-4bb5-8267-44536c46e521",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/listServiceInformation?operatorId=<string>&status=0&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"listServiceInformation"
													],
													"query": [
														{
															"key": "operatorId",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "0"
														},
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No Auth - Get All Service Information",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "012053ec-52e5-437a-8498-28be4d66fe5e",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "1541ad42-dc5d-48ca-bddd-720131021116",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/procurement/listServiceInformation?pageNumber=1&pageSize=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"procurement",
												"listServiceInformation"
											],
											"query": [
												{
													"key": "operatorId",
													"value": "<string>",
													"disabled": true
												},
												{
													"key": "status",
													"value": "0",
													"disabled": true
												},
												{
													"key": "pageNumber",
													"value": "1",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "20",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "dbf3136a-184f-42b9-87d3-2b5c62196a06",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/listServiceInformation?operatorId=<string>&status=0&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"listServiceInformation"
													],
													"query": [
														{
															"key": "operatorId",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "0"
														},
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "2dcff89f-40c7-4622-a47c-b4c6fb822f1d",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/listServiceInformation?operatorId=<string>&status=0&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"listServiceInformation"
													],
													"query": [
														{
															"key": "operatorId",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "0"
														},
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "f4ae2f26-66b8-4f97-80be-1cddfccb57b1",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/listServiceInformation?operatorId=<string>&status=0&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"listServiceInformation"
													],
													"query": [
														{
															"key": "operatorId",
															"value": "<string>"
														},
														{
															"key": "status",
															"value": "0"
														},
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "91f461e9-d0e2-44e4-90fa-d11992ff1eb1"
						},
						{
							"name": "listTenderGoodsServices",
							"item": [
								{
									"name": "{serviceInformationId}",
									"item": [
										{
											"name": "Anp Procurement Features Service Information Get All Tender Goods Services Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4fa3dfab-c665-40e1-b305-d5eb9527d91e",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that tender goods and services are returned\", function () {\r",
															"\r",
															"   // pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(responseJSON.data[0]).to.be.an(\"object\").and.not.empty;\r",
															"  //  pm.expect(responseJSON.data.userName).to.be.a(\"string\").and.not.empty;\r",
															"      //  pm.expect(responseJSON.data.phoneNumber).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "e809a5b5-3d18-4287-8684-5c2010c098fa",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{approverBearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/listTenderGoodsServices/:serviceInformationId?pageNumber=1&pageSize=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"listTenderGoodsServices",
														":serviceInformationId"
													],
													"query": [
														{
															"key": "pageNumber",
															"value": "1",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "10",
															"description": "(Required) "
														}
													],
													"variable": [
														{
															"key": "serviceInformationId",
															"value": "{{serviceInformationId}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "2e497ba0-e1b7-4341-98bf-1ee8d41e6383",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/listTenderGoodsServices/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"listTenderGoodsServices",
																":serviceInformationId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "4a58e4e2-63f9-4914-bf6c-4e6d31bf5f3b",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/listTenderGoodsServices/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"listTenderGoodsServices",
																":serviceInformationId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "056ac097-acd5-4ecf-b77a-9b8d484bc095",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/listTenderGoodsServices/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"listTenderGoodsServices",
																":serviceInformationId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Invalid ServiceInformationId - Get All Tender Goods Services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4fa3dfab-c665-40e1-b305-d5eb9527d91e",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that tender goods and services Id is invalid\", function () {\r",
															"\r",
															"   // pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
															"      //  pm.expect(responseJSON.data.phoneNumber).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "34c61a3f-22f1-4070-9607-dae85788a0c4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/listTenderGoodsServices/:serviceInformationId?pageNumber=1&pageSize=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"listTenderGoodsServices",
														":serviceInformationId"
													],
													"query": [
														{
															"key": "pageNumber",
															"value": "1",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "10",
															"description": "(Required) "
														}
													],
													"variable": [
														{
															"key": "serviceInformationId",
															"value": "85218a2b-83c4-464a-3cd6-08dd3c7c",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "1aeb61f6-c1b8-41f9-82d3-76d930ddfa01",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/listTenderGoodsServices/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"listTenderGoodsServices",
																":serviceInformationId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "0a43b7a2-70e5-439d-a3c9-d8398a158fc4",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/listTenderGoodsServices/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"listTenderGoodsServices",
																":serviceInformationId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "7db23baa-64a8-4f52-9bca-ea6504ae01b7",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/listTenderGoodsServices/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"listTenderGoodsServices",
																":serviceInformationId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No ServiceInformationId - Get All Tender Goods Services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4fa3dfab-c665-40e1-b305-d5eb9527d91e",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that tender goods and services Id is invalid\", function () {\r",
															"\r",
															"   // pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
															"      //  pm.expect(responseJSON.data.phoneNumber).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "f7d72bf1-d869-4381-ac3b-7cdb81d335cf",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/listTenderGoodsServices/:serviceInformationId?pageNumber=1&pageSize=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"listTenderGoodsServices",
														":serviceInformationId"
													],
													"query": [
														{
															"key": "pageNumber",
															"value": "1",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "10",
															"description": "(Required) "
														}
													],
													"variable": [
														{
															"key": "serviceInformationId",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "7060cb0a-0e52-4def-b51a-e55733c60061",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/listTenderGoodsServices/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"listTenderGoodsServices",
																":serviceInformationId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "335bb35a-5c0c-4e62-b113-c9037d1c760a",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/listTenderGoodsServices/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"listTenderGoodsServices",
																":serviceInformationId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "d2d305a1-5bda-4b91-822a-cf54004f5a41",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/listTenderGoodsServices/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"listTenderGoodsServices",
																":serviceInformationId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No Auth - Get All Tender Goods Services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "4fa3dfab-c665-40e1-b305-d5eb9527d91e",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "3ff834e4-77e0-4576-ae4f-3f6c05b69428",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/listTenderGoodsServices/:serviceInformationId?pageNumber=1&pageSize=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"listTenderGoodsServices",
														":serviceInformationId"
													],
													"query": [
														{
															"key": "pageNumber",
															"value": "1",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "10",
															"description": "(Required) "
														}
													],
													"variable": [
														{
															"key": "serviceInformationId",
															"value": "85218a2b-83c4-464a-3cd6-08dd3c7c59fc",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "5743a0ca-07b9-48b2-8426-ca9b755d1932",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/listTenderGoodsServices/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"listTenderGoodsServices",
																":serviceInformationId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "ccbdde32-9f44-43be-9449-0d74cd749a94",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/listTenderGoodsServices/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"listTenderGoodsServices",
																":serviceInformationId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "6b2a14fc-cb7a-44a5-a489-8de81ba7d095",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/listTenderGoodsServices/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"listTenderGoodsServices",
																":serviceInformationId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "52928cd0-081a-4911-90ca-d55b52a71b09"
								}
							],
							"id": "ad374c63-21fd-4dd9-ab01-d87ae5062fae"
						},
						{
							"name": "TenderGoodsServices",
							"item": [
								{
									"name": "{tenderGoodsServicesId}",
									"item": [
										{
											"name": "Anp Procurement Features Service Information Get A Tender Goods Services Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5b9e1f78-514f-40ec-af3d-f86c1f8bafe9",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that tender goods and services are returned\", function () {\r",
															"\r",
															"   // pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(responseJSON.data).to.be.an(\"object\").and.not.empty;\r",
															"  //  pm.expect(responseJSON.data.userName).to.be.a(\"string\").and.not.empty;\r",
															"      //  pm.expect(responseJSON.data.phoneNumber).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "8e44dc37-bd3d-4dfd-aa2f-2c7267d45cc6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{approverBearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"TenderGoodsServices",
														":tenderGoodsServicesId"
													],
													"variable": [
														{
															"key": "tenderGoodsServicesId",
															"value": "{{tenderGoodsServiceId}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "8b86701c-790c-4cba-962d-c5087453499d",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"TenderGoodsServices",
																":tenderGoodsServicesId"
															],
															"variable": [
																{
																	"key": "tenderGoodsServicesId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "ba02331e-e90d-4391-8d09-476d21ecf871",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"TenderGoodsServices",
																":tenderGoodsServicesId"
															],
															"variable": [
																{
																	"key": "tenderGoodsServicesId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "2d5f97b2-0e93-4ec3-9461-39864031e629",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"TenderGoodsServices",
																":tenderGoodsServicesId"
															],
															"variable": [
																{
																	"key": "tenderGoodsServicesId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No tenderGoodsServiceId - Get A Tender Goods Services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5b9e1f78-514f-40ec-af3d-f86c1f8bafe9",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that serviceInformationId is required\", function () {\r",
															"\r",
															"   // pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
															"      //  pm.expect(responseJSON.data.phoneNumber).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "a5443d71-f31d-4439-8d38-a169949fd045",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{approverBearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"TenderGoodsServices",
														":tenderGoodsServicesId"
													],
													"variable": [
														{
															"key": "tenderGoodsServicesId",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "f0ce6d59-13d5-4980-8fce-30649d3a9eca",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"TenderGoodsServices",
																":tenderGoodsServicesId"
															],
															"variable": [
																{
																	"key": "tenderGoodsServicesId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "6e690605-01eb-4199-901a-c5075d66f526",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"TenderGoodsServices",
																":tenderGoodsServicesId"
															],
															"variable": [
																{
																	"key": "tenderGoodsServicesId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "7fc0cf3f-4d84-40e7-8c18-f20d9726d8db",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"TenderGoodsServices",
																":tenderGoodsServicesId"
															],
															"variable": [
																{
																	"key": "tenderGoodsServicesId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Invalid tenderGoodsServiceId - Get A Tender Goods Services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5b9e1f78-514f-40ec-af3d-f86c1f8bafe9",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that serviceInformationId is invalid\", function () {\r",
															"\r",
															"   // pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
															"      //  pm.expect(responseJSON.data.phoneNumber).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "52675720-44d9-472e-ab0e-58a4134fb04a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{approverBearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"TenderGoodsServices",
														":tenderGoodsServicesId"
													],
													"variable": [
														{
															"key": "tenderGoodsServicesId",
															"value": "61702bda-7363-4553-c353-08dd3c7d3",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "ae06e84a-d332-474f-9e6d-7b5d73ff5e8d",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"TenderGoodsServices",
																":tenderGoodsServicesId"
															],
															"variable": [
																{
																	"key": "tenderGoodsServicesId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "9298b63f-5ece-4aa1-a895-b53114a6f787",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"TenderGoodsServices",
																":tenderGoodsServicesId"
															],
															"variable": [
																{
																	"key": "tenderGoodsServicesId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "fe180d35-2c10-4ed7-ab5f-c1f52650169b",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"TenderGoodsServices",
																":tenderGoodsServicesId"
															],
															"variable": [
																{
																	"key": "tenderGoodsServicesId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No Auth - Get A Tender Goods Services",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "5b9e1f78-514f-40ec-af3d-f86c1f8bafe9",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "e1d41d51-6bd2-4529-b29f-c886302eb8b3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"TenderGoodsServices",
														":tenderGoodsServicesId"
													],
													"variable": [
														{
															"key": "tenderGoodsServicesId",
															"value": "61702bda-7363-4553-c353-08dd3c7d3efd",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "563bbd1c-0b7d-4008-8e42-339e9d0b9dce",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"TenderGoodsServices",
																":tenderGoodsServicesId"
															],
															"variable": [
																{
																	"key": "tenderGoodsServicesId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "bc023c9c-f068-44db-9998-1504679be943",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"TenderGoodsServices",
																":tenderGoodsServicesId"
															],
															"variable": [
																{
																	"key": "tenderGoodsServicesId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "ef38e7f8-82e6-4ede-a699-a4f16bdf0984",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"TenderGoodsServices",
																":tenderGoodsServicesId"
															],
															"variable": [
																{
																	"key": "tenderGoodsServicesId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "83289a03-fe9c-4e87-8f2f-2114cee26ef7"
								}
							],
							"id": "83c38eeb-a001-475a-aa4d-10053d7a11e6"
						},
						{
							"name": "getAServiceInformation",
							"item": [
								{
									"name": "{serviceInformationId}",
									"item": [
										{
											"name": "Anp Procurement Features Service Information Get A Service Information Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c382a785-6111-4ff6-831b-74bfc82ba8b9",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that service information is returned\", function () {\r",
															"\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(responseJSON.data).to.be.an(\"object\").and.not.empty;\r",
															"    // pm.expect(responseJSON.data.userName).to.be.a(\"string\").and.not.empty;\r",
															"    //     pm.expect(responseJSON.data.phoneNumber).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "75525ebb-c022-4e59-ba1a-bc9041a8ac5f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{approverBearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/getAServiceInformation/:serviceInformationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"getAServiceInformation",
														":serviceInformationId"
													],
													"variable": [
														{
															"key": "serviceInformationId",
															"value": "056c9951-15e5-42e0-7c60-08dd3c8ae4f9",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "1807f6f3-b11b-4dd9-9093-07b524e76cdc",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getAServiceInformation/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getAServiceInformation",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "a659e710-fee3-4a51-861c-7d09146ab0f9",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getAServiceInformation/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getAServiceInformation",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "b2940096-ed52-4b3a-ba69-895b23bb163b",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getAServiceInformation/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getAServiceInformation",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No serviceInformationId - Get A Service Information",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c382a785-6111-4ff6-831b-74bfc82ba8b9",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that serviceInformationId is required\", function () {\r",
															"\r",
															"   // pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
															"      //  pm.expect(responseJSON.data.phoneNumber).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "81c383dc-5fb9-4130-a9a7-225fdac20c5c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{approverBearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/getAServiceInformation/:serviceInformationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"getAServiceInformation",
														":serviceInformationId"
													],
													"variable": [
														{
															"key": "serviceInformationId",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "8bfdbed0-e66b-43d7-85c3-129c23017b33",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getAServiceInformation/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getAServiceInformation",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "136278f0-facc-47a2-941a-a412f3db946c",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getAServiceInformation/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getAServiceInformation",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "f9c2ff34-3d22-4bb8-8f8b-78b39848255e",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getAServiceInformation/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getAServiceInformation",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Invalid serviceInformationId - Get A Service Information",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c382a785-6111-4ff6-831b-74bfc82ba8b9",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that serviceInformationId is invalid\", function () {\r",
															"\r",
															"   // pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
															"      //  pm.expect(responseJSON.data.phoneNumber).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "809fa6f9-8a38-4d44-923c-51ed02363445",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{approverBearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/getAServiceInformation/:serviceInformationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"getAServiceInformation",
														":serviceInformationId"
													],
													"variable": [
														{
															"key": "serviceInformationId",
															"value": "47a1b0f2-1244-4b2b-5840-08dd210be6",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "01ffef93-dded-40b6-b660-43e1881aedef",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getAServiceInformation/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getAServiceInformation",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "06bf18a0-4a4b-416a-a61d-1f87d6a2fd24",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getAServiceInformation/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getAServiceInformation",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "5f757637-d89c-4c5e-b955-469f5e1f5329",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getAServiceInformation/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getAServiceInformation",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No Auth - Get A Service Information",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c382a785-6111-4ff6-831b-74bfc82ba8b9",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "d8a3e4fd-7cd8-4cbc-9cfc-7156d57a2f4f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/getAServiceInformation/:serviceInformationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"getAServiceInformation",
														":serviceInformationId"
													],
													"variable": [
														{
															"key": "serviceInformationId",
															"value": "47a1b0f2-1244-4b2b-5840-08dd210be61b",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "b9f1ed92-0fe6-4aa0-bd8f-e63aa6bf1ae6",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getAServiceInformation/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getAServiceInformation",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "57bd86bb-5fc5-4883-8453-dd0652c36067",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getAServiceInformation/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getAServiceInformation",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "23d0a3e4-c45b-4010-9e59-b1e62edd9505",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getAServiceInformation/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getAServiceInformation",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "87e7ce24-924d-4298-948d-801e5e14655f"
								}
							],
							"id": "ccc07ac8-0ebe-443b-a8ef-c10d12f110d7"
						},
						{
							"name": "getATenderDocument",
							"item": [
								{
									"name": "{tenderDocumentId}",
									"item": [
										{
											"name": "Anp Procurement Features Service Information Get A Tender Document Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6aa402f0-df5a-4afd-8cd0-8a1f0a71f4f4",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that tender document is returned\", function () {\r",
															"\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(responseJSON.data).to.be.an(\"object\").and.not.empty;\r",
															"    // pm.expect(responseJSON.data.userName).to.be.a(\"string\").and.not.empty;\r",
															"    //     pm.expect(responseJSON.data.phoneNumber).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "4b75d60f-358b-4842-9c03-bbd88f7d32e5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{approverBearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/getATenderDocument/:tenderDocumentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"getATenderDocument",
														":tenderDocumentId"
													],
													"variable": [
														{
															"key": "tenderDocumentId",
															"value": "{{tenderDocumentId}}",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "ddcc96bf-e1c8-4fc3-a12b-a03c8c700a40",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getATenderDocument/:tenderDocumentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getATenderDocument",
																":tenderDocumentId"
															],
															"variable": [
																{
																	"key": "tenderDocumentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "ebde5e82-9106-4f10-b5b8-341b78bbe05a",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getATenderDocument/:tenderDocumentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getATenderDocument",
																":tenderDocumentId"
															],
															"variable": [
																{
																	"key": "tenderDocumentId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "98ebd951-97e2-4058-b264-9d95509ad3cb",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getATenderDocument/:tenderDocumentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getATenderDocument",
																":tenderDocumentId"
															],
															"variable": [
																{
																	"key": "tenderDocumentId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No tenderDocumentId - Get A Tender Document Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6aa402f0-df5a-4afd-8cd0-8a1f0a71f4f4",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that tenderDocumentId is required\", function () {\r",
															"\r",
															"   // pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
															"      //  pm.expect(responseJSON.data.phoneNumber).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "61a89dc5-8d52-4b1a-b631-814e631d1c3b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/getATenderDocument/:tenderDocumentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"getATenderDocument",
														":tenderDocumentId"
													],
													"variable": [
														{
															"key": "tenderDocumentId",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "d9d22c02-d056-4b03-8b09-55b1ef63c855",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getATenderDocument/:tenderDocumentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getATenderDocument",
																":tenderDocumentId"
															],
															"variable": [
																{
																	"key": "tenderDocumentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "aaea8e95-e7f2-4e47-b268-c0335085f2e3",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getATenderDocument/:tenderDocumentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getATenderDocument",
																":tenderDocumentId"
															],
															"variable": [
																{
																	"key": "tenderDocumentId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "6a51e177-33f6-40d3-83aa-eebcf6e56960",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getATenderDocument/:tenderDocumentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getATenderDocument",
																":tenderDocumentId"
															],
															"variable": [
																{
																	"key": "tenderDocumentId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "Invalid tenderDocumentId - Get A Tender Document",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6aa402f0-df5a-4afd-8cd0-8a1f0a71f4f4",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that tender document Id is invalid\", function () {\r",
															"\r",
															"   // pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
															"      //  pm.expect(responseJSON.data.phoneNumber).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "22db79e3-0296-431d-9d15-14916b2279fb",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{approverBearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/getATenderDocument/:tenderDocumentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"getATenderDocument",
														":tenderDocumentId"
													],
													"variable": [
														{
															"key": "tenderDocumentId",
															"value": "df-cvfgvt66887",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "e520e0a0-2e81-4bf8-8e86-1c067034314d",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getATenderDocument/:tenderDocumentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getATenderDocument",
																":tenderDocumentId"
															],
															"variable": [
																{
																	"key": "tenderDocumentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "7cced328-822d-46dd-87d4-76fbd1767585",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getATenderDocument/:tenderDocumentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getATenderDocument",
																":tenderDocumentId"
															],
															"variable": [
																{
																	"key": "tenderDocumentId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "e62df708-5aab-4d76-9777-18ed28efd202",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getATenderDocument/:tenderDocumentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getATenderDocument",
																":tenderDocumentId"
															],
															"variable": [
																{
																	"key": "tenderDocumentId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No Auth - Get A Tender Document",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6aa402f0-df5a-4afd-8cd0-8a1f0a71f4f4",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "3b09fe22-d737-40c0-a467-ae869bebcbc2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/getATenderDocument/:tenderDocumentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"getATenderDocument",
														":tenderDocumentId"
													],
													"variable": [
														{
															"key": "tenderDocumentId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "5a83c9ef-a1d6-4e5a-ba0b-66d2072d6293",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getATenderDocument/:tenderDocumentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getATenderDocument",
																":tenderDocumentId"
															],
															"variable": [
																{
																	"key": "tenderDocumentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "2970f5d5-1929-4a8f-8183-b9809d05e2d6",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getATenderDocument/:tenderDocumentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getATenderDocument",
																":tenderDocumentId"
															],
															"variable": [
																{
																	"key": "tenderDocumentId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "aa4accfa-fb49-468b-bcee-7cf304b1aa87",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/getATenderDocument/:tenderDocumentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"getATenderDocument",
																":tenderDocumentId"
															],
															"variable": [
																{
																	"key": "tenderDocumentId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "53a0a366-d912-429f-b129-69713c5f27b2"
								}
							],
							"id": "0e0e30fb-4ece-4de2-9b23-52302105b1f0"
						},
						{
							"name": "deleteServiceInfo",
							"item": [
								{
									"name": "{serviceInformationId}",
									"item": [
										{
											"name": "Already deleted - Delete Service Info Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c59e502d-d745-43e5-8cc7-baabb5d01df7",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that Service Information is already deleted \", function () {\r",
															"\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(responseJSON.data).to.be.null;\r",
															"    pm.expect(responseJSON.errorMessage).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "da4d1c34-57b6-4c48-84f2-033d68713cad",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{approverBearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/deleteServiceInfo/:serviceInformationId?",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"deleteServiceInfo",
														":serviceInformationId"
													],
													"query": [
														{
															"key": null,
															"value": null,
															"type": "text"
														}
													],
													"variable": [
														{
															"key": "serviceInformationId",
															"value": "47a1b0f2-1244-4b2b-5840-08dd210be61b",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "5736b345-138b-4385-b729-f7c06cc30a44",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/deleteServiceInfo/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"deleteServiceInfo",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "b3fd9eec-cd7b-4176-882f-1f38aac7e62e",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/deleteServiceInfo/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"deleteServiceInfo",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "c84f7b93-d15f-47ef-a4f1-006bb1be5e9d",
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/deleteServiceInfo/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"deleteServiceInfo",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No Service Information Id - Delete Service Info Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c59e502d-d745-43e5-8cc7-baabb5d01df7",
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that Service Information Id is required \", function () {\r",
															"\r",
															"   pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
															"        pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "d3d65ea5-de05-4531-8feb-8f361ea69a00",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{approverBearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/deleteServiceInfo/:serviceInformationId?",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"deleteServiceInfo",
														":serviceInformationId"
													],
													"query": [
														{
															"key": "",
															"value": null
														}
													],
													"variable": [
														{
															"key": "serviceInformationId",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "4444edc7-ffbf-445b-9fc5-d775b4feba47",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/deleteServiceInfo/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"deleteServiceInfo",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "7413c827-d6ef-4957-b2ee-51e88c055bb1",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/deleteServiceInfo/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"deleteServiceInfo",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "a1386454-2126-4d47-a1f8-b007e23d1dc9",
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/deleteServiceInfo/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"deleteServiceInfo",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No Auth - Delete Service Info",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "209b734a-9821-4d28-9d6e-03e70e23913e",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "8e5ba106-911b-4ce4-a181-dc80b2b8d76b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/deleteServiceInfo/:serviceInformationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"deleteServiceInfo",
														":serviceInformationId"
													],
													"variable": [
														{
															"key": "serviceInformationId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "c3dacf6c-03f0-4b5c-aacf-51c3846d0ea2",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/deleteServiceInfo/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"deleteServiceInfo",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "0113102a-bcae-42bd-84e9-a9f338756dc3",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/deleteServiceInfo/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"deleteServiceInfo",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "235763de-7466-4b4e-834d-3e60688b2a05",
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/deleteServiceInfo/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"deleteServiceInfo",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "cf202894-b2ee-4564-b636-6dae49f0ed36"
								}
							],
							"id": "34ee7b87-60e4-4566-b3f3-41dc2d2de6f9"
						},
						{
							"name": "deleteTenderGoodsServices",
							"item": [
								{
									"name": "Already deleted - Delete Tender Goods Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "804e0858-6e46-4054-bcf2-13522d90c482",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); \r",
													"\r",
													"pm.test(\"Verify that Service Information is already deleted \", function () {\r",
													"\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.data).to.be.null;\r",
													"    pm.expect(responseJSON.errorMessage).to.be.a(\"string\").and.not.empty;\r",
													"\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "c25c5073-a4c4-415f-ae2d-3715571c5481",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{approverBearerToken}}"
											}
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"procurement",
												"TenderGoodsServices",
												":tenderGoodsServicesId"
											],
											"variable": [
												{
													"key": "tenderGoodsServicesId",
													"value": "9daac68c-2e52-4b00-7cfa-08dd3f98a0d0",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "c609f548-c3eb-4878-849c-d51e5c4a50aa",
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"TenderGoodsServices",
														":tenderGoodsServicesId"
													],
													"variable": [
														{
															"key": "tenderGoodsServicesId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "7e2ab3b6-a126-4ad3-93eb-037df4a2b965",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"TenderGoodsServices",
														":tenderGoodsServicesId"
													],
													"variable": [
														{
															"key": "tenderGoodsServicesId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "931794f5-ac70-4602-9c62-a8221b1e157b",
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"TenderGoodsServices",
														":tenderGoodsServicesId"
													],
													"variable": [
														{
															"key": "tenderGoodsServicesId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No tenderGoodsandServiceId - Delete Tender Goods Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "804e0858-6e46-4054-bcf2-13522d90c482",
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); \r",
													"\r",
													"pm.test(\"Verify that Service Information Id is required \", function () {\r",
													"\r",
													"   pm.expect(responseJSON.errors[0].name).to.be.a(\"string\").and.not.empty;\r",
													"        pm.expect(responseJSON.errors[0].reason).to.be.a(\"string\").and.not.empty;\r",
													"\r",
													"\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "21aa9bce-5816-4d5f-944c-f91ca4dbb4c9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{approverBearerToken}}"
											}
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"procurement",
												"TenderGoodsServices",
												":tenderGoodsServicesId"
											],
											"variable": [
												{
													"key": "tenderGoodsServicesId",
													"value": "",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "cf94b8e0-092c-41ec-9e46-33f586aabbec",
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"TenderGoodsServices",
														":tenderGoodsServicesId"
													],
													"variable": [
														{
															"key": "tenderGoodsServicesId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "68c6a1be-e233-4b44-b76b-7938d5380553",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"TenderGoodsServices",
														":tenderGoodsServicesId"
													],
													"variable": [
														{
															"key": "tenderGoodsServicesId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "e3ac9a95-514c-4c8a-9982-66468538c991",
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"TenderGoodsServices",
														":tenderGoodsServicesId"
													],
													"variable": [
														{
															"key": "tenderGoodsServicesId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No Auth - Delete Tender Goods",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3a34da5b-aba9-4b74-b9d2-4925f01bf8a2",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "8d857d2a-dfc3-4f96-bc86-23e45d40d65d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"procurement",
												"TenderGoodsServices",
												":tenderGoodsServicesId"
											],
											"variable": [
												{
													"key": "tenderGoodsServicesId",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "e219a84f-5821-45b7-97d2-61523ee4c3c9",
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"TenderGoodsServices",
														":tenderGoodsServicesId"
													],
													"variable": [
														{
															"key": "tenderGoodsServicesId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "22fd002d-3026-4255-a9df-d9446433e91c",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"TenderGoodsServices",
														":tenderGoodsServicesId"
													],
													"variable": [
														{
															"key": "tenderGoodsServicesId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "128fc3ca-c7a3-409c-b718-55737c496561",
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/TenderGoodsServices/:tenderGoodsServicesId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"TenderGoodsServices",
														":tenderGoodsServicesId"
													],
													"variable": [
														{
															"key": "tenderGoodsServicesId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "db51ed8f-3c78-467b-b593-3a337a61cd21"
						},
						{
							"name": "deleteTenderDocument",
							"item": [
								{
									"name": "{tenderDocumentId}",
									"item": [
										{
											"name": "Anp Procurement Features Service Information Delete Tender Document Endpoint",
											"id": "5e227169-7545-4952-a96e-caadc198fb42",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/deleteTenderDocument/:tenderDocumentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"deleteTenderDocument",
														":tenderDocumentId"
													],
													"variable": [
														{
															"id": "60c221fd-6118-4cac-94b6-996a972e263a",
															"key": "tenderDocumentId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "a91c7483-4ab3-4e08-a1ce-0bd6d305b26b",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/deleteTenderDocument/:tenderDocumentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"deleteTenderDocument",
																":tenderDocumentId"
															],
															"variable": [
																{
																	"key": "tenderDocumentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "754cef23-c024-4cd1-804c-8c2df5531c86",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/deleteTenderDocument/:tenderDocumentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"deleteTenderDocument",
																":tenderDocumentId"
															],
															"variable": [
																{
																	"key": "tenderDocumentId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "767c2233-b4c5-4f54-8f14-4015bf770b14",
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/deleteTenderDocument/:tenderDocumentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"deleteTenderDocument",
																":tenderDocumentId"
															],
															"variable": [
																{
																	"key": "tenderDocumentId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										},
										{
											"name": "No Auth - Delete Tender Document",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a7072e30-9641-4b32-8fdb-6b59778d036e",
														"exec": [
															"pm.test(\"Status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
															"    pm.response.to.have.status(\"Unauthorized\");\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "9117bf04-78f8-479a-8bb1-a759d107ff90",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/deleteTenderDocument/:tenderDocumentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"deleteTenderDocument",
														":tenderDocumentId"
													],
													"variable": [
														{
															"key": "tenderDocumentId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "ec4ea6dd-c4c2-4dfa-b016-d7e73976eff1",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/deleteTenderDocument/:tenderDocumentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"deleteTenderDocument",
																":tenderDocumentId"
															],
															"variable": [
																{
																	"key": "tenderDocumentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "89ff8034-de04-4f11-9a3a-b25ac2633bb2",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/deleteTenderDocument/:tenderDocumentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"deleteTenderDocument",
																":tenderDocumentId"
															],
															"variable": [
																{
																	"key": "tenderDocumentId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "c72422d3-162a-49cb-b073-95a8d05d535f",
													"name": "Forbidden",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/deleteTenderDocument/:tenderDocumentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"deleteTenderDocument",
																":tenderDocumentId"
															],
															"variable": [
																{
																	"key": "tenderDocumentId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "63129155-b24e-48ec-a29f-c5d673b7131c"
								}
							],
							"id": "e492b579-2f2e-4864-867b-785d16790da5"
						},
						{
							"name": "setTenderStatus",
							"item": [
								{
									"name": "Anp Procurement Features Service Information Set Tender Status Endpoint",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "62e7bd3c-1c00-4109-83c4-6f34fa1ec798",
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"var responseJSON = pm.response.json(); \r",
													"\r",
													"pm.test(\"Verify that user profile is returned\", function () {\r",
													"\r",
													"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
													"    pm.expect(responseJSON.data.email).to.be.a(\"string\").and.not.empty;\r",
													"    pm.expect(responseJSON.data.userName).to.be.a(\"string\").and.not.empty;\r",
													"        pm.expect(responseJSON.data.phoneNumber).to.be.a(\"string\").and.not.empty;\r",
													"\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "f630d465-b574-45a2-a859-939b3f484c37",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"status\": 1\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/procurement/setTenderStatus"
									},
									"response": [
										{
											"id": "613b46c4-1df9-4371-a0f9-cda70b123d55",
											"name": "Success",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"status\": 1\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/setTenderStatus"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "18c93f9b-40a2-4bb0-991b-b88093a7bf79",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"status\": 1\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/setTenderStatus"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "c0fd38d2-fc28-4595-ba25-8ace16cd3f61",
											"name": "Forbidden",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"status\": 1\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/setTenderStatus"
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "e5a5535e-06e1-4aa2-86d1-90041b7ebe67"
						},
						{
							"name": "requestForProposal",
							"item": [
								{
									"name": "Anp Procurement Features Bids Apply For Rfp Endpoint",
									"id": "6b5d792c-423a-4cc1-b7e4-41dedfd659ed",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tenderAccessId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/procurement/requestForProposal"
									},
									"response": [
										{
											"id": "56ec2010-842b-4d7f-ad0f-86745369bf6b",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tenderAccessId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/requestForProposal"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "c13e4c37-796b-4932-bc09-254cb4d620e6",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tenderAccessId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/requestForProposal"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "4c872a4c-612e-4817-bc5e-d00fc655d008",
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tenderAccessId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/requestForProposal"
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No Auth - Apply For Rfp",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7ce1dfca-692a-4a32-88cf-d1d6b0ea1eb4",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "212b36d5-2cdc-4c4f-8aed-0ede682ad9fc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tenderAccessId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/procurement/requestForProposal"
									},
									"response": [
										{
											"id": "71116a59-252e-4807-80f8-4610113e4ee0",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tenderAccessId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/requestForProposal"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "e8abf6ac-aef7-4ac8-883e-df6353b32130",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tenderAccessId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/requestForProposal"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "f6bd6181-a3ee-4286-b4e9-8cde18ab0f0c",
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tenderAccessId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/requestForProposal"
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "31bb0d0d-11c0-4853-bc0c-c47442c7fb43"
						},
						{
							"name": "bids",
							"item": [
								{
									"name": "expression",
									"item": [
										{
											"name": "create",
											"item": [
												{
													"name": "Anp Procurement Features Bids Create Bid Expression Endpoint",
													"id": "d82690a2-28ee-4576-8aad-305753edc778",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{bearerToken}}"
															}
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"createdDate\": \"<dateTime>\",\n  \"serviceInformationId\": \"<string>\",\n  \"address\": \"<string>\",\n  \"longitude\": \"<double>\",\n  \"latitude\": \"<double>\",\n  \"state\": \"<string>\",\n  \"location\": \"<string>\",\n  \"estimatedCost\": \"<number>\",\n  \"estimatedStartDate\": \"<dateTime>\",\n  \"estimatedEndDate\": \"<dateTime>\",\n  \"purpose\": \"<string>\",\n  \"declaration\": \"<boolean>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/bids/expression/create"
													},
													"response": [
														{
															"id": "97bc309b-abd8-4985-9325-fad05167f1f8",
															"name": "Success",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"createdDate\": \"<dateTime>\",\n  \"serviceInformationId\": \"<string>\",\n  \"address\": \"<string>\",\n  \"longitude\": \"<double>\",\n  \"latitude\": \"<double>\",\n  \"state\": \"<string>\",\n  \"location\": \"<string>\",\n  \"estimatedCost\": \"<number>\",\n  \"estimatedStartDate\": \"<dateTime>\",\n  \"estimatedEndDate\": \"<dateTime>\",\n  \"purpose\": \"<string>\",\n  \"declaration\": \"<boolean>\",\n  \"companyId\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/procurement/bids/expression/create"
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "8822e087-d057-4938-a6f5-1f0d2aef9b9b",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"createdDate\": \"<dateTime>\",\n  \"serviceInformationId\": \"<string>\",\n  \"address\": \"<string>\",\n  \"longitude\": \"<double>\",\n  \"latitude\": \"<double>\",\n  \"state\": \"<string>\",\n  \"location\": \"<string>\",\n  \"estimatedCost\": \"<number>\",\n  \"estimatedStartDate\": \"<dateTime>\",\n  \"estimatedEndDate\": \"<dateTime>\",\n  \"purpose\": \"<string>\",\n  \"declaration\": \"<boolean>\",\n  \"companyId\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/procurement/bids/expression/create"
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "24c6b9e8-d3a8-4f9d-aaff-f9e9d8d4aca6",
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"createdDate\": \"<dateTime>\",\n  \"serviceInformationId\": \"<string>\",\n  \"address\": \"<string>\",\n  \"longitude\": \"<double>\",\n  \"latitude\": \"<double>\",\n  \"state\": \"<string>\",\n  \"location\": \"<string>\",\n  \"estimatedCost\": \"<number>\",\n  \"estimatedStartDate\": \"<dateTime>\",\n  \"estimatedEndDate\": \"<dateTime>\",\n  \"purpose\": \"<string>\",\n  \"declaration\": \"<boolean>\",\n  \"companyId\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/procurement/bids/expression/create"
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												},
												{
													"name": "No Auth - Create Bid Expression",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "d0a69c68-a830-4656-97e0-95dd9a9344b8",
																"exec": [
																	"pm.test(\"Status code is 401\", function () {\r",
																	"    pm.response.to.have.status(401);\r",
																	"});\r",
																	"\r",
																	"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
																	"    pm.response.to.have.status(\"Unauthorized\");\r",
																	"});"
																],
																"type": "text/javascript",
																"packages": {}
															}
														}
													],
													"id": "d9313e3c-8791-4189-b26b-c42bbcbfcc5e",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "noauth"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"createdDate\": \"<dateTime>\",\n  \"serviceInformationId\": \"<string>\",\n  \"address\": \"<string>\",\n  \"longitude\": \"<double>\",\n  \"latitude\": \"<double>\",\n  \"state\": \"<string>\",\n  \"location\": \"<string>\",\n  \"estimatedCost\": \"<number>\",\n  \"estimatedStartDate\": \"<dateTime>\",\n  \"estimatedEndDate\": \"<dateTime>\",\n  \"purpose\": \"<string>\",\n  \"declaration\": \"<boolean>\",\n  \"companyId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/bids/expression/create"
													},
													"response": [
														{
															"id": "45e8ecc5-c9f9-4ba6-a79a-c6ad21c8e4c0",
															"name": "Success",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"createdDate\": \"<dateTime>\",\n  \"serviceInformationId\": \"<string>\",\n  \"address\": \"<string>\",\n  \"longitude\": \"<double>\",\n  \"latitude\": \"<double>\",\n  \"state\": \"<string>\",\n  \"location\": \"<string>\",\n  \"estimatedCost\": \"<number>\",\n  \"estimatedStartDate\": \"<dateTime>\",\n  \"estimatedEndDate\": \"<dateTime>\",\n  \"purpose\": \"<string>\",\n  \"declaration\": \"<boolean>\",\n  \"companyId\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/procurement/bids/expression/create"
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "7d8fdebd-e006-48c8-9cb4-c457d4fda9a9",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"createdDate\": \"<dateTime>\",\n  \"serviceInformationId\": \"<string>\",\n  \"address\": \"<string>\",\n  \"longitude\": \"<double>\",\n  \"latitude\": \"<double>\",\n  \"state\": \"<string>\",\n  \"location\": \"<string>\",\n  \"estimatedCost\": \"<number>\",\n  \"estimatedStartDate\": \"<dateTime>\",\n  \"estimatedEndDate\": \"<dateTime>\",\n  \"purpose\": \"<string>\",\n  \"declaration\": \"<boolean>\",\n  \"companyId\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/procurement/bids/expression/create"
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "904c4ce4-f86c-470d-86ae-2af33b490a42",
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"createdDate\": \"<dateTime>\",\n  \"serviceInformationId\": \"<string>\",\n  \"address\": \"<string>\",\n  \"longitude\": \"<double>\",\n  \"latitude\": \"<double>\",\n  \"state\": \"<string>\",\n  \"location\": \"<string>\",\n  \"estimatedCost\": \"<number>\",\n  \"estimatedStartDate\": \"<dateTime>\",\n  \"estimatedEndDate\": \"<dateTime>\",\n  \"purpose\": \"<string>\",\n  \"declaration\": \"<boolean>\",\n  \"companyId\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/procurement/bids/expression/create"
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												}
											],
											"id": "344ea951-2ece-41be-b4bf-2fce94c527a0"
										},
										{
											"name": "Anp Procurement Features Bids Get A Bid Expression Endpoint",
											"id": "aeb9be90-1075-4f65-b7e4-689b60170911",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/bids/expression?tenderBidId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"bids",
														"expression"
													],
													"query": [
														{
															"key": "tenderBidId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "344ba807-f0a8-4080-8659-c9dc347955d2",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/bids/expression?tenderBidId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"bids",
																"expression"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "tenderBidId",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "bc63f786-af6a-468d-aede-f724040ebc7e",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/bids/expression?tenderBidId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"bids",
																"expression"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "tenderBidId",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "7b4bf57e-002e-4871-b4fe-d9e5bef8979e",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/bids/expression?tenderBidId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"bids",
																"expression"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "tenderBidId",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "e74a3e3b-e67a-4f1f-b068-072f0a1b86f8"
								},
								{
									"name": "financial",
									"item": [
										{
											"name": "create",
											"item": [
												{
													"name": "Anp Procurement Features Bids Create Bid Financial Endpoint",
													"id": "eada363a-2034-4d12-9a52-5637da403b84",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{bearerToken}}"
															}
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"cost\": \"<number>\",\n  \"totalCost\": \"<number>\",\n  \"quotedCost\": \"<number>\",\n  \"discount\": \"<number>\",\n  \"declaration\": \"<boolean>\",\n  \"tenderBidId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/bids/financial/create"
													},
													"response": [
														{
															"id": "76054d3d-b3b1-4916-a844-8ac26d60f010",
															"name": "Success",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"cost\": \"<number>\",\n  \"totalCost\": \"<number>\",\n  \"quotedCost\": \"<number>\",\n  \"discount\": \"<number>\",\n  \"declaration\": \"<boolean>\",\n  \"tenderBidId\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/procurement/bids/financial/create"
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "8e779816-40a8-4de1-ac0a-b361d931a2f7",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"cost\": \"<number>\",\n  \"totalCost\": \"<number>\",\n  \"quotedCost\": \"<number>\",\n  \"discount\": \"<number>\",\n  \"declaration\": \"<boolean>\",\n  \"tenderBidId\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/procurement/bids/financial/create"
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "0b550425-ebc6-472e-9590-63a039823130",
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"cost\": \"<number>\",\n  \"totalCost\": \"<number>\",\n  \"quotedCost\": \"<number>\",\n  \"discount\": \"<number>\",\n  \"declaration\": \"<boolean>\",\n  \"tenderBidId\": \"<string>\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/procurement/bids/financial/create"
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												}
											],
											"id": "8d783fb1-7c05-4a29-828d-94cd4897772e"
										},
										{
											"name": "Anp Procurement Features Bids Get A Bid Financial Endpoint",
											"id": "9af32d76-fc7b-454d-930c-3073fb0312f3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/bids/financial?tenderBidId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"bids",
														"financial"
													],
													"query": [
														{
															"key": "tenderBidId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "ee2b4fe9-06f5-45cd-94cb-f3cfbce141e7",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/bids/financial?tenderBidId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"bids",
																"financial"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "tenderBidId",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "f5996395-f6c6-4c00-b8de-ffd65f9bc373",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/bids/financial?tenderBidId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"bids",
																"financial"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "tenderBidId",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "9a0b1e66-78f1-4d73-8bc9-5a52a54a3245",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/bids/financial?tenderBidId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"bids",
																"financial"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "tenderBidId",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "d20a2715-4c26-4ea9-b7e3-2664782ee5fa"
								},
								{
									"name": "technical",
									"item": [
										{
											"name": "create",
											"item": [
												{
													"name": "Anp Procurement Features Bids Create Bid Technical Endpoint",
													"id": "905df136-f487-4ff3-bff2-82c2e295bc17",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": {
																"token": "{{bearerToken}}"
															}
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"declaration\": \"<boolean>\",\n  \"tenderBidId\": \"<string>\",\n  \"technicalEvaluationDelivarable\": [\n    {\n      \"delivarbles\": \"<string>\",\n      \"dueDate\": \"<dateTime>\",\n      \"amount\": \"<number>\",\n      \"technicalEvaluationId\": \"<string>\"\n    },\n    {\n      \"delivarbles\": \"<string>\",\n      \"dueDate\": \"<dateTime>\",\n      \"amount\": \"<number>\",\n      \"technicalEvaluationId\": \"<string>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/bids/technical/create"
													},
													"response": [
														{
															"id": "9c325080-8fa7-48cb-b3d9-6d7f07f85a23",
															"name": "Success",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"declaration\": \"<boolean>\",\n  \"tenderBidId\": \"<string>\",\n  \"technicalEvaluationDelivarable\": [\n    {\n      \"delivarbles\": \"<string>\",\n      \"dueDate\": \"<dateTime>\",\n      \"amount\": \"<number>\",\n      \"technicalEvaluationId\": \"<string>\"\n    },\n    {\n      \"delivarbles\": \"<string>\",\n      \"dueDate\": \"<dateTime>\",\n      \"amount\": \"<number>\",\n      \"technicalEvaluationId\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/procurement/bids/technical/create"
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "235effe3-e33d-44a3-a054-f4312872a72c",
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"declaration\": \"<boolean>\",\n  \"tenderBidId\": \"<string>\",\n  \"technicalEvaluationDelivarable\": [\n    {\n      \"delivarbles\": \"<string>\",\n      \"dueDate\": \"<dateTime>\",\n      \"amount\": \"<number>\",\n      \"technicalEvaluationId\": \"<string>\"\n    },\n    {\n      \"delivarbles\": \"<string>\",\n      \"dueDate\": \"<dateTime>\",\n      \"amount\": \"<number>\",\n      \"technicalEvaluationId\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/procurement/bids/technical/create"
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														},
														{
															"id": "334a3453-0464-4446-a6e6-41cd6db445ec",
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"declaration\": \"<boolean>\",\n  \"tenderBidId\": \"<string>\",\n  \"technicalEvaluationDelivarable\": [\n    {\n      \"delivarbles\": \"<string>\",\n      \"dueDate\": \"<dateTime>\",\n      \"amount\": \"<number>\",\n      \"technicalEvaluationId\": \"<string>\"\n    },\n    {\n      \"delivarbles\": \"<string>\",\n      \"dueDate\": \"<dateTime>\",\n      \"amount\": \"<number>\",\n      \"technicalEvaluationId\": \"<string>\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": "{{baseUrl}}/api/procurement/bids/technical/create"
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"responseTime": null,
															"body": ""
														}
													]
												}
											],
											"id": "6a4ae1af-749e-43c7-8dcc-9647f2072eb3"
										},
										{
											"name": "Anp Procurement Features Bids Get A Bid Technical Endpoint",
											"id": "f53315a0-6256-47d0-9e80-0ba91461165a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/bids/technical?tenderBidId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"bids",
														"technical"
													],
													"query": [
														{
															"key": "tenderBidId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "100e8c95-3851-4e6d-8528-8c067070a564",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/bids/technical?tenderBidId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"bids",
																"technical"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "tenderBidId",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "193fa381-7f89-4827-b7fc-9d1c6e159d13",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/bids/technical?tenderBidId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"bids",
																"technical"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "tenderBidId",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "47a2c8ff-e931-4210-ac04-c964f64b3a46",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/bids/technical?tenderBidId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"bids",
																"technical"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "tenderBidId",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "d5a104b5-fc93-4573-ab1a-f84725cb900e"
								},
								{
									"name": "applicants",
									"item": [
										{
											"name": "Anp Procurement Features Bids Get Bid Applicants Endpoint",
											"id": "3d3e8625-5076-4bd4-8003-61a11c3a7279",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/bids/applicants?serviceInformationId=<string>&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"bids",
														"applicants"
													],
													"query": [
														{
															"key": "serviceInformationId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "pageNumber",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "46d931aa-ca2f-4876-ac71-1f54bba0ae7b",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/bids/applicants?serviceInformationId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"bids",
																"applicants"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "serviceInformationId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "265b4ec8-de20-40a3-91db-4d8e6aa42764",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/bids/applicants?serviceInformationId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"bids",
																"applicants"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "serviceInformationId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "e1d52dd9-f148-4216-b9c6-edb8a9a51b4a",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/bids/applicants?serviceInformationId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"bids",
																"applicants"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "serviceInformationId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "ee5c5514-111e-416a-8bbe-aae9d2333a30"
								},
								{
									"name": "detail",
									"item": [
										{
											"name": "Anp Procurement Features Bids Get Bid Detail Endpoint",
											"id": "2abbf890-43ac-4868-9a8c-4af359a09c15",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/bids/detail?tenderBidId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"bids",
														"detail"
													],
													"query": [
														{
															"key": "tenderBidId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "93307192-8970-47d7-a011-f9d47624d32b",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/bids/detail?tenderBidId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"bids",
																"detail"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "tenderBidId",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "d3ca9856-8844-4f3a-a0e5-0da25b4d5391",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/bids/detail?tenderBidId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"bids",
																"detail"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "tenderBidId",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "6baa67d5-8022-46ee-9a56-64cdcfa03675",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/bids/detail?tenderBidId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"bids",
																"detail"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "tenderBidId",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "8a90bb54-92c0-4ed7-a516-97ade832536b"
								}
							],
							"id": "20ec5fe4-ef44-4b59-b0e9-2e6238658788"
						},
						{
							"name": "requestForAccess",
							"item": [
								{
									"name": "Anp Procurement Features Bids Create Tender Access Endpoint",
									"id": "47c22ecc-9333-4c6f-8ad5-3ad123553da2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"supplierId\": \"<string>\",\n  \"requestAccess\": \"<boolean>\",\n  \"isFavorite\": \"<boolean>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/procurement/requestForAccess"
									},
									"response": [
										{
											"id": "3f09583c-3ee6-4edc-a758-3c664adc215b",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"supplierId\": \"<string>\",\n  \"requestAccess\": \"<boolean>\",\n  \"isFavorite\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/requestForAccess"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "cba19d9c-e941-4166-a724-97511eeeb773",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"supplierId\": \"<string>\",\n  \"requestAccess\": \"<boolean>\",\n  \"isFavorite\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/requestForAccess"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "ddf9be4a-d557-4a80-8cc6-f9a828a60057",
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"supplierId\": \"<string>\",\n  \"requestAccess\": \"<boolean>\",\n  \"isFavorite\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/requestForAccess"
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "2b49b24b-85aa-4ece-8a14-920e392e016d"
						},
						{
							"name": "supplier",
							"item": [
								{
									"name": "bids",
									"item": [
										{
											"name": "Anp Procurement Features Bids Get All Bids Endpoint",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8d95e2d2-f50f-4367-99ca-ed43142b0850",
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"var responseJSON = pm.response.json(); \r",
															"\r",
															"pm.test(\"Verify that user profile is returned\", function () {\r",
															"\r",
															"    pm.expect(responseJSON.isSuccess).to.be.a(\"boolean\");\r",
															"    pm.expect(responseJSON.data.email).to.be.a(\"string\").and.not.empty;\r",
															"    pm.expect(responseJSON.data.userName).to.be.a(\"string\").and.not.empty;\r",
															"        pm.expect(responseJSON.data.phoneNumber).to.be.a(\"string\").and.not.empty;\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "17135d38-c194-4751-ac96-51c72c040d90",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/supplier/bids?supplierId={{supplierId}}&pageNumber=1&pageSize=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"supplier",
														"bids"
													],
													"query": [
														{
															"key": "supplierId",
															"value": "{{supplierId}}"
														},
														{
															"key": "pageNumber",
															"value": "1",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "10",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "c8956704-d6aa-4f4e-a99d-4b2dbbd73408",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/supplier/bids?supplierId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"supplier",
																"bids"
															],
															"query": [
																{
																	"key": "supplierId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "dc6632e7-04de-4d4f-90da-b53f6efde32e",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/supplier/bids?supplierId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"supplier",
																"bids"
															],
															"query": [
																{
																	"key": "supplierId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "6acd0315-12f9-489f-b6f4-59b704343d69",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/supplier/bids?supplierId=<string>&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"supplier",
																"bids"
															],
															"query": [
																{
																	"key": "supplierId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "c7d74c55-7416-42b4-a453-98747ff2b237"
								},
								{
									"name": "tenders",
									"item": [
										{
											"name": "Anp Procurement Features Bids Get Supplier Tenders Endpoint",
											"id": "2eddbda0-14ce-41f4-bafc-2f1e6b791908",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/supplier/tenders?supplierId=<string>&sort=0&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"supplier",
														"tenders"
													],
													"query": [
														{
															"key": "supplierId",
															"value": "<string>"
														},
														{
															"key": "sort",
															"value": "0",
															"description": "(Required) "
														},
														{
															"key": "pageNumber",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "<integer>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "f7edbb80-9533-4889-9fe6-c709bfe8ba68",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/supplier/tenders?supplierId=<string>&sort=0&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"supplier",
																"tenders"
															],
															"query": [
																{
																	"key": "supplierId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "sort",
																	"value": "0"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "f0a2a85f-db2f-45dd-9519-91f4353a8697",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/supplier/tenders?supplierId=<string>&sort=0&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"supplier",
																"tenders"
															],
															"query": [
																{
																	"key": "supplierId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "sort",
																	"value": "0"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "06df66f7-ad50-4f36-8aa9-41ecba2737f2",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/supplier/tenders?supplierId=<string>&sort=0&pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"supplier",
																"tenders"
															],
															"query": [
																{
																	"key": "supplierId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "sort",
																	"value": "0"
																},
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "59a7d10e-8131-48a4-9246-92004ae62984"
								}
							],
							"id": "6441483d-d9f2-4590-9af5-453c36102804"
						},
						{
							"name": "proposal",
							"item": [
								{
									"name": "detail",
									"item": [
										{
											"name": "Anp Procurement Features Bids Get Tender Access Detail Endpoint",
											"id": "0efcc478-eb33-4585-9e18-62a9faf8e34f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/proposal/detail?serviceInformationId=<string>&isView=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"proposal",
														"detail"
													],
													"query": [
														{
															"key": "serviceInformationId",
															"value": "<string>",
															"description": "(Required) "
														},
														{
															"key": "isView",
															"value": "<boolean>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "2a37ab8b-a38d-47aa-90b3-1690ec56db7e",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/proposal/detail?serviceInformationId=<string>&isView=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"proposal",
																"detail"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "serviceInformationId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "isView",
																	"value": "<boolean>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "e5936b07-e205-409b-9fd2-28628eaac5f8",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/proposal/detail?serviceInformationId=<string>&isView=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"proposal",
																"detail"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "serviceInformationId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "isView",
																	"value": "<boolean>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "ca84af40-249e-47d5-af0c-03c55c389463",
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurement/proposal/detail?serviceInformationId=<string>&isView=<boolean>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurement",
																"proposal",
																"detail"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "serviceInformationId",
																	"value": "<string>"
																},
																{
																	"description": "(Required) ",
																	"key": "isView",
																	"value": "<boolean>"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "d3ebd0c0-fe7d-4cf8-810d-c3670083f5d8"
								}
							],
							"id": "9e9a849f-ca16-4256-88a7-f1a9d2059cb2"
						},
						{
							"name": "proposals",
							"item": [
								{
									"name": "Anp Procurement Features Bids Get Tender Access Endpoint",
									"id": "963f0c69-b8c2-47ee-b86d-197d6e4d74ec",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/procurement/proposals?pageNumber=<integer>&pageSize=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"procurement",
												"proposals"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "f9bfa08b-bafc-4ded-9b5a-0749c6dfe611",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/proposals?pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"proposals"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "627286c4-5358-4d86-ac84-e54d4ad0f763",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/proposals?pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"proposals"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "7549ecdc-010c-42bc-8622-a90039a324a9",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/procurement/proposals?pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurement",
														"proposals"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "94714cbb-1887-4657-aaef-3cd557735a6c"
						},
						{
							"name": "allow",
							"item": [
								{
									"name": "access",
									"item": [
										{
											"name": "Anp Procurement Features Bids Process Acess Endpoint",
											"id": "9fe10e06-0a29-4469-a9e7-dd0084d09ee2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tenderAccessId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/allow/access"
											},
											"response": [
												{
													"id": "be263e15-f684-4832-8fff-daecdce9da63",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderAccessId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/allow/access"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "91cd8617-1b0b-4f17-8737-11e9756882ad",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderAccessId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/allow/access"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "293910d2-f26f-487a-a583-bb04c6d824a5",
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderAccessId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/allow/access"
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "9542240a-1232-4111-a90e-09ad7151ebe6"
								},
								{
									"name": "proposal",
									"item": [
										{
											"name": "Anp Procurement Features Bids Process Rfp Endpoint",
											"id": "c54b9c0b-18c7-44ef-8366-96201e31a73c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tenderAccessId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/allow/proposal"
											},
											"response": [
												{
													"id": "eea31a80-b151-42e7-9633-05b94992a555",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderAccessId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/allow/proposal"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "db0e011b-f91b-447a-932f-150ac87d501f",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderAccessId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/allow/proposal"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "9f732184-9316-429b-81ed-4b13c7a0aa7d",
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderAccessId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurement/allow/proposal"
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "36c298cc-05ca-49bf-9ea3-5005eca1c8d2"
								}
							],
							"id": "9c70bf83-5003-443d-a4d2-a21c567339a9"
						}
					],
					"id": "20522282-70a8-4ae1-8141-98d8a069c16b"
				},
				{
					"name": "procurement",
					"item": [
						{
							"name": "create",
							"item": [
								{
									"name": "Anp Procurement Features Service Information Create Endpoint1",
									"id": "dc45a175-1144-419a-81d1-815d1eb06ac9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/procurement/create"
									},
									"response": [
										{
											"id": "ab1a7f0b-12ba-4989-a50e-b4717695f3d8",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/create"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "b3c8def2-6af6-45dd-9c53-357ebe101c93",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/create"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "770566d1-cc9a-48ca-a30e-0de8fd6991cd"
						},
						{
							"name": "edit",
							"item": [
								{
									"name": "Anp Procurement Features Service Information Create Endpoint2",
									"id": "b6ddb346-ff03-4c54-a3ad-467df7929b32",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/procurement/edit"
									},
									"response": [
										{
											"id": "860e0f1d-b269-4f9d-a324-7e666d76367a",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/edit"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "57f786c3-db6b-4cd2-8285-60ba6481024a",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serviceInformationId\": \"<string>\",\n  \"title\": \"<string>\",\n  \"bidStartDate\": \"<dateTime>\",\n  \"bidEndDate\": \"<dateTime>\",\n  \"description\": \"<string>\",\n  \"bidRequirement\": \"<string>\",\n  \"prerequisite\": \"<string>\",\n  \"workReference\": \"<string>\",\n  \"additionalInformation\": \"<string>\",\n  \"industryId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurement/edit"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "c1b1a4b1-3804-4f7b-bba1-c8dee9fe03d2"
						}
					],
					"id": "dae1c0f2-cc3a-4f39-a5c1-500b1f6470c6",
					"description": "Regulator and operator creates procurement\n\nRegulator approves procurement"
				},
				{
					"name": "procurementProjects",
					"item": [
						{
							"name": "TenderDocument",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Anp Procurement Features Service Information Create Tender Document Endpoint1",
											"id": "6ed1fa02-8cca-4472-8a4b-724f9fc90e2b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tenderDocumentId\": \"<string>\",\n  \"documentName\": \"<string>\",\n  \"assignPoint\": \"<integer>\",\n  \"tenderDocumentType\": 2,\n  \"serviceInformationId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurementProjects/TenderDocument/create"
											},
											"response": [
												{
													"id": "325471b4-dae7-40cd-a11c-3b7c7b5f3e5c",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderDocumentId\": \"<string>\",\n  \"documentName\": \"<string>\",\n  \"assignPoint\": \"<integer>\",\n  \"tenderDocumentType\": 2,\n  \"serviceInformationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurementProjects/TenderDocument/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "3863ba62-9bf6-4ee6-b0fa-de6d51261190",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderDocumentId\": \"<string>\",\n  \"documentName\": \"<string>\",\n  \"assignPoint\": \"<integer>\",\n  \"tenderDocumentType\": 2,\n  \"serviceInformationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurementProjects/TenderDocument/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "a5b84e6b-a459-493a-8f14-de33b9d9379d"
								},
								{
									"name": "edit",
									"item": [
										{
											"name": "Anp Procurement Features Service Information Create Tender Document Endpoint2",
											"id": "ebe70026-4ef7-49f5-857d-7b619b3e4855",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tenderDocumentId\": \"<string>\",\n  \"documentName\": \"<string>\",\n  \"assignPoint\": \"<integer>\",\n  \"tenderDocumentType\": 2,\n  \"serviceInformationId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurementProjects/TenderDocument/edit"
											},
											"response": [
												{
													"id": "03c40112-65f0-4861-ab23-8d37aff68843",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderDocumentId\": \"<string>\",\n  \"documentName\": \"<string>\",\n  \"assignPoint\": \"<integer>\",\n  \"tenderDocumentType\": 2,\n  \"serviceInformationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurementProjects/TenderDocument/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "3633bf7b-22cf-494b-9658-ccea8adfbf7e",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderDocumentId\": \"<string>\",\n  \"documentName\": \"<string>\",\n  \"assignPoint\": \"<integer>\",\n  \"tenderDocumentType\": 2,\n  \"serviceInformationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurementProjects/TenderDocument/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "7f232c8f-1537-4ac0-9c81-ab685de0cb27"
								}
							],
							"id": "b9fd9982-e1da-4478-845e-19c856e28dcf"
						},
						{
							"name": "TenderGoodsService",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Anp Procurement Features Service Information Create Tender Goods Service Endpoint1",
											"id": "415d2054-1888-4b2e-8d1b-ef913d7ba811",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tenderGoodsServicesId\": \"<string>\",\n  \"itemName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"estimatedCost\": \"<number>\",\n  \"procurementMethod\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantyType\": \"<string>\",\n  \"serviceInformationId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurementProjects/TenderGoodsService/create"
											},
											"response": [
												{
													"id": "5fbf6201-dbc2-41a4-8c4d-5ca5545b4208",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderGoodsServicesId\": \"<string>\",\n  \"itemName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"estimatedCost\": \"<number>\",\n  \"procurementMethod\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantyType\": \"<string>\",\n  \"serviceInformationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurementProjects/TenderGoodsService/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "792f517e-6504-4e43-b75d-585a05ba53da",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderGoodsServicesId\": \"<string>\",\n  \"itemName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"estimatedCost\": \"<number>\",\n  \"procurementMethod\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantyType\": \"<string>\",\n  \"serviceInformationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurementProjects/TenderGoodsService/create"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "7a5c2198-7895-4b88-8873-f49944056734"
								},
								{
									"name": "edit",
									"item": [
										{
											"name": "Anp Procurement Features Service Information Create Tender Goods Service Endpoint2",
											"id": "5e8bcfb7-2055-489b-85ec-9bb0ff0fdad0",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tenderGoodsServicesId\": \"<string>\",\n  \"itemName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"estimatedCost\": \"<number>\",\n  \"procurementMethod\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantyType\": \"<string>\",\n  \"serviceInformationId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/procurementProjects/TenderGoodsService/edit"
											},
											"response": [
												{
													"id": "8d19a7be-b367-4c24-92f6-31c51eff984e",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderGoodsServicesId\": \"<string>\",\n  \"itemName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"estimatedCost\": \"<number>\",\n  \"procurementMethod\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantyType\": \"<string>\",\n  \"serviceInformationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurementProjects/TenderGoodsService/edit"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "2096dec5-97bd-4b94-bdc4-34ad2197dffc",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tenderGoodsServicesId\": \"<string>\",\n  \"itemName\": \"<string>\",\n  \"description\": \"<string>\",\n  \"quantity\": \"<integer>\",\n  \"estimatedCost\": \"<number>\",\n  \"procurementMethod\": \"<string>\",\n  \"warrantyDuration\": \"<integer>\",\n  \"warrantyType\": \"<string>\",\n  \"serviceInformationId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/procurementProjects/TenderGoodsService/edit"
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "d72d683e-0bc0-45bf-b953-3e48e4e1ac39"
								}
							],
							"id": "567e8696-9613-40e8-b1df-29404d87be20"
						},
						{
							"name": "listServiceInformation",
							"item": [
								{
									"name": "Anp Procurement Features Service Information Get All Service Information Endpoint",
									"id": "43636ad0-ad3c-42a0-bd41-fc2c71e7939b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/procurementProjects/listServiceInformation?operatorId=<string>&pageNumber=<integer>&pageSize=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"procurementProjects",
												"listServiceInformation"
											],
											"query": [
												{
													"key": "operatorId",
													"value": "<string>"
												},
												{
													"key": "pageNumber",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "83615754-7b8f-4eff-be9a-8525838f9d8b",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/procurementProjects/listServiceInformation?operatorId=<string>&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurementProjects",
														"listServiceInformation"
													],
													"query": [
														{
															"key": "operatorId",
															"value": "<string>"
														},
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "0528c29d-aade-4e88-ba37-2101658f6ebf",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/procurementProjects/listServiceInformation?operatorId=<string>&pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurementProjects",
														"listServiceInformation"
													],
													"query": [
														{
															"key": "operatorId",
															"value": "<string>"
														},
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "a5671d2e-ed59-42f9-a42b-53ddd13e6783"
						},
						{
							"name": "listTenderGoodsServices",
							"item": [
								{
									"name": "{serviceInformationId}",
									"item": [
										{
											"name": "Anp Procurement Features Service Information Get All Tender Goods Services Endpoint",
											"id": "c5507c71-c8a6-4c3f-a044-1425f02df2c6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurementProjects/listTenderGoodsServices/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurementProjects",
														"listTenderGoodsServices",
														":serviceInformationId"
													],
													"query": [
														{
															"key": "pageNumber",
															"value": "<integer>",
															"description": "(Required) "
														},
														{
															"key": "pageSize",
															"value": "<integer>",
															"description": "(Required) "
														}
													],
													"variable": [
														{
															"id": "b730714b-0a1c-4f62-992f-6bb92421a588",
															"key": "serviceInformationId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "48c83a33-9dfe-4312-9acf-d988d5393e54",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurementProjects/listTenderGoodsServices/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurementProjects",
																"listTenderGoodsServices",
																":serviceInformationId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "ab901154-827e-4a0c-849e-2b463d2f7b97",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurementProjects/listTenderGoodsServices/:serviceInformationId?pageNumber=<integer>&pageSize=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurementProjects",
																"listTenderGoodsServices",
																":serviceInformationId"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "pageNumber",
																	"value": "<integer>"
																},
																{
																	"description": "(Required) ",
																	"key": "pageSize",
																	"value": "<integer>"
																}
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "0180bdae-79ed-4366-9227-54630ce9c5ec"
								}
							],
							"id": "4d7cb102-3c07-4fa6-a122-d34607697027"
						},
						{
							"name": "getAServiceInformation",
							"item": [
								{
									"name": "{serviceInformationId}",
									"item": [
										{
											"name": "Anp Procurement Features Service Information Get A Service Information Endpoint",
											"id": "b9954a36-e15a-44fb-bea4-ba0f9cde181e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/procurementProjects/getAServiceInformation/:serviceInformationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"procurementProjects",
														"getAServiceInformation",
														":serviceInformationId"
													],
													"variable": [
														{
															"id": "c47ddf26-aa25-4ea9-8fb5-c6a52fe57926",
															"key": "serviceInformationId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "807286b6-c8e6-477c-bbda-6fc41b68a568",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurementProjects/getAServiceInformation/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurementProjects",
																"getAServiceInformation",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "6841abd1-3bc3-4939-baf3-a8ccc165606f",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/procurementProjects/getAServiceInformation/:serviceInformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"procurementProjects",
																"getAServiceInformation",
																":serviceInformationId"
															],
															"variable": [
																{
																	"key": "serviceInformationId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "934fdcf8-f083-442e-b012-41e1d6578800"
								}
							],
							"id": "269226d0-0656-4134-9919-52d30c15fa68"
						}
					],
					"id": "3925f857-9bdd-41ee-8b0e-aae1843565d1"
				},
				{
					"name": "review",
					"item": [
						{
							"name": "create",
							"item": [
								{
									"name": "Anp Goods Services Features Create Create Product Review Endpoint1",
									"id": "50fa9827-d686-4ca7-aa93-2cdf2929b36d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reviewId\": \"<string>\",\n  \"reviewerName\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"rating\": 4,\n  \"productId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/goods/review/create"
									},
									"response": [
										{
											"id": "fb1541a9-823e-47e5-a9bc-87053dea5532",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"reviewId\": \"<string>\",\n  \"reviewerName\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"rating\": 4,\n  \"productId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/review/create"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "17864410-4472-4728-8fbd-6b655399b47e",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"reviewId\": \"<string>\",\n  \"reviewerName\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"rating\": 4,\n  \"productId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/review/create"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "53db11ee-4060-479f-8726-f1a2e71ce5fc"
						},
						{
							"name": "update",
							"item": [
								{
									"name": "Anp Goods Services Features Create Create Product Review Endpoint2",
									"id": "33f35a2e-0b01-4c5a-9107-74d6443980f4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"reviewId\": \"<string>\",\n  \"reviewerName\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"rating\": 4,\n  \"productId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/goods/review/update"
									},
									"response": [
										{
											"id": "4ae73027-b9d5-486a-9c45-8d2b25257f06",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"reviewId\": \"<string>\",\n  \"reviewerName\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"rating\": 4,\n  \"productId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/review/update"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "98b2c63d-3731-43e5-bde7-56bdc42da3cf",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"reviewId\": \"<string>\",\n  \"reviewerName\": \"<string>\",\n  \"comment\": \"<string>\",\n  \"rating\": 4,\n  \"productId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/goods/review/update"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "b7adaaa1-2b3c-48b9-96f8-084966106c92"
						},
						{
							"name": "GetReview",
							"item": [
								{
									"name": "{reviewId}",
									"item": [
										{
											"name": "Anp Goods Services Features Create Get A Product Review Endpoint",
											"id": "c5e634bc-fb11-4a5c-a62d-da3012547a45",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/goods/review/GetReview/:reviewId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"goods",
														"review",
														"GetReview",
														":reviewId"
													],
													"variable": [
														{
															"id": "4d1901df-59ba-4af5-ab2c-a8aa8e9e5203",
															"key": "reviewId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "f8bffdb4-868c-4700-b630-770975b49d79",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/goods/review/GetReview/:reviewId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"goods",
																"review",
																"GetReview",
																":reviewId"
															],
															"variable": [
																{
																	"key": "reviewId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												},
												{
													"id": "128b8092-6d6e-4df0-b33f-4b7c6d3a4ec6",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/goods/review/GetReview/:reviewId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"goods",
																"review",
																"GetReview",
																":reviewId"
															],
															"variable": [
																{
																	"key": "reviewId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "d26687b2-7ff3-4532-8505-b9c9bb3422a4"
								}
							],
							"id": "7d5f9f1c-720f-47a8-90b4-37690ec81c08"
						},
						{
							"name": "getProductReviews",
							"item": [
								{
									"name": "Anp Goods Services Features Create Get Product Reviews Endpoint",
									"id": "18e03e7b-27e7-4122-b8ca-3971ce457e91",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/goods/review/getProductReviews?productId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"goods",
												"review",
												"getProductReviews"
											],
											"query": [
												{
													"key": "productId",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "d8f9ac58-67fd-4e04-9749-ed594e34117c",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/goods/review/getProductReviews?productId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"goods",
														"review",
														"getProductReviews"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "productId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "442eae1d-0bbd-4568-ba84-48b83547e1d2",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/goods/review/getProductReviews?productId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"goods",
														"review",
														"getProductReviews"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "productId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "45b2f5f8-7545-439a-a785-24edc6e50faf"
						},
						{
							"name": "getSupplierRating",
							"item": [
								{
									"name": "Anp Goods Services Features Create Get Supplier Rating Endpoint",
									"id": "83d95e0e-7fdf-4187-bd47-b5247bc5730d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/goods/review/getSupplierRating?supplierId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"goods",
												"review",
												"getSupplierRating"
											],
											"query": [
												{
													"key": "supplierId",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "3427c913-44f4-4bcb-b1c5-a56f43733848",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/goods/review/getSupplierRating?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"goods",
														"review",
														"getSupplierRating"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "fe94953d-fd21-4beb-b5eb-6bc678b917ea",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/goods/review/getSupplierRating?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"goods",
														"review",
														"getSupplierRating"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "1e7ce43e-b9bb-4705-977a-dfbde98f486f"
						},
						{
							"name": "getSupplierReview",
							"item": [
								{
									"name": "Anp Goods Services Features Create Get Supplier Review Endpoint",
									"id": "1669be11-d429-495e-b93f-694950df90c1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/goods/review/getSupplierReview?supplierId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"goods",
												"review",
												"getSupplierReview"
											],
											"query": [
												{
													"key": "supplierId",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "aaba1e1f-be6b-442b-9802-7f2c3a3020f4",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/goods/review/getSupplierReview?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"goods",
														"review",
														"getSupplierReview"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "629fe01c-a6de-455e-8286-82b32a3b5600",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/goods/review/getSupplierReview?supplierId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"goods",
														"review",
														"getSupplierReview"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "supplierId",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "58bc993e-fe99-407c-b3b0-d7c095230db1"
						}
					],
					"id": "90d3ea8f-a9f5-4303-ac6a-757c41c9f500"
				},
				{
					"name": "operator",
					"item": [
						{
							"name": "create",
							"item": [
								{
									"name": "Create a new Operator",
									"id": "fa769dfb-6040-4be4-82c2-1491f818cb9c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"organizationName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"regNumber\": \"<string>\",\n  \"addressLine1\": \"<string>\",\n  \"addressLine2\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/operator/create"
									},
									"response": [
										{
											"id": "1181b028-778a-4aef-b66c-5bf7ec810eda",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"organizationName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"regNumber\": \"<string>\",\n  \"addressLine1\": \"<string>\",\n  \"addressLine2\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/operator/create"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"id": "c0991fc3-b5c2-40f3-813d-5c1f6ec89b3a",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"organizationName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"regNumber\": \"<string>\",\n  \"addressLine1\": \"<string>\",\n  \"addressLine2\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/operator/create"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								},
								{
									"name": "No auth - Create a new Operator",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "34608816-bb4f-44e5-bec8-066b5428ad6c",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code name has 'Unauthorized'\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "be560536-2c86-4b7a-972b-2d4394da2db1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"organizationName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"regNumber\": \"<string>\",\n  \"addressLine1\": \"<string>\",\n  \"addressLine2\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/operator/create"
									},
									"response": [
										{
											"id": "24f11c26-e472-4196-9a11-4b7a7d8f9ef1",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"organizationName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"regNumber\": \"<string>\",\n  \"addressLine1\": \"<string>\",\n  \"addressLine2\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/operator/create"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"id": "dce958ce-8006-466f-9506-a8cd459ab2ed",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"organizationName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"regNumber\": \"<string>\",\n  \"addressLine1\": \"<string>\",\n  \"addressLine2\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/operator/create"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "f32125eb-cdd1-44a5-99f3-13069da84a7b"
						},
						{
							"name": "{operatorId}",
							"item": [
								{
									"name": "Delete Operator",
									"id": "41e932a8-cacc-4d31-b237-021dac8a0d6e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/operator/:operatorId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"operator",
												":operatorId"
											],
											"variable": [
												{
													"id": "ce2dbcfa-2294-4631-9b25-9fcee849ee46",
													"key": "operatorId",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										},
										"description": "Delete and IOC Operator"
									},
									"response": [
										{
											"id": "4a341234-7c0f-4f7f-853b-c9d8cec8d7ca",
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/operator/:operatorId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"operator",
														":operatorId"
													],
													"variable": [
														{
															"key": "operatorId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "efca9c95-92df-42c9-80ba-763bb63dde13",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/operator/:operatorId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"operator",
														":operatorId"
													],
													"variable": [
														{
															"key": "operatorId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "b126e14a-e726-467b-b414-18351a0adacd"
						},
						{
							"name": "edit",
							"item": [
								{
									"name": "Update an IOC Operator",
									"id": "6def74c0-4f6d-4766-992f-3af400cc699f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"organizationId\": \"<string>\",\n  \"organizationName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"regNumber\": \"<string>\",\n  \"addressLine1\": \"<string>\",\n  \"addressLine2\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/operator/edit",
										"description": "Update an IOC Operator"
									},
									"response": [
										{
											"id": "5aab6595-f800-4947-8e79-03e59df50ef1",
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"organizationId\": \"<string>\",\n  \"organizationName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"regNumber\": \"<string>\",\n  \"addressLine1\": \"<string>\",\n  \"addressLine2\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/operator/edit"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"message\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
										},
										{
											"id": "d9ea10ba-ee0b-4b8f-8942-d6904e4c685e",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"organizationId\": \"<string>\",\n  \"organizationName\": \"<string>\",\n  \"dateOfEstablishment\": \"<dateTime>\",\n  \"businessType\": \"<string>\",\n  \"country\": \"<string>\",\n  \"regNumber\": \"<string>\",\n  \"addressLine1\": \"<string>\",\n  \"addressLine2\": \"<string>\",\n  \"region\": \"<string>\",\n  \"city\": \"<string>\",\n  \"town\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"website\": \"<string>\",\n  \"email\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/operator/edit"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "35a5bfc3-ffc1-454b-89d2-34ec6ecfabff"
						},
						{
							"name": "list",
							"item": [
								{
									"name": "ANP Web Api Features Operator Get All Operator Endpoint",
									"id": "b1f48964-ab80-4b29-aa3c-735dbb419038",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/operator/list?pageNumber=<integer>&pageSize=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"operator",
												"list"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "<integer>",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "<integer>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "60075e50-b604-4f1f-bdd6-219742c6774d",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/operator/list?pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"operator",
														"list"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"pageNumber\": \"<integer>\",\n  \"pageSize\": \"<integer>\",\n  \"totalRecords\": \"<integer>\",\n  \"data\": [\n    {\n      \"organizationId\": \"<string>\",\n      \"organizationName\": \"<string>\",\n      \"dateOfEstablishment\": \"<dateTime>\",\n      \"businessType\": \"<string>\",\n      \"country\": \"<string>\",\n      \"regNumber\": \"<string>\",\n      \"addressLine1\": \"<string>\",\n      \"addressLine2\": \"<string>\",\n      \"region\": \"<string>\",\n      \"city\": \"<string>\",\n      \"town\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"website\": \"<string>\",\n      \"email\": \"<string>\"\n    },\n    {\n      \"organizationId\": \"<string>\",\n      \"organizationName\": \"<string>\",\n      \"dateOfEstablishment\": \"<dateTime>\",\n      \"businessType\": \"<string>\",\n      \"country\": \"<string>\",\n      \"regNumber\": \"<string>\",\n      \"addressLine1\": \"<string>\",\n      \"addressLine2\": \"<string>\",\n      \"region\": \"<string>\",\n      \"city\": \"<string>\",\n      \"town\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"website\": \"<string>\",\n      \"email\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"id": "c073094b-1c25-4e7e-a5c3-e1640eb8a300",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/operator/list?pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"operator",
														"list"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "ffcb6063-947f-4f9e-9f20-ada277c7c8e6"
						},
						{
							"name": "Operator",
							"item": [
								{
									"name": "GetAOperator",
									"item": [
										{
											"name": "Get a IOC Organization",
											"id": "f71ddfd9-eac7-42ec-b076-ad1c6e7d7e73",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/operator/Operator/GetAOperator?operatorId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"operator",
														"Operator",
														"GetAOperator"
													],
													"query": [
														{
															"key": "operatorId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Get a IOC Organization"
											},
											"response": [
												{
													"id": "49c9f6c9-02e5-4e33-bd5b-b3818ee51664",
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/operator/Operator/GetAOperator?operatorId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"operator",
																"Operator",
																"GetAOperator"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "operatorId",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"isSuccess\": \"<boolean>\",\n  \"data\": {\n    \"organizationId\": \"<string>\",\n    \"organizationName\": \"<string>\",\n    \"dateOfEstablishment\": \"<dateTime>\",\n    \"businessType\": \"<string>\",\n    \"country\": \"<string>\",\n    \"regNumber\": \"<string>\",\n    \"addressLine1\": \"<string>\",\n    \"addressLine2\": \"<string>\",\n    \"region\": \"<string>\",\n    \"city\": \"<string>\",\n    \"town\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"website\": \"<string>\",\n    \"email\": \"<string>\"\n  },\n  \"errorMessage\": \"<string>\"\n}"
												},
												{
													"id": "0bee6a61-75d1-47b1-a503-5291e74f6a63",
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/operator/Operator/GetAOperator?operatorId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"operator",
																"Operator",
																"GetAOperator"
															],
															"query": [
																{
																	"description": "(Required) ",
																	"key": "operatorId",
																	"value": "<string>"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "43cc9782-9f3c-4307-8845-241e1da5e01f"
								}
							],
							"id": "ac64b658-b68b-42d1-880a-c8d79fa1dbcd"
						}
					],
					"id": "892d1054-674b-4507-bc2f-0b6a2e64a52c"
				},
				{
					"name": "lang",
					"item": [
						{
							"name": "all-langs",
							"item": [
								{
									"name": "Anp Language Features List Get All Language Conversions Endpoint",
									"id": "21db5706-89e9-4791-a578-12a98d80babb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/lang/all-langs?pageNumber=1&pageSize=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"lang",
												"all-langs"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "1",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "10",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "0da9ee31-b87d-4594-a98a-9034f82fd71b",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/lang/all-langs?pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"lang",
														"all-langs"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "772b7d6a-121b-48da-8acc-b95b5840befd"
						},
						{
							"name": "notifications",
							"item": [
								{
									"name": "In-app notifications",
									"id": "826198a5-9237-4432-902c-3eebee710e27",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/lang/notifications?pageNumber=1&pageSize=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"lang",
												"notifications"
											],
											"query": [
												{
													"key": "pageNumber",
													"value": "1",
													"description": "(Required) "
												},
												{
													"key": "pageSize",
													"value": "10",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "6175a920-4458-40f1-8132-4cf99ca57997",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/lang/notifications?pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"lang",
														"notifications"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "363caf5b-19eb-4d99-8c44-0d31acb898cb",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/lang/notifications?pageNumber=<integer>&pageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"lang",
														"notifications"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "pageNumber",
															"value": "<integer>"
														},
														{
															"description": "(Required) ",
															"key": "pageSize",
															"value": "<integer>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "a8e64008-ca21-4955-b7de-35a3c3e53101"
						},
						{
							"name": "supported-languages",
							"item": [
								{
									"name": "Anp Language Features List Get Supported Language Endpoint",
									"id": "eebe55c5-8aa0-4ab4-ba3f-1a2ba6e4a84e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{baseUrl}}/api/lang/supported-languages"
									},
									"response": [
										{
											"id": "56f2a5d3-aa4c-419d-9b5b-c444d68997b6",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": "{{baseUrl}}/api/lang/supported-languages"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "be40f11a-ec69-490f-9dcb-ef5423b52ae5"
						},
						{
							"name": "create",
							"item": [
								{
									"name": "Anp Language Features Create Create Language Conversion Endpoint1",
									"id": "1395f549-9857-4301-9dc3-996a9e12d1a9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"languageId\": \"<string>\",\n  \"key\": \"<string>\",\n  \"culture\": \"<string>\",\n  \"messageValue\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/lang/create"
									},
									"response": [
										{
											"id": "264a6c36-79a9-448e-8f7d-1d1b94154705",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"languageId\": \"<string>\",\n  \"key\": \"<string>\",\n  \"culture\": \"<string>\",\n  \"messageValue\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/lang/create"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "3bab3d15-2153-45cb-8265-ba8c3b557aa3"
						},
						{
							"name": "edit",
							"item": [
								{
									"name": "Anp Language Features Create Create Language Conversion Endpoint2",
									"id": "dc587460-d946-49d3-93c7-a164a83a17e2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"languageId\": \"<string>\",\n  \"key\": \"<string>\",\n  \"culture\": \"<string>\",\n  \"messageValue\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/lang/edit"
									},
									"response": [
										{
											"id": "62dfc60d-7920-4ea1-8ac6-07eebc697b2c",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"languageId\": \"<string>\",\n  \"key\": \"<string>\",\n  \"culture\": \"<string>\",\n  \"messageValue\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/lang/edit"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "d308b2e2-843b-4867-8035-bd6ca21c4e15"
						},
						{
							"name": "file",
							"item": [
								{
									"name": "create",
									"item": [
										{
											"name": "Anp Language Features Create File Resource Endpoint",
											"id": "7df3eb84-f80e-4056-a07e-ce2f84d29c78",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"lang\": \"<string>\",\n  \"resourceEntries\": {\n    \"sunt_e98\": \"<string>\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/lang/file/create"
											},
											"response": [
												{
													"id": "79ffc291-8853-4a6e-87c9-a78ce942c722",
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"lang\": \"<string>\",\n  \"resourceEntries\": {\n    \"sunt_e98\": \"<string>\"\n  }\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": "{{baseUrl}}/api/lang/file/create"
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "d2afcfd7-7796-4534-942a-5f7b7c8252c7"
								}
							],
							"id": "f31cd534-d4f6-4b27-bdcd-4ef29970bc42"
						}
					],
					"id": "a1928d27-9fb5-450a-92f9-2a965dce3ff0"
				},
				{
					"name": "edms",
					"item": [
						{
							"name": "image",
							"item": [
								{
									"name": "{documentId}",
									"item": [
										{
											"name": "Anp Edms Features Delete Image Endpoint",
											"id": "0c84a04e-de16-4cc3-9d66-5033be2949b4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/edms/image/:documentId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"edms",
														"image",
														":documentId"
													],
													"variable": [
														{
															"id": "80cf5ad1-2ba3-479f-a426-5d1a51558354",
															"key": "documentId",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"id": "43a47ec7-45f8-4501-a428-e034d2555466",
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/api/edms/image/:documentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"edms",
																"image",
																":documentId"
															],
															"variable": [
																{
																	"key": "documentId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"responseTime": null,
													"body": ""
												}
											]
										}
									],
									"id": "a0a01c80-2f66-482c-8c21-e01b2f7598c2"
								}
							],
							"id": "22280666-ae6f-4025-8206-1c7b35d739bc"
						},
						{
							"name": "getDocuments",
							"item": [
								{
									"name": "Anp Edms Features Get Documents Endpoint",
									"id": "35760d6a-7e29-43e4-8612-0156a160d35d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/edms/getDocuments?fileNames=<string>&fileNames=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"edms",
												"getDocuments"
											],
											"query": [
												{
													"key": "fileNames",
													"value": "<string>",
													"description": "(Required) "
												},
												{
													"key": "fileNames",
													"value": "<string>",
													"description": "(Required) "
												}
											]
										}
									},
									"response": [
										{
											"id": "2efcd7d2-f461-45d3-941d-142ab1bb50ef",
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/edms/getDocuments?fileNames=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"edms",
														"getDocuments"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "fileNames",
															"value": "<string>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										},
										{
											"id": "5be5cca7-9efb-4dc0-8471-827dc11f05d0",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/edms/getDocuments?fileNames=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"edms",
														"getDocuments"
													],
													"query": [
														{
															"description": "(Required) ",
															"key": "fileNames",
															"value": "<string>"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "ef07a7e2-d80d-40be-93f2-e748938a255d"
						},
						{
							"name": "imageUpload",
							"item": [
								{
									"name": "Anp Edms Features Image Upload Endpoint",
									"id": "89e1f841-e4cb-4a90-a833-2fa5623fbc3d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "entityId",
													"value": "a151f408-ee5c-4142-a909-08dd3b014fd2",
													"type": "text",
													"description": "productId"
												},
												{
													"description": " (This can only be one of 0,1,2,3,4)",
													"key": "module",
													"value": "0",
													"type": "text"
												},
												{
													"key": "documentTypeName",
													"value": "ProductImages",
													"type": "text"
												},
												{
													"key": "files",
													"type": "file",
													"uuid": "dc2af9ba-9412-4e2b-b4db-5f6c725dc1bf",
													"src": "-NPhyPcgA/Screenshot (9).png"
												}
											]
										},
										"url": "{{baseUrl}}/api/edms/imageUpload"
									},
									"response": [
										{
											"id": "97b96c22-4372-43a3-a168-a17be44c8d04",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "entityId",
															"value": "<string>",
															"type": "text"
														},
														{
															"description": " (This can only be one of 0,1,2,3,4)",
															"key": "module",
															"value": "1",
															"type": "text"
														},
														{
															"key": "documentTypeName",
															"value": "<string>",
															"type": "text"
														}
													]
												},
												"url": "{{baseUrl}}/api/edms/imageUpload"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "4e8d35a2-886b-4a1d-abb0-c06110c3f21c"
						},
						{
							"name": "uploadDocument",
							"item": [
								{
									"name": "Anp Edms Features Upload Document Endpoint",
									"id": "2553e9a4-97bb-413f-9eb6-11af41a6f95b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "entityId",
													"value": "<string>",
													"type": "text",
													"description": "supplierid"
												},
												{
													"description": " (This can only be one of 0,1,2,3,4)",
													"key": "module",
													"value": "4",
													"type": "text"
												},
												{
													"key": "documentTypeName",
													"value": "<string>",
													"type": "text"
												},
												{
													"key": "file",
													"type": "file",
													"value": null
												}
											]
										},
										"url": "{{baseUrl}}/api/edms/uploadDocument"
									},
									"response": [
										{
											"id": "8c6ec1eb-f37e-440b-95ed-ef3cf43ef6e5",
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "entityId",
															"value": "<string>",
															"type": "text"
														},
														{
															"description": " (This can only be one of 0,1,2,3,4)",
															"key": "module",
															"value": "4",
															"type": "text"
														},
														{
															"key": "documentTypeName",
															"value": "<string>",
															"type": "text"
														},
														{
															"key": "file",
															"type": "file",
															"src": []
														}
													]
												},
												"url": "{{baseUrl}}/api/edms/uploadDocument"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"responseTime": null,
											"body": ""
										}
									]
								}
							],
							"id": "9ecc2829-30a6-4b4d-b1fc-1692d0996e16"
						}
					],
					"id": "ebfbd94c-e98b-49c4-8bb3-20791a61d249"
				}
			],
			"id": "88171bb4-b876-4dc5-9ab5-2ddd915cab73"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "fb974632-5419-42dc-9ccb-e42a6ad7f32f",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "7b3a0ed6-2b39-44f8-bfee-05ca3d4f4ae9",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.limsaa.org"
		},
		{
			"key": "phonenumber",
			"value": ""
		},
		{
			"key": "signUpEmail",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "refreshToken",
			"value": ""
		},
		{
			"key": "bearerToken",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "supplierId",
			"value": ""
		},
		{
			"key": "shareholderId",
			"value": ""
		},
		{
			"key": "projectId",
			"value": ""
		},
		{
			"key": "personalId",
			"value": ""
		},
		{
			"key": "contactId",
			"value": ""
		},
		{
			"key": "awardId",
			"value": ""
		},
		{
			"key": "roleId",
			"value": ""
		},
		{
			"key": "signedUpEmail",
			"value": ""
		},
		{
			"key": "supplierUserId",
			"value": ""
		},
		{
			"key": "requestId",
			"value": ""
		},
		{
			"key": "workflowParameterId",
			"value": ""
		},
		{
			"key": "workflowId",
			"value": ""
		},
		{
			"key": "workflowCommandId",
			"value": ""
		},
		{
			"key": "initiatorBearerToken",
			"value": ""
		},
		{
			"key": "initiatorRefreshToken",
			"value": ""
		},
		{
			"key": "approverBearerToken",
			"value": ""
		},
		{
			"key": "approverRefreshToken",
			"value": ""
		},
		{
			"key": "approverUserId",
			"value": ""
		},
		{
			"key": "secondApproverBearerToken",
			"value": ""
		},
		{
			"key": "secondApproverRefreshToken",
			"value": ""
		},
		{
			"key": "secondApproverUserId",
			"value": ""
		},
		{
			"key": "categoryId",
			"value": ""
		},
		{
			"key": "tagId1",
			"value": "",
			"disabled": true
		},
		{
			"key": "tagId2",
			"value": "",
			"disabled": true
		},
		{
			"key": "productId",
			"value": ""
		},
		{
			"key": "orderId",
			"value": ""
		},
		{
			"key": "itemId",
			"value": ""
		},
		{
			"key": "tagId1",
			"value": ""
		},
		{
			"key": "tagId2",
			"value": ""
		},
		{
			"key": "initiatorUserId",
			"value": ""
		},
		{
			"key": "industryId",
			"value": ""
		},
		{
			"key": "serviceInformationId",
			"value": ""
		},
		{
			"key": "tenderDocumentId",
			"value": ""
		},
		{
			"key": "tenderGoodsServiceId",
			"value": ""
		},
		{
			"key": "tenderDetailId",
			"value": ""
		},
		{
			"key": "tenderDocumentId2",
			"value": ""
		}
	]
}